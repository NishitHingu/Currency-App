{"version":3,"sources":["Context/FetchContext.js","Context/CountryKeysContext.js","Components/Home.js","Components/CountryOption.js","Components/Converter.js","Components/Loader.js","Components/History.js","Components/LinkItem.js","Components/NavOptions.js","Components/EnhancedTableHead.js","Components/CryptoCurrency.js","Components/CryptoCurrencyWithID.js","App.js","index.js"],"names":["FetchContext","createContext","FetchContextProvider","props","useState","data","setData","base","a","axios","get","then","result","rates","catch","error","console","log","Promise","reject","symbol","start","end","id","Provider","value","countryTable","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","GetDataWithBase","GetHistoryData","GetCryptoCurrencyData","FetchCryptoData","CryptoCurrencyCountries","CryptoHistoryFetch","children","CountryKeysContext","CountryKeysContextProvider","useContext","keys","setKeys","isKeySet","setIsKeySet","failed","Object","sort","FetchKeys","useStyles","makeStyles","theme","paper","padding","spacing","paddingTop","paddingRight","height","minWidth","color","palette","text","secondary","cover","overflow","root","flexGrow","toolTip","opacity","backgroundColor","background","default","border","divider","Home","setBase","plotData","setPlotData","useTheme","compare","b","getPlotData","plot","forEach","index","key","push","name","rank","useEffect","setPath","document","querySelector","style","setProperty","getKeys","dataArray","entries","maxValue","minValue","minKey","fetchData","CustomToolTip","active","payload","label","className","classes","Grid","container","item","xs","Typography","variant","align","marginTop","sm","Paper","ResponsiveContainer","width","LineChart","margin","left","right","top","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","YAxis","Tooltip","content","Legend","Line","type","success","strokeWidth","animationDuration","marginBottom","map","element","md","cursor","Button","textTransform","component","Link","to","noWrap","formControl","marginLeft","CountryOption","countryNames","onChange","optionNo","FormControl","InputLabel","Select","labelId","e","country","MenuItem","options","tabs","display","alignItems","seperator","fontSize","paddingLeft","inputFeildArea","justifyContent","Converter","getDate","y","date","Date","dd","String","padStart","mm","getMonth","getFullYear","useReducer","state","action","countries","changedFirstCountry","firstCountry","secondCountry","firstValue","secondValue","firstVal","secondVal","conversionRate","rate","Error","endDate","converterData","dispatchConverterData","length","startDate","newPlotData","convRate","newValue","direction","target","alert","TextField","InputLabelProps","shrink","elevation","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","domain","dataMin","Math","floor","toFixed","dataMax","ceil","iconSize","Area","primary","fillOpacity","fill","Loader","opts","lines","radius","scale","corners","speed","rotate","animation","fadeColor","shadow","zIndex","position","loader","useRef","Spinner","spin","current","ref","dialogBox","m","yyyy","parseInt","History","keysInitialise","useParams","plotCountries","firstRender","loading","failedToLoadData","fetchingData","newDate","dataTime","plotAndTime","dispatchPlotAndTime","countryOpen","baseOpen","dialogBoxInput","dispatchDialogBox","setTimeout","join","filter","handleClickCountryOpenDialogBox","handleDailogBoxInputChange","handleCloseBaseDialogBox","Tabs","event","textColor","indicatorColor","centered","Tab","justify","marginRight","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","open","onClose","DialogTitle","DialogContent","DialogActions","includes","info","href","countryName","IconButton","aria-label","removeCountry","bottom","syncId","LinkItem","icon","renderLink","React","useMemo","forwardRef","itemProps","ListItem","button","ListItemIcon","ListItemText","toolbar","mixins","NavOptions","wrapper","Divider","List","EnhancedTableHead","order","orderBy","onRequestSort","headCell","TableHead","TableRow","TableCell","disablePadding","sortDirection","allowSort","TableSortLabel","property","visuallyHidden","table","clip","logoWrapper","textDecoration","logo","incresePercentage","createData","ranking","price","imgSrc","marketChange24h","marketChange7d","totalVolume","marketCap","headCells","numeric","descendingComparator","stableSort","array","comparator","stabilizedThis","el","CryptoCurrency","page","rowsPerPage","pages","paginationData","dispatchPaginationData","cryptoData","failedToLoad","cryptoCurrencyData","dispatchCryptoCurrencyData","displayData","market_cap_rank","current_price","image","price_change_percentage_24h","price_change_percentage_7d_in_currency","total_volume","market_cap","sparkline_in_7d","TableContainer","Table","stickyHeader","isAsc","TableBody","slice","row","scope","src","alt","toLocaleString","size","Box","hide","dot","connectNulls","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","block","widht","increase","main","description","maxHeight","readMore","graphWrapper","countryOption","breakpoints","down","CryptoCurrencyWithID","setLoading","descriptionCut","setDescriptionCut","supportedCountries","setSupportedCountries","selectedPlot","setSelectedPlot","setFailedToLoad","score","communityDataScore","reddit_subscribers","twitter_followers","market_rank","market_high24","market_low24","market_change24","price_change24h","price_change30d","price_change1Y","volume","supply","homePageLink","coinGecko","community","reddit","twitter","market","high24","low24","change24","change24h","change30d","change1Y","createPlotData","convertToLocaleString","toUpperCase","GetCountries","newData","small","en","coingecko_rank","coingecko_score","community_score","community_data","market_data","toLocaleLowerCase","high_24h","low_24h","market_cap_change_percentage_24h","price_change_percentage_30d","price_change_percentage_1y","total_supply","links","homepage","historyFetch","handleSetSelectedPlot","option","flexWrap","toLocaleUpperCase","subtitle","dangerouslySetInnerHTML","__html","ButtonGroup","disableElevation","drawerWidth","drawer","up","flexShrink","appBar","menuButton","drawerPaper","title","boxSizing","maxWidth","minHeight","App","window","DrawerState","setDrawerState","currentPath","setCurrentPath","darkMode","setDarkMode","themenew","createMuiTheme","DrawerToggle","undefined","body","ThemeProvider","basename","CssBaseline","AppBar","Toolbar","edge","Hidden","mdUp","Drawer","anchor","ModalProps","keepMounted","smDown","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a1c6abe.chunk.js","sourcesContent":["import { useState, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const FetchContext = createContext();\n\nconst FetchContextProvider = (props) => {\n  const countryTable = {\n    AUD: \"Australia\",\n    BGN: \"Bulgaria\",\n    BRL: \"Brazil\",\n    CAD: \"Canada\",\n    CHF: \"Switzerland\",\n    CNY: \"China\",\n    CZK: \"Czech Republic\",\n    DKK: \"Denmark\",\n    EUR: \"Euro\",\n    GBP: \"United Kingdom\",\n    HKD: \"Hong Kong\",\n    HRK: \"Croatia\",\n    HUF: \"Hungaria\",\n    IDR: \"Indonesia\",\n    ILS: \"Israeli Shekel\",\n    INR: \"India\",\n    ISK: \"Iceland\",\n    JPY: \"Japan\",\n    KRW: \"South Korea\",\n    MXN: \"Mexico\",\n    MYR: \"Malaysia\",\n    NOK: \"Norway\",\n    NZD: \"New Zealand\",\n    PHP: \"Philippines\",\n    PLN: \"Poland\",\n    RON: \"Romania\",\n    RUB: \"Russia\",\n    SEK: \"Sweden\",\n    SGD: \"Singapore\",\n    THB: \"Thailand\",\n    TRY: \"Turkey\",\n    USD: \"United States\",\n    ZAR: \"South Africa\",\n  };\n\n  const [data, setData] = useState();\n\n  async function GetDataWithBase(base) {\n    let result = await axios\n      .get(`https://api.exchangeratesapi.io/latest?base=${base ? base : \"EUR\"}`)\n      .then((result) => {\n        return result.data.rates;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n  async function GetHistoryData(base, symbol, start, end) {\n    let result = await axios\n      .get(\n        `https://api.exchangeratesapi.io/history?start_at=${start}&end_at=${end}&symbols=${symbol}&base=${\n          base ? base : \"EUR\"\n        }`\n      )\n      .then((result) => {\n        return result.data.rates;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function GetCryptoCurrencyData(base) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${\n          base ? base : \"EUR\"\n        }&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=2C24h%2C7d`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function FetchCryptoData(id) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/${\n          id ? id : \"bitcoin\"\n        }?localization=false&tickers=false&market_data=true&community_data=true&developer_data=false&sparkline=false`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function CryptoCurrencyCountries() {\n    let result = await axios\n      .get(\"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\")\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function CryptoHistoryFetch(base, id) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/${\n          id ? id : \"bitcoin\"\n        }/market_chart?vs_currency=${\n          base ? base : \"eur\"\n        }&days=356&interval=daily`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  return (\n    <FetchContext.Provider\n      value={{\n        data,\n        countryTable,\n        setData,\n        GetDataWithBase,\n        GetHistoryData,\n        GetCryptoCurrencyData,\n        FetchCryptoData,\n        CryptoCurrencyCountries,\n        CryptoHistoryFetch,\n      }}\n    >\n      {props.children}\n    </FetchContext.Provider>\n  );\n};\n\nexport default FetchContextProvider;\n","import React from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { useState, useContext, createContext } from \"react\";\n\nexport const CountryKeysContext = createContext();\n\nconst CountryKeysContextProvider = (props) => {\n  const { GetDataWithBase } = useContext(FetchContext);\n  const [keys, setKeys] = useState([]);\n  const [isKeySet, setIsKeySet] = useState(false);\n  async function FetchKeys() {\n    let failed = false;\n    let result = await GetDataWithBase().catch(error => {\n      failed = true;\n    });\n    if (typeof result === \"object\" && !failed) {\n      result = { ...result, EUR: 1 };\n      result = Object.keys(result);\n      result.sort();\n      setKeys(result);\n      setIsKeySet(true);\n      return result;\n    } else {\n      return Promise.reject(result);\n    }\n  }\n  return (\n    <CountryKeysContext.Provider value={{ keys, isKeySet, FetchKeys }}>\n      {props.children}\n    </CountryKeysContext.Provider>\n  );\n};\n\nexport default CountryKeysContextProvider;\n","import { useEffect, useContext, useState } from \"react\";\nimport { Paper, Grid, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Line,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    height: \"100%\",\n    minWidth: 500,\n    color: theme.palette.text.secondary,\n  },\n  cover: {\n    height: \"70vh\",\n    overflow: \"scroll\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.default,\n    border: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nconst Home = (props) => {\n  const { countryTable, setData, GetDataWithBase } = useContext(FetchContext);\n  const { keys, isKeySet, FetchKeys } = useContext(CountryKeysContext);\n  const [base , setBase] = useState();\n  const [plotData, setPlotData] = useState([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"Home\");\n\n    // Decrease the scrollbar height soo the whit dot in dark mode is not visible\n    const r = document.querySelector(\":root\");\n    r.style.setProperty(\"--scrollHeight\", \"0\");\n\n    if (!isKeySet) {\n      async function getKeys() {\n        // eslint-disable-next-line no-unused-vars\n        let result = await FetchKeys();\n      }\n      getKeys();\n    }\n    const fetchData = async () => {\n      let result = await GetDataWithBase(\"INR\");\n      if (typeof result === \"object\") {\n        let dataArray = Object.entries(result);\n        let maxValue = dataArray[0][1];\n        let minValue = dataArray[0][1];\n        let minKey = dataArray[0][0];\n        dataArray.forEach(([key, value]) => {\n          if (value > maxValue) {\n            maxValue = value;\n          } else if (minValue > value) {\n            minValue = value;\n            minKey = key;\n          }\n        });\n        result = await GetDataWithBase(minKey);\n        dataArray = Object.entries(result);\n        setBase(minKey);\n        setPlotData(getPlotData(dataArray));\n        setData(result);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function compare(a, b) {\n    return (a[\"value\"] - b[\"value\"]) * -1;\n  }\n\n  function getPlotData(data) {\n    let plot = [];\n    data.forEach(([key, value], index) => {\n      plot.push({ name: key, value: 1 / value, rank: 1 });\n    });\n    plot = plot.sort(compare);\n    plot.forEach((data, index) => data.rank = index + 1);\n    return plot;\n  }\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      let rank =  payload ? payload[0].payload.rank : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Rank: ${rank}`}</p>\n          <p>{`Country: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" align='center'>Currency Ranking</Typography>\n          <Typography variant=\"body1\" style={{marginTop: '1rem',}}>\n          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Commodi itaque dignissimos molestias doloribus veritatis repellat omnis illo aspernatur beatae ipsam distinctio, molestiae deleniti aperiam quo similique illum doloremque voluptates quaerat.\n    Quas exercitationem itaque iusto minus. Autem ea suscipit beatae, magnam accusantium in necessitatibus odit. Illum explicabo amet tenetur consectetur unde, quam ex reprehenderit suscipit earum corporis asperiores numquam, consequatur magnam!\n          </Typography>\n        </Grid>\n        <Grid item xs={1} sm={false}></Grid>\n        <Grid item xs={12} sm={10} className={classes.cover}>\n          <Paper className={classes.paper}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={plotData} margin={{left: 5, right: 10, top: 10}}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey='rank'\n                  padding={{ left: 15, right: 15 }}\n                  stroke={theme.palette.text.secondary}\n                />\n                <YAxis stroke={theme.palette.text.secondary} />\n                <Tooltip content={<CustomToolTip />} />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success[theme.palette.type]}\n                  strokeWidth={3}\n                  name={`Conversion rate with base country as ${countryTable[base]}`}\n                  animationDuration={1000}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>        \n        <Grid item xs={1} sm={false}></Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" style={{ marginBottom: '-1rem', marginTop: '0.5rem'}}>\n            Ploted Countries\n          </Typography>\n        </Grid>\n        <Grid container spacing={1} style={{ margin: ' 0 1rem',}}>\n          {keys.map((element) => {\n            return (\n              <Grid key={element} item xs={6} sm={4} md={3} style={{ cursor: 'default'}} >\n                <Button\n                  style={{textTransform: 'none'}}\n                  component={Link}\n                  to={`/history/${element}`}\n                >\n                <Typography variant='body2' noWrap={true}>\n                {element + \": \"}\n                  {countryTable[element]}\n                </Typography>\n                </Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, MenuItem, Select, InputLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    minWidth: 90,\n  },\n}));\nconst CountryOption = (props) => {\n  const { value, countryNames, onChange, optionNo, label } = props;\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      variant=\"outlined\"\n      className={classes.formControl}\n    >\n    { label && <InputLabel id={`${label}-optionNo-label`}>{label}</InputLabel> }\n      <Select\n        labelId={`${label}-optionNo-label`}\n        id={label}\n        label={label}\n        value={value}\n        onChange={(e) => onChange(e)}\n      >\n        {countryNames.map((country) => {\n          return (\n            <MenuItem key={country + optionNo} value={country}>\n              {country}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default CountryOption;\n","import { TextField, Grid, Paper } from \"@material-ui/core\";\nimport { useEffect, useContext, useReducer } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"60vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 2rem 1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  seperator: {\n    fontSize: 24,\n    paddingLeft: 10,\n  },\n  inputFeildArea: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n}));\n\nconst Converter = (props) => {\n  // Reducer function\n  const converterDataReducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_COUNTRIES\":\n        return {\n          ...state,\n          countries: action.payload.countries,\n        };\n      case \"UPDATE_FIRSTCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: true,\n          firstCountry: action.payload.key,\n        };\n      case \"UPDATE_SECONDCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: false,\n          secondCountry: action.payload.key,\n        };\n      case \"UPDATE_FIRSTVALUE\":\n        return {\n          ...state,\n          firstValue: action.payload,\n        };\n      case \"UPDATE_SECONDVALUE\":\n        return {\n          ...state,\n          secondValue: action.payload,\n        };\n      case \"UPDATEVALUES\":\n        return {\n          ...state,\n          firstValue: action.payload.firstVal,\n          secondValue: action.payload.secondVal,\n        };\n      case \"UPDATE_CONVERSIONRATE\":\n        return {\n          ...state,\n          conversionRate: action.payload,\n        };\n      case \"SETPLOTDATA&CONVERTIONRATE\":\n        return {\n          ...state,\n          plotData: action.payload.plotData,\n          conversionRate: action.payload.rate,\n        };\n      default:\n        throw new Error();\n    }\n  };\n\n  const getDate = (y) => {\n    let date = new Date();\n    let dd = String(date.getDate()).padStart(2, \"0\");\n    let mm = String(date.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    let yyyy = date.getFullYear() - y;\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n\n  const { setData, GetHistoryData } = useContext(FetchContext);\n  const { keys, isKeySet, FetchKeys } = useContext(CountryKeysContext);\n  const theme = useTheme();\n  const [converterData, dispatchConverterData] = useReducer(\n    converterDataReducer,\n    {\n      countries: [\"EUR\", \"INR\"],\n      firstCountry: \"EUR\",\n      firstValue: 1,\n      secondCountry: \"INR\",\n      secondValue: 1,\n      conversionRate: 1,\n      endDate: getDate(0),\n      plotData: [],\n      changedFirstCountry: true,\n    }\n  );\n\n  useEffect(() => {\n    props.setPath(\"Converter\");\n    if (isKeySet && keys.length !== converterData.countries.length) {\n      dispatchConverterData({\n        type: \"SET_COUNTRIES\",\n        payload: {\n          countries: keys,\n        },\n      });\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let result = await FetchKeys()\n          dispatchConverterData({\n            type: \"SET_COUNTRIES\",\n            payload: {\n              countries: result,\n            },\n          });\n      }\n      getKeys();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    const startDate = getDate(1);\n    const fetchData = async () => {\n      let result = await GetHistoryData(\n        converterData.firstCountry,\n        converterData.secondCountry,\n        startDate,\n        converterData.endDate\n      );\n      if (typeof result === \"object\") {\n        let newPlotData = [];\n        result = Object.entries(result);\n        setData(result);\n        result.forEach(([key, value]) => {\n          newPlotData.push({\n            name: key,\n            value: value[converterData.secondCountry],\n          });\n        });\n        newPlotData.sort(compare); // Some data is jummbled that's why this sort\n        let convRate = newPlotData[newPlotData.length - 1].value;\n        dispatchConverterData({\n          type: \"SETPLOTDATA&CONVERTIONRATE\",\n          payload: {\n            plotData: newPlotData,\n            rate: convRate,\n          },\n        });\n        if (converterData.changedFirstCountry) {\n          let newValue = converterData.firstValue * convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: converterData.firstValue,\n              secondVal: newValue,\n            },\n          });\n        } else {\n          let newValue = converterData.secondValue / convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: newValue,\n              secondVal: converterData.secondValue,\n            },\n          });\n        }\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [converterData.secondCountry, converterData.firstCountry]);\n\n  const handleChangeOption1 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.secondCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_FIRSTCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const handleChangeOption2 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.firstCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_SECONDCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const changeInput1 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    }\n    let newValue = converterData.conversionRate * value;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: value,\n        secondVal: newValue,\n      },\n    });\n  };\n  const changeInput2 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    }\n    let newValue = value / converterData.conversionRate;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: newValue,\n        secondVal: value,\n      },\n    });\n  };\n\n  const CustomToolTip = ({ active, payload }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n        <Grid container direction=\"column\" spacing={2}>\n          <div className={classes.inputFeildArea}>\n            <CountryOption\n              value={converterData.firstCountry}\n              onChange={handleChangeOption1}\n              countryNames={converterData.countries}\n              optionNo={1}\n              label={\"Base\"}\n            />\n            <span className={classes.seperator}> : </span>\n            <CountryOption\n              value={converterData.secondCountry}\n              onChange={handleChangeOption2}\n              countryNames={converterData.countries}\n              optionNo={2}\n              label={\"Country\"}\n            />\n          </div>\n          <div className={classes.inputFeildArea}>\n            <TextField\n              style={{ marginLeft: 10 }} // To aline it with the country options\n              id=\"outlined-number\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              value={converterData.firstValue}\n              onChange={changeInput1}\n            />\n            <span className={classes.seperator}> : </span>\n            <TextField\n              style={{ marginLeft: 10 }} // To aline it with the country options\n              id=\"outlined-number\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              value={converterData.secondValue}\n              onChange={changeInput2}\n            />\n          </div>\n          <Grid item container style={{ marginTop: 5 }}>\n            <Grid item xs={false} sm={1}></Grid>\n            <Grid className={classes.cover} item xs={12} sm={10}>\n              <Paper className={classes.paper} elevation={4}>\n                <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n                  <AreaChart data={converterData.plotData}>\n                    <defs>\n                      <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop\n                          offset=\"5%\"\n                          stopColor=\"#8884d8\"\n                          stopOpacity={0.9}\n                        />\n                        <stop\n                          offset=\"95%\"\n                          stopColor=\"#8884d8\"\n                          stopOpacity={0.1}\n                        />\n                      </linearGradient>\n                    </defs>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis\n                      dataKey=\"name\"\n                      stroke={theme.palette.text.secondary}\n                    />\n                    <YAxis\n                      stroke={theme.palette.text.secondary}\n                      type=\"number\"\n                      domain={[\n                        (dataMin) => {\n                          if (dataMin > 1) {\n                            return Math.floor(dataMin);\n                          } else {\n                            return (dataMin - (2 * dataMin) / 10).toFixed(3);\n                          }\n                        },\n                        (dataMax) => {\n                          if (dataMax > 1) {\n                            return Math.ceil(dataMax);\n                          } else {\n                            return (dataMax + (3 * dataMax) / 10).toFixed(3);\n                          }\n                        },\n                      ]}\n                    />\n                    <Tooltip content={<CustomToolTip />} />\n                    <Legend iconSize={0} />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"value\"\n                      name={`Data From: ${getDate(1)} To: ${\n                        converterData.endDate\n                      }`}\n                      stroke={theme.palette.text.primary}\n                      fillOpacity={1}\n                      fill=\"url(#colorUv)\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </Paper>\n            </Grid>\n            <Grid item xs={false} sm={1}></Grid>\n          </Grid>\n        </Grid>\n  );\n};\n\nexport default Converter;\n","import { useTheme } from '@material-ui/core';\nimport React, { useEffect, useRef } from 'react';\nimport { Spinner } from 'spin.js';\n\nconst Loader = (props) => {\n    const theme = useTheme();\n    let opts = {\n        lines: 11, // The number of lines to draw\n        length: 0, // The length of each line\n        width: 20, // The line thickness\n        radius: 44, // The radius of the inner circle\n        scale: 0.5, // Scales overall size of the spinner\n        corners: 1, // Corner roundness (0..1)\n        speed: 0.8, // Rounds per second\n        rotate: 0, // The rotation offset\n        animation: 'spinner-line-shrink', // The CSS animation name for the lines\n        direction: 1, // 1: clockwise, -1: counterclockwise\n        color: theme.palette.text.primary, // CSS color or array of colors\n        fadeColor: 'transparent', // CSS color or array of colors\n        top: '50%', // Top position relative to parent\n        left: '50%', // Left position relative to parent\n        shadow: '0 0 1px transparent', // Box-shadow for the lines\n        zIndex: 2000000000, // The z-index (defaults to 2e9)\n        className: 'spinner', // The CSS class to assign to the spinner\n        position: 'absolute', // Element positioning\n      };\n    const loader = useRef(null);\n    useEffect(() => {\n      // eslint-disable-next-line no-unused-vars\n      let spinner = new Spinner(opts).spin(loader.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    return (\n        <div style={{ width: '100%', height: \"100%\"}} ref={loader}>\n        </div>\n    );\n}\n \nexport default Loader;","import { useEffect, useContext, useReducer } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Grid,\n  Typography,\n  IconButton,\n  Link,\n} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport Loader from \"./Loader\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"50vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 0.5rem 1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: \"hsla(0,0%,100%,0.4)\",\n  },\n  dialogBox: {\n    margin: \"2rem\",\n  },\n}));\n\nconst getDate = (y, m) => {\n  let date = new Date();\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1 - m).padStart(2, \"0\"); // January is 0!\n  let yyyy = date.getFullYear() - y;\n  // Edge cases so if month is jan -m will gives desired results\n  if (parseInt(mm) <= 0) {\n    yyyy = String(parseInt(yyyy) - 1);\n    mm = String(12 + parseInt(mm));\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst History = (props) => {\n  const { keys: keysInitialise, isKeySet, FetchKeys } = useContext(\n    CountryKeysContext\n  );\n  const { id } = useParams();\n\n  const timeAndPlotReducer = (state, action) => {\n    switch (action.type) {\n      case \"INTIALSETPLOTCOUNTRIES\":\n        return {\n          ...state,\n          keys: action.payload.keys,\n          plotCountries: action.payload.countries,\n          firstRender: false,\n        };\n      case \"SETPLOTDATA\":\n        return {\n          ...state,\n          plotData: action.payload.data,\n          loading: false,\n          failedToLoadData: false,\n          fetchingData: false,\n        };\n      case \"SETSTARTDATE\":\n        return {\n          ...state,\n          startDate: action.payload.newDate,\n          dataTime: action.payload.newValue,\n          fetchingData: true,\n        };\n      case \"SETPLOTCOUNTRIES\":\n        return {\n          ...state,\n          plotCountries: action.payload.data,\n          loading: true,\n        };\n      case \"SETBASE\":\n        return {\n          ...state,\n          base: action.payload.base,\n          fetchingData: true,\n        };\n      case \"REMOVEDCOUNTRY\":\n        return {\n          ...state,\n          plotCountries: action.payload.countries,\n        };\n      case \"SET2\":\n        return {\n          ...state,\n        };\n      case \"FAILEDTOLOAD\":\n        return {\n          ...state,\n          failedToLoadData: true,\n          fetchingData: false,\n        };\n      default:\n        return { ...state };\n    }\n  };\n\n  const dialogBoxReducer = (state, action) => {\n    switch (action.type) {\n      case \"COUNTRYOPEN\":\n        return {\n          ...state,\n          countryOpen: true,\n        };\n      case \"BASEOPEN\":\n        return {\n          ...state,\n          baseOpen: true,\n        };\n      case \"COUNTRYCLOSE\":\n        return {\n          ...state,\n          countryOpen: false,\n          dialogBoxInput: \"\",\n        };\n      case \"BASECLOSE\":\n        return {\n          ...state,\n          baseOpen: false,\n          dialogBoxInput: \"\",\n        };\n      case \"EMPTYBOX\":\n        return {\n          ...state,\n          dialogBoxInput: \"\",\n        };\n      case \"SETDIALOGBOX\":\n        return {\n          ...state,\n          dialogBoxInput: action.payload,\n        };\n      default:\n        break;\n    }\n  };\n\n  const { GetHistoryData } = useContext(FetchContext);\n  const [plotAndTime, dispatchPlotAndTime] = useReducer(timeAndPlotReducer, {\n    plotCountries: [],\n    plotData: [],\n    base: \"EUR\",\n    keys: [\"EUR\", \"INR\"],\n    dataTime: \"1M\",\n    startDate: getDate(0, 1),\n    endDate: getDate(0, 0),\n    firstRender: true,\n    fetchingData: true,\n    loading: true,\n  });\n  // eslint-disable-next-line no-unused-vars\n  const [dialogBox, dispatchDialogBox] = useReducer(dialogBoxReducer, {\n    countryOpen: false,\n    baseOpen: false,\n    dialogBoxInput: \"\",\n  });\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"History\");\n    \n    // Decrease the scrollbar height soo the whit dot in dark mode is not visible\n    const r = document.querySelector(\":root\");\n    r.style.setProperty(\"--scrollHeight\", \"0\");\n\n    if (isKeySet && keysInitialise.length !== plotAndTime.keys.length) {\n      dispatchPlotAndTime({\n        type: \"INTIALSETPLOTCOUNTRIES\",\n        payload: {\n          keys: keysInitialise,\n          countries: [id ? id : \"INR\"],\n        },\n      });\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let failed = false;\n        let result = await FetchKeys().catch(error => {\n          setTimeout(() => {\n            dispatchPlotAndTime({\n              type: \"FAILEDTOLOAD\", \n            });\n          }, 1000);\n          failed = true;\n        });\n        if (!failed) {\n          dispatchPlotAndTime({\n            type: \"INTIALSETPLOTCOUNTRIES\",\n            payload: {\n              keys: result,\n              countries: [id ? id : \"INR\"],\n            },\n          });\n        };      \n      };\n      getKeys();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    if (!plotAndTime.firstRender) {\n      const fetchData = async () => {\n        let failed = false;\n        let result = await GetHistoryData(\n          plotAndTime.base,\n          plotAndTime.plotCountries.join(\",\"),\n          plotAndTime.startDate,\n          plotAndTime.endDate\n        ).catch(error => {\n          setTimeout(() => {\n            dispatchPlotAndTime({\n              type: \"FAILEDTOLOAD\",\n            });\n          }, 1000);\n          failed = true;\n        });\n        if (typeof result === \"object\" && !failed) {\n          let newPlotData = [];\n          result = Object.entries(result);\n          result.forEach(([key, value]) => {\n            newPlotData.push({ name: key, ...value });\n          });\n          while (newPlotData.length > 500) {\n            newPlotData = newPlotData.filter((data, index) =>\n              index % 2 ? data : null\n            );\n          }\n          newPlotData.sort(compare); // Some data is jummbled that's why this sort\n          dispatchPlotAndTime({\n            type: \"SETPLOTDATA\",\n            payload: {\n              data: newPlotData,\n            },\n          });\n        }\n      };\n      fetchData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plotAndTime.base, plotAndTime.plotCountries, plotAndTime.startDate]);\n\n  const handleChangeTime = (event, newValue) => {\n    let newDate;\n    switch (newValue) {\n      case \"1M\":\n        newDate = getDate(0, 1);\n        break;\n\n      case \"1Y\":\n        newDate = getDate(1, 0);\n        break;\n\n      case \"5Y\":\n        newDate = getDate(5, 0);\n        break;\n\n      case \"MAX\":\n        newDate = getDate(12, 0);\n        break;\n\n      default:\n        break;\n    }\n    dispatchPlotAndTime({\n      type: \"SETSTARTDATE\",\n      payload: {\n        newDate,\n        newValue,\n      },\n    });\n  };\n\n  // Dialog box click functions\n\n  const handleClickCountryOpenDialogBox = () => {\n    dispatchDialogBox({\n      type: \"COUNTRYOPEN\",\n    });\n  };\n  const handleCloseCountryDialogBox = () => {\n    dispatchDialogBox({\n      type: \"COUNTRYCLOSE\",\n    });\n  };\n  const handleCountryDialogBoxSubmit = () => {\n    if (\n      dialogBox.dialogBoxInput === plotAndTime.base ||\n      plotAndTime.plotCountries.includes(dialogBox.dialogBoxInput)\n    ) {\n      alert(\"Country already ploted or it is selected as the Base\");\n      dispatchDialogBox({\n        type: \"EMPTYBOX\",\n      });\n    } else {\n      dispatchPlotAndTime({\n        type: \"SETPLOTCOUNTRIES\",\n        payload: {\n          data: [...plotAndTime.plotCountries, dialogBox.dialogBoxInput],\n        },\n      });\n      dispatchDialogBox({\n        type: \"COUNTRYCLOSE\",\n      });\n    }\n  };\n\n  const handleDailogBoxInputChange = (e) => {\n    dispatchDialogBox({\n      type: \"SETDIALOGBOX\",\n      payload: e.target.value,\n    });\n  };\n\n  const handleClickBaseOpenDialogBox = () => {\n    dispatchDialogBox({\n      type: \"BASEOPEN\",\n    });\n  };\n  const handleCloseBaseDialogBox = () => {\n    dispatchDialogBox({\n      type: \"BASECLOSE\",\n    });\n  };\n  const handleBaseDialogBoxSubmit = (e) => {\n    if (plotAndTime.plotCountries.includes(dialogBox.dialogBoxInput)) {\n      alert(\"Base and country cannot be same\");\n      dispatchDialogBox({\n        type: \"EMPTYBOX\",\n      });\n    } else {\n      dispatchPlotAndTime({\n        type: \"SETBASE\",\n        payload: {\n          base: dialogBox.dialogBoxInput,\n        },\n      });\n      dispatchDialogBox({\n        type: \"BASECLOSE\",\n      });\n    }\n  };\n\n  // Removing a country from the List\n  const removeCountry = (country) => {\n    let countries = [...plotAndTime.plotCountries];\n    countries = countries.filter((item) => item !== country);\n    dispatchPlotAndTime({\n      type: \"REMOVEDCOUNTRY\",\n      payload: {\n        countries,\n      },\n    });\n  };\n\n  // Custom tooltip for the Graph\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item container spacing={0}>\n        <Grid item xs={12} className={classes.options}>\n          <Tabs\n            className={classes.tabs}\n            value={plotAndTime.dataTime}\n            onChange={handleChangeTime}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            centered\n          >\n            <Tab label=\"1M\" value=\"1M\" />\n            <Tab label=\"1Y\" value=\"1Y\" />\n            <Tab label=\"5Y\" value=\"5Y\" />\n            <Tab label=\"Max\" value=\"MAX\" />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12} container style={{ flexGrow: 1 }} justify=\"center\">\n          <Button\n            style={{ marginRight: \"0.5rem\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            elevation={2}\n            onClick={handleClickCountryOpenDialogBox}\n          >\n            + Add Country\n          </Button>\n          <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            open={dialogBox.countryOpen}\n            onClose={handleClickCountryOpenDialogBox}\n          >\n            <div className={classes.dialogBox}>\n              <DialogTitle>Choose Country</DialogTitle>\n              <DialogContent>\n                <CountryOption\n                  value={dialogBox.dialogBoxInput}\n                  onChange={handleDailogBoxInputChange}\n                  countryNames={plotAndTime.keys}\n                  optionNo={1}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleCloseCountryDialogBox}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleCountryDialogBoxSubmit}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Ok\n                </Button>\n              </DialogActions>\n            </div>\n          </Dialog>\n          <Button\n            style={{ marginLeft: \"0.5rem\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            elevation={2}\n            onClick={handleClickBaseOpenDialogBox}\n          >\n            Change Base\n          </Button>\n          <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            open={dialogBox.baseOpen}\n            onClose={handleCloseBaseDialogBox}\n          >\n            <div className={classes.dialogBox}>\n              <DialogTitle>Choose Base</DialogTitle>\n              <DialogContent>\n                <CountryOption\n                  value={dialogBox.dialogBoxInput}\n                  onChange={handleDailogBoxInputChange}\n                  countryNames={plotAndTime.keys}\n                  optionNo={1}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleCloseBaseDialogBox}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleBaseDialogBoxSubmit}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Ok\n                </Button>\n              </DialogActions>\n            </div>\n          </Dialog>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          style={{ flexGrow: 1, marginTop: \"0.5rem\" }}\n          direction=\"column\"\n          justify=\"center\"\n        >\n          <Typography variant=\"caption\" align=\"center\" component=\"div\">\n            <span style={{ marginRight: \"0.5rem\" }}>\n              {`Data From: ${plotAndTime.startDate} `}\n            </span>\n            <span\n              style={{ marginLeft: \"0.5rem\" }}\n            >{` To: ${plotAndTime.endDate}`}</span>\n          </Typography>\n          <Typography variant=\"caption\" align=\"center\" component=\"div\">\n            <span style={{ marginRight: \"0.5rem\" }}>\n              Base Country: {plotAndTime.base}\n            </span>\n            <span style={{ marginLeft: \"0.5rem\" }}>\n              PlotedCountries:\n              <span style={{ marginLeft: \"0.25rem\" }}>\n                {plotAndTime.plotCountries.map((item, index) => (\n                  <Link\n                    key={item + index}\n                    style={{ color: theme.palette.success.info }}\n                    href={`#${item}`}\n                  >\n                    {index !== plotAndTime.plotCountries.length - 1\n                      ? item + \",\"\n                      : item}\n                  </Link>\n                ))}\n              </span>\n            </span>\n          </Typography>\n        </Grid>\n      </Grid>\n      {plotAndTime.failedToLoadData && (\n        <Grid\n          item\n          xs={12}\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ marginTop: \"3rem\" }}\n        >\n          <Typography component=\"div\" variant=\"h4\" align=\"center\">\n            No data found\n          </Typography>\n        </Grid>\n      )}\n      {!plotAndTime.failedToLoadData ? (\n        plotAndTime.fetchingData ? (\n          <Grid item xs={12} style={{ position: \"relative\", height: \"50vh\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          plotAndTime.plotCountries.map((countryName, index) => (\n            <Grid item id={countryName + index} container style={{ marginTop: 5 }}>\n              <Grid item xs={false} sm={1}></Grid>\n              <Grid className={classes.cover} item xs={12} sm={10}>\n                <Paper\n                  style={{ position: \"relative\" }}\n                  className={classes.paper}\n                  elevation={4}\n                >\n                  <Grid container>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={10}>\n                      <Typography variant=\"h4\" align=\"center\">\n                        {countryName}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={1}>\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => removeCountry(countryName)}\n                      >\n                        <HighlightOffOutlinedIcon color=\"secondary\" />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                  {!plotAndTime.loading ||\n                  plotAndTime.plotCountries.length - 1 !== index ? (\n                    <ResponsiveContainer width={\"100%\"} height={\"90%\"}>\n                      <AreaChart\n                        data={plotAndTime.plotData}\n                        margin={{\n                          top: 10,\n                          right: 30,\n                          left: 0,\n                          bottom: 10,\n                        }}\n                        syncId=\"Chart\"\n                      >\n                        <defs>\n                          <linearGradient\n                            id=\"colorUv\"\n                            x1=\"0\"\n                            y1=\"0\"\n                            x2=\"0\"\n                            y2=\"1\"\n                          >\n                            <stop\n                              offset=\"5%\"\n                              stopColor=\"#8884d8\"\n                              stopOpacity={0.9}\n                            />\n                            <stop\n                              offset=\"95%\"\n                              stopColor=\"#8884d8\"\n                              stopOpacity={0.1}\n                            />\n                          </linearGradient>\n                        </defs>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                          dataKey=\"name\"\n                          stroke={theme.palette.text.secondary}\n                        />\n                        <YAxis\n                          stroke={theme.palette.text.secondary}\n                          type=\"number\"\n                          domain={[\n                            (dataMin) => {\n                              if (dataMin > 1) {\n                                return Math.floor(dataMin);\n                              } else {\n                                return (dataMin - (2 * dataMin) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                            (dataMax) => {\n                              if (dataMax > 1) {\n                                return Math.ceil(dataMax);\n                              } else {\n                                return (dataMax + (3 * dataMax) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                          ]}\n                        />\n                        <Tooltip content={<CustomToolTip />} />\n                        <Area\n                          type=\"monotone\"\n                          dataKey={countryName}\n                          stroke={theme.palette.text.secondary}\n                          fillOpacity={1}\n                          fill=\"url(#colorUv)\"\n                        />\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"95%\",\n                        height: \"70%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Loader />\n                    </div>\n                  )}\n                </Paper>\n              </Grid>\n              <Grid item xs={false} sm={1}></Grid>\n            </Grid>\n          ))\n        )\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default History;\n","import { ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n\nconst LinkItem = ( props ) => {\n    const {icon, primary, to} = props;\n    \n    const renderLink = React.useMemo(\n        () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n        [to],\n      );\n   \n    return (\n        // <RouterLink to={to}>{primary}</RouterLink>\n        <li>\n        <ListItem button component={renderLink}>\n            {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n        </ListItem>\n        </li>\n    );\n}\n \nexport default LinkItem;\n","import { Divider, List } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinkItem from \"./LinkItem\";\nimport Home from \"@material-ui/icons/Home\";\nimport History from \"@material-ui/icons/History\";\nimport AttachMoneyRoundedIcon from \"@material-ui/icons/AttachMoneyRounded\";\nimport MoneySharpIcon from \"@material-ui/icons/MoneySharp\";\n\nconst useStyles = makeStyles((theme) => ({\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  // wrapper: {\n  //     height: '100%',\n  //     '&::before' : {\n  //         content: '\"\"',\n  //         display: 'block',\n  //         position: \"absolute\",\n  //         left: 0,\n  //         top: 0,\n  //         width: \"100%\",\n  //         height: \"100%\",\n  //         opacity: \"0.6\",\n  //         backgroundImage: 'url(https://images.pexels.com/photos/6120172/pexels-photo-6120172.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500)',\n  //         backgroundRepeat: 'no-repeat',\n  //         backgroundSize: 'cover',\n  //         backgroundPosition: 'center',\n  //     }\n\n  // }\n}));\n\nfunction NavOptions(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.toolbar}></div>\n        <Divider />\n        <List onClick={() => props.onChange()}>\n          <LinkItem to=\"/\" primary=\"Home\" icon={<Home />} />\n          <LinkItem to=\"/history\" primary=\"History\" icon={<History />} />\n          <LinkItem\n            to=\"/converter\"\n            primary=\"Converter\"\n            icon={<AttachMoneyRoundedIcon />}\n          />\n        </List>\n        <Divider />\n        <List>\n          <LinkItem\n            to=\"/cryptoCurrency\"\n            primary=\"CryptoCurrency\"\n            icon={<MoneySharpIcon />}\n          />\n        </List>\n    </div>\n  );\n}\n\nexport default NavOptions;\n","import { TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst EnhancedTableHead = (props) => {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort,\n\t\theadCell,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n\t\t\t\t{headCell.map(headCell => (\n\t\t\t\t\t<TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          > {headCell.allowSort ? <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TableSortLabel\n            >\n              {headCell.label}\n            </TableSortLabel>\n\t\t\t\t\t\t}            \n          </TableCell>\t\t\n\t\t\t\t))}\n\t\t\t</TableRow>\n    </TableHead>\n  );\n};\n\nexport default EnhancedTableHead;\n","import {\n  makeStyles,\n  Paper,\n  TableContainer,\n  Table,\n  TableBody,\n  TablePagination,\n  TableRow,\n  TableCell,\n  Typography,\n  useTheme,\n  Box,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Line, LineChart, YAxis } from \"recharts\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport Loader from \"./Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    height: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  logoWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n  logo: {\n    height: \"1.5rem\",\n    margin: \"0 0.5rem 0 0\",\n  },\n  incresePercentage: {\n    color: \"green\",\n  },\n}));\n\n// Increase scroll height so user can scroll along X-axis\nconst r = document.querySelector(\":root\");\nr.style.setProperty(\"--scrollHeight\", \"5px\");\n\n// Formating data function\nfunction createData(\n  id,\n  ranking,\n  name,\n  price,\n  imgSrc,\n  marketChange24h,\n  marketChange7d,\n  totalVolume,\n  marketCap,\n  plot\n) {\n  let plotData = plot.map((data) => ({ value: data }));\n  plotData = plotData.filter((data, index) => (index % 2 === 0 ? true : false));\n  return {\n    id,\n    ranking,\n    imgSrc,\n    name,\n    price,\n    marketChange24h,\n    marketChange7d,\n    totalVolume,\n    marketCap,\n    plotData,\n  };\n}\n\n// Table Head\nconst headCells = [\n  {\n    id: \"ranking\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: true,\n    label: \"\",\n    allowSort: true,\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    align: \"left\",\n    disablePadding: true,\n    label: \"Name\",\n    allowSort: true,\n  },\n  {\n    id: \"price\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Price\",\n    allowSort: true,\n  },\n  {\n    id: \"marketChange24h\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"24H\",\n    allowSort: true,\n  },\n  {\n    id: \"totalVolume\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Volume\",\n    allowSort: true,\n  },\n  {\n    id: \"marketCap\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Market Cap\",\n    allowSort: true,\n  },\n  {\n    id: \"last7Days\",\n    align: \"center\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Last 7 Days\",\n    allowSort: false,\n  },\n];\n\n// Sorting data functions\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst CryptoCurrency = (props) => {\n  // Reducer function\n  const cryptoReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETDATA\":\n        return {\n          ...state,\n          cryptoData: action.payload.data,\n          loading: false,\n          failedToLoad: false,\n        };\n      case \"UPDATESORTINFO\":\n        return {\n          ...state,\n          order: action.payload.order,\n          orderBy: action.payload.orderBy,\n          failedToLoad: false,\n        };\n      case \"FAILEDTOLOAD\":\n        return {\n          ...state,\n          failedToLoad: true,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n  const paginationReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETPAGE\":\n        return {\n          ...state,\n          page: action.payload.page,\n        };\n      case \"SETROWSPERPAGE\":\n        return {\n          ...state,\n          rowsPerPage: action.payload.pages,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n\n  const [paginationData, dispatchPaginationData] = useReducer(\n    paginationReducer,\n    {\n      page: 0,\n      rowsPerPage: 10,\n    }\n  );\n  const [cryptoCurrencyData, dispatchCryptoCurrencyData] = useReducer(\n    cryptoReducer,\n    {\n      cryptoData: [],\n      order: \"desc\",\n      orderBy: \"marketCap\",\n      loading: true,\n      failedToLoad: false,\n    }\n  );\n  const { GetCryptoCurrencyData } = useContext(FetchContext);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"CryptoCurrency\");\n    async function fetchData() {\n      let failed = false;\n      let result = await GetCryptoCurrencyData().catch((error) => {\n        dispatchCryptoCurrencyData({\n          type: \"FAILEDTOLOAD\",\n        });\n        failed = true;\n      });\n      if (!failed) {\n        let displayData = result.map((result) =>\n          createData(\n            result.id,\n            result.market_cap_rank,\n            result.name,\n            result.current_price,\n            result.image,\n            result.price_change_percentage_24h,\n            result.price_change_percentage_7d_in_currency,\n            result.total_volume,\n            result.market_cap,\n            result.sparkline_in_7d.price\n          )\n        );\n        dispatchCryptoCurrencyData({\n          type: \"SETDATA\",\n          payload: {\n            data: displayData,\n          },\n        });\n      }\n    }\n    fetchData();\n\n    return function cleanUpScroll() {\n      const r = document.querySelector(\":root\");\n      r.style.setProperty(\"--scrollHeight\", \"0\");\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc =\n      cryptoCurrencyData.orderBy === property &&\n      cryptoCurrencyData.order === \"asc\";\n    dispatchCryptoCurrencyData({\n      type: \"UPDATESORTINFO\",\n      payload: {\n        order: isAsc ? \"desc\" : \"asc\",\n        orderBy: property,\n      },\n    });\n  };\n\n  // Pagination Functions\n\n  const handleChangePage = (event, newPage) => {\n    dispatchPaginationData({\n      type: \"SETPAGE\",\n      payload: {\n        page: parseInt(newPage),\n      },\n    });\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    dispatchPaginationData({\n      type: \"SETROWSPERPAGE\",\n      payload: {\n        pages: event.target.value,\n      },\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper\n        style={{ position: \"relative\" }}\n        className={classes.paper}\n        elevation={4}\n      >\n        <TableContainer style={{ height: \"90%\" }}>\n          <Table stickyHeader className={classes.table}>\n            <EnhancedTableHead\n              classes={classes}\n              order={cryptoCurrencyData.order}\n              orderBy={cryptoCurrencyData.orderBy}\n              onRequestSort={handleRequestSort}\n              headCell={headCells}\n            ></EnhancedTableHead>\n            {cryptoCurrencyData.failedToLoad ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell style={{ border: \"none\" }}>\n                    {\" \"}\n                    {/*To remove the unwanted line apperaing at the edge*/}\n                    <span\n                      style={{\n                        position: \"absolute\",\n                        width: \"95%\",\n                        top: '40%',  \n                      }}          \n                    >         \n                      <Typography variant=\"h4\" align=\"center\">\n                        Failed To Load Data\n                      </Typography>\n                    </span>\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            ) : cryptoCurrencyData.loading ? (\n              <TableBody>\n                <TableRow>\n                  <TableCell style={{ border: \"none\" }}>\n                    {\" \"}\n                    {/*To remove the unwanted line apperaing at the edge*/}\n                    <Loader />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            ) : (\n              <TableBody>\n                {stableSort(\n                  cryptoCurrencyData.cryptoData,\n                  getComparator(\n                    cryptoCurrencyData.order,\n                    cryptoCurrencyData.orderBy\n                  )\n                )\n                  .slice(\n                    paginationData.page * paginationData.rowsPerPage,\n                    paginationData.page * paginationData.rowsPerPage +\n                      paginationData.rowsPerPage\n                  )\n                  .map((row, index) => {\n                    return (\n                      <TableRow key={row.name}>\n                        <TableCell component=\"th\" id={row.ranking} scope=\"row\">\n                          {row.ranking}\n                        </TableCell>\n                        <TableCell padding=\"none\" align=\"left\">\n                          <Typography\n                            variant=\"body2\"\n                            component={Link}\n                            to={`/cryptoCurrency/${row.id}`}\n                            className={classes.logoWrapper}\n                          >\n                            <img\n                              src={row.imgSrc}\n                              className={classes.logo}\n                              alt=\"logo\"\n                            ></img>\n                            <span>{row.name}</span>\n                          </Typography>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {\"€\" +\n                            (typeof row.price === \"number\"\n                              ? row.price.toLocaleString()\n                              : row.price)}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {row.marketChange24h > 0 ? (\n                            <Typography className={classes.incresePercentage}>\n                              {typeof row.marketChange24h === \"number\"\n                                ? row.marketChange24h.toFixed(3)\n                                : row.marketChange24h}\n                              %\n                            </Typography>\n                          ) : (\n                            <Typography color=\"error\">\n                              {typeof row.marketChange24h === \"number\"\n                                ? row.marketChange24h.toFixed(3)\n                                : row.marketChange24h}\n                              %\n                            </Typography>\n                          )}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {\"€\" +\n                            (typeof row.totalVolume === \"number\"\n                              ? row.totalVolume.toLocaleString()\n                              : row.totalVolume)}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {\"€\" +\n                            (typeof row.marketCap === \"number\"\n                              ? row.marketCap.toLocaleString()\n                              : row.marketCap)}\n                        </TableCell>\n                        <TableCell\n                          padding=\"none\"\n                          size=\"small\"\n                          style={{\n                            height: \"60px\",\n                          }}\n                        >\n                          <Box\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"center\",\n                            }}\n                            component={Link}\n                            to={`/cryptoCurrency/${row.id}`}\n                          >\n                            <LineChart\n                              width={100}\n                              height={57}\n                              data={row.plotData}\n                              style={{\n                                cursor: \"pointer\",\n                              }}\n                            >\n                              <YAxis\n                                hide={true}\n                                domain={[\"dataMin\", \"dataMax\"]}\n                              />\n                              {row.marketChange7d > 0 ? (\n                                <Line\n                                  animationDuration={500}\n                                  dot={false}\n                                  connectNulls={true}\n                                  type=\"monotone\"\n                                  dataKey=\"value\"\n                                  stroke=\"green\"\n                                  strokeWidth={2}\n                                />\n                              ) : (\n                                <Line\n                                  animationDuration={500}\n                                  dot={false}\n                                  connectNulls={true}\n                                  type=\"monotone\"\n                                  dataKey=\"value\"\n                                  stroke={\n                                    theme.palette.error[theme.palette.type]\n                                  }\n                                  strokeWidth={2}\n                                />\n                              )}\n                            </LineChart>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15]}\n          component=\"div\"\n          count={cryptoCurrencyData.cryptoData.length}\n          rowsPerPage={paginationData.rowsPerPage}\n          page={paginationData.page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        ></TablePagination>\n      </Paper>\n    </div>\n  );\n};\n\nexport default CryptoCurrency;\n","import {\n  Grid,\n  makeStyles,\n  Typography,\n  Paper,\n  Link,\n  Button,\n  useTheme,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  Tooltip,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport CountryOption from \"./CountryOption\";\nimport Loader from \"./Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  block: {\n    display: \"block\",\n  },\n  info: {\n    marginTop: \"-0.75rem\",\n  },\n  loader: {\n    height: \"100%\",\n    widht: \"100%\",\n  },\n  increase: {\n    color: theme.palette.success.main,\n  },\n  description: {\n    maxHeight: 120,\n    overflow: \"hidden\",\n  },\n  readMore: {\n    position: \"absolute\",\n    left: 0,\n    bottom: 0,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  graphWrapper: {\n    padding: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    height: \"100%\",\n    minWidth: 500,\n    color: theme.palette.text.secondary,\n  },\n  cover: {\n    height: \"60vh\",\n    margin: `0.5rem 0 2rem 0`,\n    overflow: \"scroll\",\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.default,\n    border: `1px solid ${theme.palette.divider}`,\n  },\n  countryOption: {\n    display: \"flex\", \n    justifyContent: \"flex-end\",\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: 'center',\n    },\n\n  },\n}));\n\nconst CryptoCurrencyWithID = (props) => {\n  const { id } = useParams();\n  const {\n    FetchCryptoData,\n    CryptoCurrencyCountries,\n    CryptoHistoryFetch,\n  } = useContext(FetchContext);\n  const [data, setData] = useState({});\n  const [base, setBase] = useState(\"EUR\");\n  const [loading, setLoading] = useState(true);\n  const [descriptionCut, setDescriptionCut] = useState(true);\n  const [supportedCountries, setSupportedCountries] = useState([]);\n  const [selectedPlot, setSelectedPlot] = useState(\"prices\");\n  const [plotData, setPlotData] = useState([]);\n  const [failedToLoad, setFailedToLoad] = useState(false);\n  const theme = useTheme();\n\n  function createData(\n    id,\n    name,\n    symbol,\n    imgSrc,\n    description,\n    rank,\n    score,\n    communityDataScore,\n    reddit_subscribers,\n    twitter_followers,\n    market_rank,\n    market_cap,\n    market_high24,\n    market_low24,\n    market_change24,\n    current_price,\n    price_change24h,\n    price_change30d,\n    price_change1Y,\n    volume,\n    supply,\n    homePageLink\n  ) {\n    let coinGecko = {\n      rank,\n      score,\n    };\n    let community = {\n      score: communityDataScore,\n      reddit: reddit_subscribers,\n      twitter: twitter_followers,\n    };\n    let market = {\n      rank: market_rank,\n      market_cap,\n      high24: market_high24,\n      low24: market_low24,\n      change24: market_change24,\n    };\n    let price = {\n      current: current_price,\n      change24h: price_change24h,\n      change30d: price_change30d,\n      change1Y: price_change1Y,\n    };\n    return {\n      id,\n      name,\n      symbol,\n      imgSrc,\n      description,\n      coinGecko,\n      community,\n      market,\n      price,\n      volume,\n      supply,\n      homePageLink,\n    };\n  }\n\n  const getDate = (date) => {\n    let dd = String(date.getDate()).padStart(2, \"0\");\n    let mm = String(date.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    let yyyy = date.getFullYear();\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n  function createPlotData(date, value) {\n    date = new Date(date);\n    date = getDate(date);\n    return { date, value };\n  }\n\n  function convertToLocaleString(item) {\n    return typeof item === \"number\" ? item.toLocaleString() : item;\n  }\n\n  useEffect(() => {\n    const GetCountries = async () => {\n      let failed = false;\n      let result = await CryptoCurrencyCountries().catch(error => {\n        failed = true;\n        setFailedToLoad(true);\n      });\n      if (!failed) {\n        result = result.map((value) => value.toUpperCase());\n        setSupportedCountries(result);\n      };      \n    };\n    GetCountries();\n\n    return function cleanUpScroll() {\n      const r = document.querySelector(\":root\");\n      r.style.setProperty(\"--scrollHeight\", \"0\");\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    props.setPath(\"CryptoCurrency\");\n    async function fetchData() {\n      let failed = false;\n      let result = await FetchCryptoData(id ? id : \"\").catch(error => {\n        failed = true;\n        setFailedToLoad(true);\n      });\n      if (!failed) {\n        let newData = createData(\n          result.id,\n          result.name,\n          result.symbol,\n          result.image.small,\n          result.description.en,\n          result.coingecko_rank,\n          result.coingecko_score,\n          result.community_score,\n          result.community_data.reddit_subscribers,\n          result.community_data.twitter_followers,\n          result.market_cap_rank,\n          result.market_data.market_cap[base.toLocaleLowerCase()],\n          result.market_data.high_24h[base.toLocaleLowerCase()],\n          result.market_data.low_24h[base.toLocaleLowerCase()],\n          result.market_data.market_cap_change_percentage_24h,\n          result.market_data.current_price[base.toLocaleLowerCase()],\n          result.market_data.price_change_percentage_24h,\n          result.market_data.price_change_percentage_30d,\n          result.market_data.price_change_percentage_1y,\n          result.market_data.total_volume[base.toLocaleLowerCase()],\n          result.market_data.total_supply,\n          result.links.homepage[0]\n        );\n        setData(newData);\n        setLoading(false);\n      };      \n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, base]);\n\n  useEffect(() => {\n    async function historyFetch() {\n      let failed = false;\n      let result = await CryptoHistoryFetch(base, id).catch(error => {\n        failed = true;\n        setFailedToLoad(true);\n      });\n      if (!failed) {\n        result = result[selectedPlot];\n        let newPlotData = result.map((result) =>\n          createPlotData(result[0], result[1])\n        );\n        setPlotData(newPlotData);\n      };\n    };\n    historyFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, base, selectedPlot]);\n\n  const handleDescription = () => {\n    setDescriptionCut(!descriptionCut);\n  };\n  const handleChangeBase = (e) => {\n    setBase(e.target.value);\n  };\n  const handleSetSelectedPlot = (option) => {\n    setSelectedPlot(option);\n  };\n\n  // Recharts ToolTip\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let date = payload ? payload[0].payload.date : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${date}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.loader}>\n      {failedToLoad ? (\n        <Typography variant='h3' align='center' style={{paddingTop: '20vh'}}>Failed To Load Resources</Typography>\n      ) : ( !loading ? (\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            style={{\n              display: \"flex\",\n              direction: \"row\",\n              alignItems: \"center\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Typography\n              variant=\"h4\"\n              style={{ display: \"flex\", alignItems: \"center\" }}\n              component=\"span\"\n            >\n              <img src={data.imgSrc} alt=\"icon\" style={{ padding: \"1rem\" }} />\n              <span>\n                {data.name}({data.symbol.toUpperCase()})\n              </span>\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              component=\"span\"\n              style={{ paddingLeft: \"1rem\" }}\n            >\n              {convertToLocaleString(data.price.current)}{\" \"}\n              {base.toLocaleUpperCase()}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2} direction=\"row\">\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                style={{ padding: \"1rem\", flexGrow: 1 }}\n              >\n                <Paper>\n                  <Grid container style={{ padding: \"1rem\" }} spacing={2}>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h6\">CoinGecko</Typography>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Rank: {data.coinGecko.rank}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Score: {data.coinGecko.score}\n                    </Grid>\n                    <Grid item xs={12} className={classes.subtitle}>\n                      <Typography variant=\"h6\">Community</Typography>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Score: {data.community.score}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      <Link color=\"textSecondary\" href={`${data.homePageLink}`}>\n                        {data.name} HomePage\n                      </Link>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Twitter Followers:{\" \"}\n                      {convertToLocaleString(data.community.twitter)}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Reddit Followers:{\" \"}\n                      {convertToLocaleString(data.community.reddit)}\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                style={{ padding: \"1rem\", flexGrow: 1 }}\n              >\n                <Paper>\n                  <Grid container style={{ padding: \"1rem\" }} spacing={2}>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h6\">Market</Typography>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Rank: {data.market.rank}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      24h:{\" \"}\n                      {data.market.change24 > 0 ? (\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.increase}\n                        >\n                          {typeof data.market.change24 === \"number\"\n                            ? data.market.change24.toFixed(3)\n                            : data.market.change24}\n                          %\n                        </Typography>\n                      ) : (\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          color=\"error\"\n                        >\n                          {typeof data.market.change24 === \"number\"\n                            ? data.market.change24.toFixed(3)\n                            : data.market.change24}\n                          %\n                        </Typography>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      Cap: {convertToLocaleString(data.market.market_cap)}\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      24h High / 24h Low:\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        style={{ paddingLeft: \"0.5rem\" }}\n                        className={classes.increase}\n                      >\n                        {data.market.high24}\n                      </Typography>{\" \"}\n                      /\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"error\"\n                      >\n                        {data.market.low24}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      Max Supply: {convertToLocaleString(data.supply)}\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      Volume: {convertToLocaleString(data.volume)}\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} style={{ padding: \"1rem\" }}>\n            <Paper style={{ padding: \"1rem\", position: \"relative\" }}>\n              <Grid container>\n                <Grid item xs={12} style={{ position: \"relative\" }}>\n                  <Typography variant=\"h6\">Description</Typography>\n                  <Typography\n                    component=\"div\"\n                    variant=\"body2\"\n                    className={descriptionCut ? classes.description : null}\n                  >\n                    <span\n                      dangerouslySetInnerHTML={{ __html: data.description }}\n                    ></span>\n                    <Typography align=\"center\" className={classes.readMore}>\n                      <Button\n                        style={{ width: \"100%\" }}\n                        onClick={handleDescription}\n                      >\n                        Read {descriptionCut ? \"More\" : \"Less\"}\n                      </Button>\n                    </Typography>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n            <Paper style={{ padding: \"1rem\", marginTop: \"1rem\" }}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\">Price Change</Typography>\n                  <Typography variant=\"body1\" component=\"div\">\n                    <Grid container spacing={3}>\n                      <Grid item xs={6} sm={4}>\n                        24 Hours:{\" \"}\n                        {data.price.change24h > 0 ? (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.increase}\n                          >\n                            {typeof data.price.change24h === \"number\"\n                              ? data.price.change24h.toFixed(4)\n                              : data.price.change24h}\n                            %\n                          </Typography>\n                        ) : (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"error\"\n                          >\n                            {typeof data.price.change24h === \"number\"\n                              ? data.price.change24h.toFixed(4)\n                              : data.price.change24h}\n                            %\n                          </Typography>\n                        )}\n                      </Grid>\n                      <Grid item xs={6} sm={4}>\n                        30 Days:{\" \"}\n                        {data.price.change30d > 0 ? (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.increase}\n                          >\n                            {typeof data.price.change30d === \"number\"\n                              ? data.price.change30d.toFixed(4)\n                              : data.price.change30d}\n                            %\n                          </Typography>\n                        ) : (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"error\"\n                          >\n                            {typeof data.price.change30d === \"number\"\n                              ? data.price.change30d.toFixed(4)\n                              : data.price.change30d}\n                            %\n                          </Typography>\n                        )}\n                      </Grid>\n                      <Grid item xs={6} sm={4}>\n                        One Year:{\" \"}\n                        {data.price.change1Y > 0 ? (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.increase}\n                          >\n                            {typeof data.price.change1Y === \"number\"\n                              ? data.price.change1Y.toFixed(4)\n                              : data.price.change1Y}\n                            %\n                          </Typography>\n                        ) : (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"error\"\n                          >\n                            {typeof data.price.change1Y === \"number\"\n                              ? data.price.change1Y.toFixed(4)\n                              : data.price.change1Y}\n                            %\n                          </Typography>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Grid container alignItems=\"flex-end\">\n                  <Grid item xs={1}></Grid>\n                  <Grid\n                    item\n                    xs={11}\n                    sm={9}\n                    style={{ padding: \"1rem 0 0.25rem 0rem\" }}\n                  >\n                    <ButtonGroup color=\"primary\" disableElevation>\n                      <Button\n                        onClick={() => handleSetSelectedPlot(\"prices\")}\n                        variant={\n                          selectedPlot === \"prices\" ? \"contained\" : \"outlined\"\n                        }\n                      >\n                        Prices\n                      </Button>\n                      <Button\n                        onClick={() => handleSetSelectedPlot(\"market_caps\")}\n                        value=\"Prices\"\n                        variant={\n                          selectedPlot === \"market_caps\"\n                            ? \"contained\"\n                            : \"outlined\"\n                        }\n                      >\n                        Market\n                      </Button>\n                      <Button\n                        onClick={() => handleSetSelectedPlot(\"total_volumes\")}\n                        value=\"Prices\"\n                        variant={\n                          selectedPlot === \"total_volumes\"\n                            ? \"contained\"\n                            : \"outlined\"\n                        }\n                      >\n                        Volume\n                      </Button>\n                    </ButtonGroup>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    sm={1}\n                    className={classes.countryOption}\n                  >\n                    <CountryOption\n                      value={base}\n                      countryNames={supportedCountries}\n                      onChange={handleChangeBase}\n                      optionNo={1}\n                    ></CountryOption>\n                  </Grid>\n                  <Grid item xs={false} sm={1}></Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} sm={false}></Grid>\n              <Grid item xs={12} sm={10} className={classes.cover}>\n                <Paper className={classes.graphWrapper} elevation={3}>\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart\n                      data={plotData}\n                      margin={{ left: 5, right: 10, top: 10 }}\n                      padding={{ left: 10 }}\n                    >\n                      <CartesianGrid strokeDasharray=\"2 2\" />\n                      <XAxis hide padding={{ left: 0, right: 15 }} />\n                      <YAxis hide padding={{ bottom: 0, top: 20 }} />\n                      <Tooltip content={<CustomToolTip />} />\n                      <Line\n                        type=\"monotone\"\n                        dot={false}\n                        dataKey=\"value\"\n                        stroke={theme.palette.info[theme.palette.type]}\n                        strokeWidth={2}\n                        animationDuration={1000}\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </Paper>\n              </Grid>\n              <Grid item xs={1} sm={false}></Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      ) : (\n        <div className={classes.loader}>\n          <Loader />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CryptoCurrencyWithID;\n","import React, { useState } from \"react\";\nimport Home from \"./Components/Home\";\nimport Converter from \"./Components/Converter\";\nimport History from \"./Components/History\";\nimport NavOptions from \"./Components/NavOptions\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CountryKeysContextProvider from \"./Context/CountryKeysContext\";\nimport FetchContextProvider from \"./Context/FetchContext\";\n\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport {\n  CssBaseline,\n  Drawer,\n  Hidden,\n  useTheme,\n} from \"@material-ui/core\";\nimport CryptoCurrency from \"./Components/CryptoCurrency\";\nimport CryptoCurrencyWithID from \"./Components/CryptoCurrencyWithID\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    overflow: \"scroll\",\n    padding: theme.spacing(3),\n    boxSizing: 'border-box',\n    maxWidth: \"100vw\",\n    height: `calc(100vh - ${theme.mixins.toolbar.height})`,\n    [theme.breakpoints.up(\"sm\")]: {\n      height: `calc(100vh - ${theme.mixins.toolbar[\"@media (min-width:600px)\"].minHeight}px)`,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: `calc(100vh - ${theme.mixins.toolbar[\"@media (min-width:0px) and (orientation: landscape)\"].minHeight}px)`,\n    }\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n  const { window } = props;\n  const theme = useTheme();\n  const [DrawerState, setDrawerState] = useState(false);\n  const [currentPath, setCurrentPath] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  // Theme functions\n  const themenew = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  const DrawerToggle = () => {\n    setDrawerState(!DrawerState);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <ThemeProvider theme={themenew}>\n      <Router basename=\"/Currency-App\">\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={DrawerToggle}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                {currentPath}\n              </Typography>\n              <Button onClick={toggleTheme} color=\"inherit\">\n                {darkMode ? <Brightness4Icon /> : <Brightness7Icon />}\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <nav\n            style={{ backgroundColor: \"#555\" }}\n            className={classes.drawer}\n            aria-label=\"Navigation Options\"\n          >\n            <Hidden mdUp>\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={DrawerState}\n                onClose={DrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                <NavOptions onChange={() => setDrawerState(false)} />\n              </Drawer>\n            </Hidden>\n            <Hidden smDown>\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                <NavOptions />\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <div className={classes.container}>\n              <FetchContextProvider>\n                <CountryKeysContextProvider>\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Home setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/converter\">\n                      <Converter setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/history/:id\">\n                      <History setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/history\">\n                      <History setPath={setCurrentPath} />\n                    </Route>\n                    <Route exact path=\"/cryptoCurrency\">\n                      <CryptoCurrency setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/CryptoCurrency/:id\">\n                      <CryptoCurrencyWithID setPath={setCurrentPath} />\n                    </Route>\n                  </Switch>\n                </CountryKeysContextProvider>\n              </FetchContextProvider>\n            </div>\n          </main>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}