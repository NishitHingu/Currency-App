{"version":3,"sources":["Context/FetchContext.js","Components/Home.js","Context/CountryKeysContext.js","Components/CountryOption.js","Components/Converter.js","Components/Loader.js","Components/History.js","Components/LinkItem.js","Components/NavOptions.js","Components/EnhancedTableHead.js","Components/CryptoCurrency.js","App.js","index.js"],"names":["FetchContext","createContext","FetchContextProvider","props","useState","data","setData","base","a","axios","get","then","result","rates","catch","error","console","log","symbol","start","end","Provider","value","GetDataWithBase","GetHistoryData","GetCryptoCurrencyData","children","useStyles","makeStyles","theme","paper","padding","spacing","paddingRight","height","color","palette","text","secondary","root","flexGrow","toolTip","opacity","backgroundColor","Home","useContext","plotData","setPlotData","compare","b","getPlotData","plot","forEach","key","push","name","sort","slice","useEffect","setPath","dataArray","Object","entries","maxValue","minValue","minKey","maxKey","fetchData","CustomToolTip","active","payload","label","className","classes","Grid","container","item","xs","sm","Paper","ResponsiveContainer","width","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","left","right","YAxis","Tooltip","content","Legend","Line","type","stroke","CountryKeysContext","CountryKeysContextProvider","keys","setKeys","isKeySet","setIsKeySet","EUR","Promise","reject","FetchKeys","formControl","marginLeft","marginTop","minWidth","CountryOption","countryNames","onChange","optionNo","FormControl","variant","InputLabel","id","Select","labelId","e","map","country","MenuItem","options","marginBottom","cover","overflow","tabs","display","alignItems","background","seperator","fontSize","paddingLeft","inputFeildArea","justifyContent","Converter","getDate","y","date","Date","dd","String","padStart","mm","getMonth","getFullYear","useTheme","useReducer","state","action","countries","changedFirstCountry","firstCountry","secondCountry","firstValue","secondValue","firstVal","secondVal","conversionRate","rate","Error","endDate","converterData","dispatchConverterData","length","getKeys","startDate","newPlotData","convRate","newValue","direction","target","alert","TextField","style","InputLabelProps","shrink","elevation","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","domain","dataMin","Math","floor","toFixed","dataMax","ceil","iconSize","Area","primary","fillOpacity","fill","Loader","opts","lines","radius","scale","corners","speed","rotate","animation","fadeColor","top","shadow","zIndex","position","loader","useRef","Spinner","spin","current","ref","dialogBox","margin","m","yyyy","parseInt","History","keysInitialise","plotCountries","setPlotCountries","dataTime","setDataTime","setStartDate","setBase","firstRender","setFirstRender","countryOpen","setCountryOpen","baseOpen","setBaseOpen","dialogBoxInput","setDialogBoxInput","loading","setLoading","fetchingData","setFetchingData","failedToLoadData","setFailedToLoadData","join","filter","index","setTimeout","handleClickCountryOpenDialogBox","handleDailogBoxInputChange","handleCloseBaseDialogBox","Tabs","event","newDate","textColor","indicatorColor","centered","Tab","justify","Button","marginRight","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","open","onClose","DialogTitle","DialogContent","DialogActions","includes","Typography","align","component","Link","success","info","href","countryName","IconButton","aria-label","removeCountry","bottom","syncId","LinkItem","icon","to","renderLink","React","useMemo","forwardRef","itemProps","ListItem","button","ListItemIcon","ListItemText","toolbar","mixins","NavOptions","wrapper","Divider","List","EnhancedTableHead","order","orderBy","onRequestSort","headCell","TableHead","TableRow","TableCell","disablePadding","sortDirection","allowSort","TableSortLabel","property","visuallyHidden","table","border","clip","logoWrapper","logo","incresePercentage","createData","ranking","price","imgSrc","marketChange24h","marketChange7d","totalVolume","marketCap","headCells","numeric","descendingComparator","stableSort","array","comparator","stabilizedThis","el","CryptoCurrency","page","rowsPerPage","pages","paginationData","dispatchPaginationData","cryptoData","cryptoCurrencyData","dispatchCryptoCurrencyData","displayData","market_cap_rank","current_price","image","price_change_percentage_24h","price_change_percentage_7d_in_currency","total_volume","market_cap","sparkline_in_7d","TableContainer","Table","stickyHeader","isAsc","TableBody","row","scope","src","alt","size","hide","animationDuration","dot","connectNulls","strokeWidth","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","drawerWidth","drawer","breakpoints","up","flexShrink","appBar","menuButton","drawerPaper","title","maxWidth","App","window","DrawerState","setDrawerState","currentPath","setCurrentPath","darkMode","setDarkMode","themenew","createMuiTheme","DrawerToggle","undefined","document","body","ThemeProvider","CssBaseline","AppBar","Toolbar","edge","Hidden","mdUp","Drawer","anchor","ModalProps","keepMounted","smDown","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"qQAGaA,EAAeC,0BA6DbC,EA3Dc,SAACC,GAAW,IAAD,EACdC,qBADc,mBAC/BC,EAD+B,KACzBC,EADyB,iDAEtC,WAA+BC,GAA/B,eAAAC,EAAA,sEACqBC,IAChBC,IADgB,sDACmCH,GAAc,QACjEI,MAAK,SAACC,GACL,OAAOA,EAAOP,KAAKQ,SAEpBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAPlB,cACMH,EADN,yBASSA,GATT,4CAFsC,kEAatC,WAA8BL,EAAMW,EAAQC,EAAOC,GAAnD,eAAAZ,EAAA,sEACqBC,IAChBC,IADgB,2DAEqCS,EAFrC,mBAEqDC,EAFrD,oBAEoEF,EAFpE,iBAGbX,GAAc,QAGjBI,MAAK,SAACC,GAEL,OAAOA,EAAOP,KAAKQ,SAEpBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAZlB,cACMH,EADN,yBAcSA,GAdT,4CAbsC,kEA8BtC,WAAqCL,GAArC,eAAAC,EAAA,sEACqBC,IAChBC,IADgB,qEAE+CH,GAAc,MAF7D,iGAIhBI,MAAK,SAACC,GACL,OAAOA,EAAOP,QAEfS,OAAM,SAACC,GACNC,QAAQC,IAAIF,MATlB,cACMH,EADN,yBAWSA,GAXT,4CA9BsC,sBA4CtC,OACE,cAACZ,EAAaqB,SAAd,CACEC,MAAO,CACLjB,OACAC,UACAiB,gBAjDgC,4CAkDhCC,eAlDgC,kDAmDhCC,sBAnDgC,6CA6CpC,SASGtB,EAAMuB,Y,wEC5CPC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAASF,EAAMG,QAAQ,GACvBC,aAAcJ,EAAMG,QAAQ,GAC5BE,OAAQ,OACRC,MAAON,EAAMO,QAAQC,KAAKC,WAE5BC,KAAM,CACJC,SAAU,GAEZC,QAAS,CACPC,QAAS,EACTX,QAAS,UACTI,MAAO,OACPQ,gBAAiB,2BAkGNC,EA9FF,SAACzC,GAAW,IAAD,EACqB0C,qBAAW7C,GAAxCM,GADQ,EACdD,KADc,EACRC,SAASiB,EADD,EACCA,gBADD,EAEUnB,mBAAS,IAFnB,mBAEf0C,EAFe,KAELC,EAFK,KAqCtB,SAASC,EAAQxC,EAAGyC,GAClB,OAAoC,GAA5BzC,EAAC,MAAYyC,EAAC,OAGxB,SAASC,EAAY7C,GACnB,IAAI8C,EAAO,GAMX,OALA9C,EAAK+C,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAX/B,EAAW,KAC7B6B,EAAKG,KAAK,CAAEC,KAAMF,EAAK/B,MAAO,EAAIA,OAEpC6B,EAAOA,EAAKK,KAAKR,GAASS,MAAM,GAChCzC,QAAQC,IAAIkC,GACLA,EA1CTO,qBAAU,WACRvD,EAAMwD,QAAQ,QACC,uCAAG,sCAAAnD,EAAA,sEACGe,EAAgB,OADnB,UAEM,kBADlBX,EADY,gCAGVgD,EAAYC,OAAOC,QAAQlD,GAC3BmD,EAAWH,EAAU,GAAG,GACxBI,EAAWJ,EAAU,GAAG,GACxBK,EAASL,EAAU,GAAG,GACtBM,EAASN,EAAU,GAAG,GAC1BA,EAAUR,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAX/B,EAAW,KAC9BA,EAAQyC,GACVA,EAAWzC,EACX4C,EAASb,GACAW,EAAW1C,IACpB0C,EAAW1C,EACX2C,EAASZ,MAGbrC,QAAQC,IAAI8C,EAAUC,GACtBhD,QAAQC,IAAIiD,EAAS,MAAQD,GAlBf,UAmBC1C,EAAgB0C,GAnBjB,QAmBdrD,EAnBc,OAoBdgD,EAAYC,OAAOC,QAAQlD,GAC3BmC,EAAYG,EAAYU,IACxBtD,EAAQM,GAtBM,4CAAH,oDAyBfuD,KAEC,IAgBH,IAAMC,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAAqB,EAAZC,MACxC,GAAIF,EAAQ,CACV,IAAId,EAAOe,EAAUA,EAAQ,GAAGA,QAAQf,KAAO,GAC3CjC,EAAQgD,EAAUA,EAAQ,GAAGA,QAAQhD,MAAQ,GACjD,OACE,sBAAKkD,UAAWC,EAAQhC,QAAxB,UACE,+CAAgBc,KAChB,6CAAcjC,EAAd,UAIN,OAAO,MAGHmD,EAAU9C,IAEhB,OACE,qBAAK6C,UAAWC,EAAQlC,KAAxB,SACE,eAACmC,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,EAAzB,UACE,cAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,IAAI,IACtB,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAACC,EAAA,EAAD,CAAOP,UAAWC,EAAQ3C,MAA1B,SACE,cAACkD,EAAA,EAAD,CAAqBC,MAAM,OAAO/C,OAAO,OAAzC,SACE,eAACgD,EAAA,EAAD,CAAW7E,KAAMyC,EAAjB,UACE,cAACqC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CACEC,QAAQ,GACRvD,QAAS,CAAEwD,KAAM,GAAIC,MAAO,MAE9B,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAASC,QAAS,cAACvB,EAAD,MAClB,cAACwB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,KAAK,WAAWR,QAAQ,QAAQS,OAAO,qBAKrD,cAACrB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,IAAI,U,iBCrHjBkB,EAAqB/F,0BA4BnBgG,EA1BoB,SAAC9F,GAAW,IACrCoB,EAAoBsB,qBAAW7C,GAA/BuB,gBADoC,EAEpBnB,mBAAS,IAFW,mBAErC8F,EAFqC,KAE/BC,EAF+B,OAGZ/F,oBAAS,GAHG,mBAGrCgG,EAHqC,KAG3BC,EAH2B,iDAI5C,4BAAA7F,EAAA,6DACEQ,QAAQC,IAAI,iBADd,SAEqBM,IAFrB,UAGwB,kBADlBX,EAFN,gCAIIA,EAAM,2BAAQA,GAAR,IAAgB0F,IAAK,KAC3B1F,EAASiD,OAAOqC,KAAKtF,IACd4C,OACP2C,EAAQvF,GACRyF,GAAY,GARhB,kBASWzF,GATX,eAWII,QAAQC,IAAI,YAXhB,kBAYWsF,QAAQC,UAZnB,6CAJ4C,sBAmB5C,OACE,cAACR,EAAmB3E,SAApB,CAA6BC,MAAO,CAAE4E,OAAME,WAAUK,UApBZ,4CAoB1C,SACGtG,EAAMuB,Y,4CCvBPC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC6E,YAAa,CACXC,WAAY9E,EAAMG,QAAQ,GAC1B4E,UAAW/E,EAAMG,QAAQ,GACzB6E,SAAU,QAgCCC,EA7BO,SAAC3G,GAAW,IACxBmB,EAAmDnB,EAAnDmB,MAAOyF,EAA4C5G,EAA5C4G,aAAcC,EAA8B7G,EAA9B6G,SAAUC,EAAoB9G,EAApB8G,SAAU1C,EAAUpE,EAAVoE,MAC3CE,EAAU9C,IAEhB,OACE,eAACuF,EAAA,EAAD,CACEC,QAAQ,WACR3C,UAAWC,EAAQiC,YAFrB,UAIEnC,GAAS,cAAC6C,EAAA,EAAD,CAAYC,GAAE,UAAK9C,EAAL,mBAAd,SAA4CA,IACrD,cAAC+C,EAAA,EAAD,CACEC,QAAO,UAAKhD,EAAL,mBACP8C,GAAI9C,EACJA,MAAOA,EACPjD,MAAOA,EACP0F,SAAU,SAACQ,GAAD,OAAOR,EAASQ,IAL5B,SAOGT,EAAaU,KAAI,SAACC,GACjB,OACE,cAACC,EAAA,EAAD,CAAmCrG,MAAOoG,EAA1C,SACGA,GADYA,EAAUT,Y,kBCb/BtF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+F,QAAS,CACPC,aAAc,IAEhBC,MAAO,CACL5F,OAAQ,OACRH,QAAS,GACTgG,SAAU,UAEZjG,MAAO,CACLC,QAAS,mBACT8E,SAAU,IACV3E,OAAQ,QAEV8F,KAAM,CACJxF,SAAU,GAEZsE,cAAe,CACbmB,QAAS,OACTC,WAAY,WACZL,aAAc,IAEhBpF,QAAS,CACPC,QAAS,EACTX,QAAS,UACTI,MAAO,MACPQ,gBAAiBd,EAAMO,QAAQ+F,WAAWrG,OAE5CsG,UAAW,CACTC,SAAU,GACVC,YAAa,IAEfC,eAAgB,CACdN,QAAS,OACTO,eAAgB,SAChBN,WAAY,WACZL,aAAc,QA0VHY,EArVG,SAACtI,GAEjB,IAmDMuI,EAAU,SAACC,GACf,IAAIC,EAAO,IAAIC,KACXC,EAAKC,OAAOH,EAAKF,WAAWM,SAAS,EAAG,KACxCC,EAAKF,OAAOH,EAAKM,WAAa,GAAGF,SAAS,EAAG,KAEjD,OADWJ,EAAKO,cAAgBR,EAClB,IAAMM,EAAK,IAAMH,GA1DN,EA6DSjG,qBAAW7C,GAAvCM,EA7DmB,EA6DnBA,QAASkB,EA7DU,EA6DVA,eA7DU,EA8DWqB,qBAAWmD,GAAzCE,EA9DmB,EA8DnBA,KAAME,EA9Da,EA8DbA,SAAUK,EA9DG,EA8DHA,UAClB5E,EAAQuH,cA/Da,EAgEoBC,sBA9DlB,SAACC,EAAOC,GACnC,OAAQA,EAAOzD,MACb,IAAK,gBACH,OAAO,2BACFwD,GADL,IAEEE,UAAWD,EAAOjF,QAAQkF,YAE9B,IAAK,sBACH,OAAO,2BACFF,GADL,IAEEG,qBAAqB,EACrBC,aAAcH,EAAOjF,QAAQjB,MAEjC,IAAK,uBACH,OAAO,2BACFiG,GADL,IAEEG,qBAAqB,EACrBE,cAAeJ,EAAOjF,QAAQjB,MAElC,IAAK,oBACH,OAAO,2BACFiG,GADL,IAEEM,WAAYL,EAAOjF,UAEvB,IAAK,qBACH,OAAO,2BACFgF,GADL,IAEEO,YAAaN,EAAOjF,UAExB,IAAK,eACH,OAAO,2BACFgF,GADL,IAEEM,WAAYL,EAAOjF,QAAQwF,SAC3BD,YAAaN,EAAOjF,QAAQyF,YAEhC,IAAK,wBACH,OAAO,2BACFT,GADL,IAEEU,eAAgBT,EAAOjF,UAE3B,IAAK,6BACH,OAAO,2BACFgF,GADL,IAEExG,SAAUyG,EAAOjF,QAAQxB,SACzBkH,eAAgBT,EAAOjF,QAAQ2F,OAEnC,QACE,MAAM,IAAIC,SAiBd,CAGEV,UAAW,CAAC,MAAO,OACnBE,aAAc,MACdE,WAAY,EACZD,cAAe,MACfE,YAAa,EACbG,eAAgB,EAChBG,QAASzB,EAAQ,GACjB5F,SAAU,GACV2G,qBAAqB,IA7EE,mBAgEpBW,EAhEoB,KAgELC,EAhEK,KAiF3B3G,qBAAU,WAER,GADAvD,EAAMwD,QAAQ,aACVyC,GAAYF,EAAKoE,SAAWF,EAAcZ,UAAUc,OACtDD,EAAsB,CACpBvE,KAAM,gBACNxB,QAAS,CACPkF,UAAWtD,UAGV,IAAKE,EAAU,6CACpB,4BAAA5F,EAAA,sEACqBiG,IADrB,OACM7F,EADN,OAEEyJ,EAAsB,CACpBvE,KAAM,gBACNxB,QAAS,CACPkF,UAAW5I,KALjB,4CADoB,uBAAC,WAAD,wBAUpB2J,MAGD,IAEH,IAAMvH,EAAU,SAACxC,EAAGyC,GAClB,OAAOzC,EAAC,KAAWyC,EAAC,KAAW,GAAK,GAGtCS,qBAAU,WACR,IAAM8G,EAAY9B,EAAQ,GAC1B1H,QAAQC,IACNmJ,EAAcV,aACdU,EAAcT,cACda,EACAJ,EAAcD,SAED,uCAAG,oCAAA3J,EAAA,sEACGgB,EACjB4I,EAAcV,aACdU,EAAcT,cACda,EACAJ,EAAcD,SALA,OAOM,kBANlBvJ,EADY,UAQV6J,EAAc,GAClB7J,EAASiD,OAAOC,QAAQlD,GACxBN,EAAQM,GACRA,EAAOwC,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAX/B,EAAW,KAC/BmJ,EAAYnH,KAAK,CACfC,KAAMF,EACN/B,MAAOA,EAAM8I,EAAcT,oBAG/Bc,EAAYjH,KAAKR,GACjBhC,QAAQC,IAAIwJ,EAAYH,QACpBI,EAAWD,EAAYA,EAAYH,OAAS,GAAGhJ,MACnDN,QAAQC,IAAIwJ,GACZJ,EAAsB,CACpBvE,KAAM,6BACNxB,QAAS,CACPxB,SAAU2H,EACVR,KAAMS,KAGNN,EAAcX,qBACZkB,EAAWP,EAAcR,WAAac,EAC1CL,EAAsB,CACpBvE,KAAM,eACNxB,QAAS,CACPwF,SAAUM,EAAcR,WACxBG,UAAWY,OAIXA,EAAWP,EAAcP,YAAca,EAC3CL,EAAsB,CACpBvE,KAAM,eACNxB,QAAS,CACPwF,SAAUa,EACVZ,UAAWK,EAAcP,iBA3CjB,2CAAH,oDAiDf1F,KAEC,CAACiG,EAAcT,cAAeS,EAAcV,eAE/C,IAyDMtF,EAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAAqB,EAAZC,MACxC,GAAIF,EAAQ,CACV,IAAId,EAAOe,EAAUA,EAAQ,GAAGA,QAAQf,KAAO,GAC3CjC,EAAQgD,EAAUA,EAAQ,GAAGA,QAAQhD,MAAQ,GACjD,OACE,sBAAKkD,UAAWC,EAAQhC,QAAxB,UACE,4CAAac,KACb,6CAAcjC,EAAd,UAIN,OAAO,MAGHmD,EAAU9C,IAEhB,OACE,eAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACiG,UAAU,SAAS5I,QAAS,EAA5C,UACE,sBAAKwC,UAAWC,EAAQ8D,eAAxB,UACE,cAAC,EAAD,CACEjH,MAAO8I,EAAcV,aACrB1C,SA9EoB,SAACQ,GAC3B,IAAInE,EAAMmE,EAAEqD,OAAOvJ,MACf+B,IAAQ+G,EAAcT,cACxBmB,MAAM,mCAENT,EAAsB,CACpBvE,KAAM,sBACNxB,QAAS,CACPjB,UAuEA0D,aAAcqD,EAAcZ,UAC5BvC,SAAU,EACV1C,MAAO,SAET,sBAAMC,UAAWC,EAAQ2D,UAAzB,iBACA,cAAC,EAAD,CACE9G,MAAO8I,EAAcT,cACrB3C,SAzEoB,SAACQ,GAC3B,IAAInE,EAAMmE,EAAEqD,OAAOvJ,MACf+B,IAAQ+G,EAAcV,aACxBoB,MAAM,mCAENT,EAAsB,CACpBvE,KAAM,uBACNxB,QAAS,CACPjB,UAkEA0D,aAAcqD,EAAcZ,UAC5BvC,SAAU,EACV1C,MAAO,eAGX,sBAAKC,UAAWC,EAAQ8D,eAAxB,UACE,cAACwC,EAAA,EAAD,CACEC,MAAO,CAACrE,WAAY,IACpBU,GAAG,kBACHvB,KAAK,SACLmF,gBAAiB,CACfC,QAAQ,GAEV/D,QAAQ,WACR7F,MAAO8I,EAAcR,WACrB5C,SA5Ea,SAACQ,GACpB,IAAIlG,EAAQkG,EAAEqD,OAAOvJ,MACrB,GAAIA,EAAQ,EACVwJ,MAAM,kCADR,CAIA,IAAIH,EAAWP,EAAcJ,eAAiB1I,EAC9C+I,EAAsB,CACpBvE,KAAM,eACNxB,QAAS,CACPwF,SAAUxI,EACVyI,UAAWY,SAmEX,sBAAMnG,UAAWC,EAAQ2D,UAAzB,iBACA,cAAC2C,EAAA,EAAD,CACEC,MAAO,CAACrE,WAAY,IACpBU,GAAG,kBACHvB,KAAK,SACLmF,gBAAiB,CACfC,QAAQ,GAEV/D,QAAQ,WACR7F,MAAO8I,EAAcP,YACrB7C,SAzEa,SAACQ,GACpB,IAAIlG,EAAQkG,EAAEqD,OAAOvJ,MACrB,GAAIA,EAAQ,EACVwJ,MAAM,kCADR,CAIA,IAAIH,EAAWrJ,EAAQ8I,EAAcJ,eACrCK,EAAsB,CACpBvE,KAAM,eACNxB,QAAS,CACPwF,SAAUa,EACVZ,UAAWzI,YAiEb,eAACoD,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAACqG,MAAO,CAACpE,UAAW,GAAxC,UACE,cAAClC,EAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,IAC1B,cAACJ,EAAA,EAAD,CAAMF,UAAWC,EAAQqD,MAAOlD,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAjD,SACE,cAACC,EAAA,EAAD,CAAOP,UAAWC,EAAQ3C,MAAOqJ,UAAW,EAA5C,SACE,cAACnG,EAAA,EAAD,CAAqBC,MAAO,OAAQ/C,OAAQ,OAA5C,SACE,eAACkJ,EAAA,EAAD,CAAW/K,KAAM+J,EAActH,SAA/B,UACE,+BACE,iCAAgBuE,GAAG,UAAUgE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACE,sBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,KACnD,sBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,UAGxD,cAACxG,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,OAAOS,OAAQlE,EAAMO,QAAQC,KAAKC,YACjD,cAACmD,EAAA,EAAD,CACEM,OAAQlE,EAAMO,QAAQC,KAAKC,UAC3BwD,KAAK,SACL8F,OAAQ,CACN,SAACC,GACC,OAAIA,EAAU,EACLC,KAAKC,MAAMF,IAEVA,EAAW,EAAIA,EAAU,IAAKG,QAAQ,IAGlD,SAACC,GACC,OAAIA,EAAU,EACLH,KAAKI,KAAKD,IAETA,EAAW,EAAIA,EAAU,IAAKD,QAAQ,OAKtD,cAACtG,EAAA,EAAD,CAASC,QAAS,cAACvB,EAAD,MAClB,cAACwB,EAAA,EAAD,CAAQuG,SAAU,IAClB,cAACC,EAAA,EAAD,CACEtG,KAAK,WACLR,QAAQ,QACR/B,KAAI,qBAAgBmF,EAAQ,GAAxB,gBAAkC0B,EAAcD,SACpDpE,OAAQlE,EAAMO,QAAQC,KAAKgK,QAC3BC,YAAa,EACbC,KAAK,2BAMf,cAAC7H,EAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,W,mICnWnB0H,GAlCA,SAACrM,GACZ,IACIsM,EAAO,CACPC,MAAO,GACPpC,OAAQ,EACRrF,MAAO,GACP0H,OAAQ,GACRC,MAAO,GACPC,QAAS,EACTC,MAAO,GACPC,OAAQ,EACRC,UAAW,sBACXpC,UAAW,EACXzI,MAZUiH,cAYGhH,QAAQC,KAAKgK,QAC1BY,UAAW,cACXC,IAAK,MACL3H,KAAM,MACN4H,OAAQ,sBACRC,OAAQ,IACR5I,UAAW,UACX6I,SAAU,YAERC,EAASC,iBAAO,MAMtB,OALA7J,qBAAU,WAEM,IAAI8J,KAAQf,GAAMgB,KAAKH,EAAOI,WAE5C,IAEE,qBAAK1C,MAAO,CAAE/F,MAAO,OAAQ/C,OAAQ,QAAUyL,IAAKL,KCFtD3L,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+F,QAAS,CACPC,aAAc,IAEhBC,MAAO,CACL5F,OAAQ,OACRH,QAAS,GACTgG,SAAU,UAEZjG,MAAO,CACLC,QAAS,qBACT8E,SAAU,IACV3E,OAAQ,QAEV8F,KAAM,CACJxF,SAAU,GAEZsE,cAAe,CACbmB,QAAS,OACTC,WAAY,WACZL,aAAc,IAEhBpF,QAAS,CACPC,QAAS,EACTX,QAAS,UACTI,MAAO,MACPQ,gBAAiB,uBAEnBiL,UAAW,CACTC,OAAQ,YAINnF,GAAU,SAACC,EAAGmF,GAClB,IAAIlF,EAAO,IAAIC,KACXC,EAAKC,OAAOH,EAAKF,WAAWM,SAAS,EAAG,KACxCC,EAAKF,OAAOH,EAAKM,WAAa,EAAI4E,GAAG9E,SAAS,EAAG,KACjD+E,EAAOnF,EAAKO,cAAgBR,EAShC,OAPIqF,SAAS/E,IAAO,IAClBjI,QAAQC,IAAIgI,GACZ8E,EAAOhF,OAAOiF,SAASD,GAAQ,GAC/B9E,EAAKF,OAAO,GAAKiF,SAAS/E,IAC1BjI,QAAQC,IAAIgI,IAGP8E,EAAO,IAAM9E,EAAK,IAAMH,GA4clBmF,GAzcC,SAAC9N,GAAW,IAAD,EAC6B0C,qBACpDmD,GADYkI,EADW,EACjBhI,KAAsBE,EADL,EACKA,SAAUK,EADf,EACeA,UAGhCjF,EAAmBqB,qBAAW7C,GAA9BwB,eAJiB,EAKiBpB,mBAAS,IAL1B,mBAKlB+N,EALkB,KAKHC,EALG,OAMDhO,mBAAS,CAAC,MAAO,QANhB,mBAMlB8F,EANkB,KAMZC,EANY,OAOO/F,mBAAS,MAPhB,mBAOlBiO,EAPkB,KAORC,EAPQ,OAQSlO,mBAASsI,GAAQ,EAAG,IAR7B,mBAQlB8B,EARkB,KAQP+D,EARO,OAUKnO,mBAASsI,GAAQ,EAAG,IAVzB,mBAUlByB,EAVkB,aAWD/J,mBAAS,QAXR,oBAWlBG,GAXkB,MAWZiO,GAXY,SAYapO,oBAAS,GAZtB,qBAYlBqO,GAZkB,MAYLC,GAZK,SAaOtO,mBAAS,IAbhB,qBAalB0C,GAbkB,MAaRC,GAbQ,SAca3C,oBAAS,GAdtB,qBAclBuO,GAdkB,MAcLC,GAdK,SAeOxO,oBAAS,GAfhB,qBAelByO,GAfkB,MAeRC,GAfQ,SAgBmB1O,mBAAS,IAhB5B,qBAgBlB2O,GAhBkB,MAgBFC,GAhBE,SAiBK5O,oBAAS,GAjBd,qBAiBlB6O,GAjBkB,MAiBTC,GAjBS,SAkBe9O,oBAAS,GAlBxB,qBAkBlB+O,GAlBkB,MAkBJC,GAlBI,SAmBuBhP,oBAAS,GAnBhC,qBAmBlBiP,GAnBkB,MAmBAC,GAnBA,MAoBnBzN,GAAQuH,cAEd1F,qBAAU,WAER,GADAvD,EAAMwD,QAAQ,WACVyC,GAAY8H,EAAe5D,SAAWpE,EAAKoE,OAC7CnE,EAAQ+H,GACRQ,IAAe,GACfN,EAAiB,GAAD,mBAAKD,GAAL,CAAoB,cAC/B,IAAK/H,EAAU,6CACpB,4BAAA5F,EAAA,sEACqBiG,IADrB,OACM7F,EADN,OAEEuF,EAAQvF,GAFV,4CADoB,uBAAC,WAAD,wBAKpB2J,GACAmE,IAAe,GACfN,EAAiB,GAAD,mBAAKD,GAAL,CAAoB,SACpCnN,QAAQC,IAAIkN,MAGb,IAEH,IAAMnL,GAAU,SAACxC,EAAGyC,GAClB,OAAOzC,EAAC,KAAWyC,EAAC,KAAW,GAAK,GAGtCS,qBAAU,WACH+K,KACHzN,QAAQC,IAAIV,GAAM4N,EAAcoB,KAAK,KAAM/E,EAAWL,GACvC,uCAAG,8BAAA3J,EAAA,sEACGgB,EACjBjB,GACA4N,EAAcoB,KAAK,KACnB/E,EACAL,GALc,OAOhB,GAAsB,kBANlBvJ,EADY,QAOgB,CAM9B,IALI6J,EAAc,IAClB7J,EAASiD,OAAOC,QAAQlD,IACjBwC,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAX/B,EAAW,KAC/BmJ,EAAYnH,KAAZ,aAAmBC,KAAMF,GAAQ/B,OAE5BmJ,EAAYH,OAAS,KAC1BG,EAAcA,EAAY+E,QAAO,SAACnP,EAAMoP,GAAP,OAC/BA,EAAQ,EAAIpP,EAAO,QAGvBoK,EAAYjH,KAAKR,IACjBhC,QAAQC,IAAIwJ,GACZ1H,GAAY0H,GACZyE,IAAW,GACXI,IAAoB,GACpBF,IAAgB,QAEhBM,YAAW,WACTJ,IAAoB,GACpBF,IAAgB,KACf,KA5BW,2CAAH,oDA+BfjL,IAEFnD,QAAQC,IAAIkN,KAEX,CAAC5N,GAAM4N,EAAe3D,IAEzB,IAiCMmF,GAAkC,WACtCf,IAAe,IAiBXgB,GAA6B,SAACpI,GAClCwH,GAAkBxH,EAAEqD,OAAOvJ,QAMvBuO,GAA2B,WAC/Bf,IAAY,IAsBR1K,GAAgB,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QAAqB,EAAZC,MACxC,GAAIF,EAAQ,CACV,IAAId,EAAOe,EAAUA,EAAQ,GAAGA,QAAQf,KAAO,GAC3CjC,EAAQgD,EAAUA,EAAQ,GAAGhD,MAAQ,GACzC,OACE,sBAAKkD,UAAWC,GAAQhC,QAAxB,UACE,4CAAac,KACb,6CAAcjC,EAAd,UAIN,OAAO,MAGHmD,GAAU9C,KAEhB,OACE,eAAC+C,EAAA,EAAD,CAAMC,WAAS,EAACiG,UAAU,SAAS5I,QAAS,EAA5C,UACE,eAAC0C,EAAA,EAAD,CAAME,MAAI,EAACD,WAAS,EAAC3C,QAAS,EAA9B,UACE,cAAC0C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIL,UAAWC,GAAQmD,QAAtC,SACE,eAACkI,GAAA,EAAD,CACEtL,UAAWC,GAAQuD,KACnB1G,MAAO+M,EACPrH,SAxGe,SAAC+I,EAAOpF,GAG/B,IAAIqF,EACJ,OAHA1B,EAAY3D,GACZyE,IAAgB,GAERzE,GACN,IAAK,KACHqF,EAAUtH,GAAQ,EAAG,GACrB6F,EAAayB,GACb,MAEF,IAAK,KACHA,EAAUtH,GAAQ,EAAG,GACrB6F,EAAayB,GACb,MAEF,IAAK,KACHA,EAAUtH,GAAQ,EAAG,GACrB6F,EAAayB,GACb,MAEF,IAAK,MACHA,EAAUtH,GAAQ,GAAI,GACtB6F,EAAayB,GACb,MAEF,QACEhP,QAAQC,IAAI0J,KA+ERsF,UAAU,UACVC,eAAe,UACfC,UAAQ,EANV,UAQE,cAACC,GAAA,EAAD,CAAK7L,MAAM,KAAKjD,MAAM,OACtB,cAAC8O,GAAA,EAAD,CAAK7L,MAAM,KAAKjD,MAAM,OACtB,cAAC8O,GAAA,EAAD,CAAK7L,MAAM,KAAKjD,MAAM,OACtB,cAAC8O,GAAA,EAAD,CAAK7L,MAAM,MAAMjD,MAAM,aAG3B,eAACoD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIF,WAAS,EAACqG,MAAO,CAAExI,SAAU,GAAK6N,QAAQ,SAA7D,UACE,cAACC,EAAA,EAAD,CACEtF,MAAO,CAAEuF,YAAa,UACtBpJ,QAAQ,YACRhF,MAAM,UACNgJ,UAAW,EACXqF,QAASb,GALX,2BASA,cAACc,EAAA,EAAD,CACEC,sBAAoB,EACpBC,sBAAoB,EACpBC,KAAMjC,GACNkC,QAASlB,GAJX,SAME,sBAAKnL,UAAWC,GAAQmJ,UAAxB,UACE,cAACkD,EAAA,EAAD,6BACA,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACEzP,MAAOyN,GACP/H,SAAU4I,GACV7I,aAAcb,EACde,SAAU,MAGd,eAAC+J,EAAA,EAAD,WACE,cAACV,EAAA,EAAD,CACEE,QA3GoB,WAClC5B,IAAe,IA2GDzH,QAAQ,YACRhF,MAAO,UAHT,oBAOA,cAACmO,EAAA,EAAD,CACEE,QA/GqB,WAC/BzB,KAAmBxO,IAAQ4N,EAAc8C,SAASlC,KACpDjE,MAAM,qDACNkE,GAAkB,MAElBZ,EAAiB,GAAD,mBAAKD,GAAL,CAAoBY,MACpCH,IAAe,GACfI,GAAkB,IAClBE,IAAW,KAwGC/H,QAAQ,YACRhF,MAAO,UAHT,wBAUN,cAACmO,EAAA,EAAD,CACEtF,MAAO,CAAErE,WAAY,UACrBQ,QAAQ,YACRhF,MAAM,UACNgJ,UAAW,EACXqF,QA7G2B,WACnC1B,IAAY,IAuGN,yBASA,cAAC2B,EAAA,EAAD,CACEC,sBAAoB,EACpBC,sBAAoB,EACpBC,KAAM/B,GACNgC,QAAShB,GAJX,SAME,sBAAKrL,UAAWC,GAAQmJ,UAAxB,UACE,cAACkD,EAAA,EAAD,0BACA,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACEzP,MAAOyN,GACP/H,SAAU4I,GACV7I,aAAcb,EACde,SAAU,MAGd,eAAC+J,EAAA,EAAD,WACE,cAACV,EAAA,EAAD,CACEE,QAASX,GACT1I,QAAQ,YACRhF,MAAO,UAHT,oBAOA,cAACmO,EAAA,EAAD,CACEE,QApIkB,SAAChJ,GAC7B2G,EAAc8C,SAASlC,KACzBjE,MAAM,mCACNkE,GAAkB,MAElBR,GAAQO,IACRD,IAAY,GACZM,IAAgB,GAChBJ,GAAkB,MA6HN7H,QAAQ,YACRhF,MAAO,UAHT,2BAWR,eAACuC,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJF,WAAS,EACTqG,MAAO,CAAExI,SAAU,EAAGoE,UAAW,UACjCgE,UAAU,SACVyF,QAAQ,SANV,UAQE,eAACa,EAAA,EAAD,CAAY/J,QAAQ,UAAUgK,MAAM,SAASC,UAAU,MAAvD,UACE,sBAAMpG,MAAO,CAAEuF,YAAa,UAA5B,8BACiB/F,EADjB,OAGA,sBAAMQ,MAAO,CAAErE,WAAY,UAA3B,wBAAgDwD,QAElD,eAAC+G,EAAA,EAAD,CAAY/J,QAAQ,UAAUgK,MAAM,SAASC,UAAU,MAAvD,UACE,uBAAMpG,MAAO,CAAEuF,YAAa,UAA5B,2BAAuDhQ,MACvD,uBAAMyK,MAAO,CAAErE,WAAY,UAA3B,6BAEE,sBAAMqE,MAAO,CAAErE,WAAY,WAA3B,SACGwH,EAAc1G,KAAI,SAAC7C,EAAM6K,GAAP,OACjB,cAAC4B,EAAA,EAAD,CAAMrG,MAAO,CAAC7I,MAAON,GAAMO,QAAQkP,QAAQC,MAAOC,KAAI,WAAM5M,GAA5D,SACG6K,IAAUtB,EAAc7D,OAAS,EAAI1F,EAAO,IAAMA,qBAQhEyK,IACC,cAAC3K,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJwL,QAAQ,SACRnI,WAAW,SACX8C,MAAO,CAAEpE,UAAW,QALtB,SAOE,cAACsK,EAAA,EAAD,CAAYE,UAAU,MAAMjK,QAAQ,KAAKgK,MAAM,SAA/C,6BAKF9B,GA0HE,KAzHFF,GACE,cAACzK,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAImG,MAAO,CAAEqC,SAAU,WAAYnL,OAAQ,QAA1D,SACE,cAAC,GAAD,MAGFiM,EAAc1G,KAAI,SAACgK,EAAahC,GAAd,OAChB,eAAC/K,EAAA,EAAD,CAAME,MAAI,EAACyC,GAAIoK,EAAa9M,WAAS,EAACqG,MAAO,CAAEpE,UAAW,GAA1D,UACE,cAAClC,EAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,IAC1B,cAACJ,EAAA,EAAD,CAAMF,UAAWC,GAAQqD,MAAOlD,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAjD,SACE,eAACC,EAAA,EAAD,CACEiG,MAAO,CAAEqC,SAAU,YACnB7I,UAAWC,GAAQ3C,MACnBqJ,UAAW,EAHb,UAKE,eAACzG,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACf,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAACqM,EAAA,EAAD,CAAY/J,QAAQ,KAAKgK,MAAM,SAA/B,SACGM,MAGL,cAAC/M,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC6M,EAAA,EAAD,CACEC,aAAW,SACXnB,QAAS,kBApMT,SAAC9I,GACrB,IAAI8B,EAAS,YAAO2E,GACpB3E,EAAYA,EAAUgG,QAAO,SAAC5K,GAAD,OAAUA,IAAS8C,KAChD0G,EAAiB5E,GAiMkBoI,CAAcH,IAF/B,SAIE,cAAC,KAAD,CAA0BtP,MAAM,qBAIpC8M,IAAWd,EAAc7D,OAAS,IAAMmF,EAwExC,qBACEzE,MAAO,CACLqC,SAAU,WACVpI,MAAO,MACP/C,OAAQ,MACR+F,QAAS,OACTO,eAAgB,SAChBN,WAAY,UAPhB,SAUE,cAAC,GAAD,MAjFF,cAAClD,EAAA,EAAD,CAAqBC,MAAO,OAAQ/C,OAAQ,MAA5C,SACE,eAACkJ,EAAA,EAAD,CACE/K,KAAMyC,GACN+K,OAAQ,CACNX,IAAK,GACL1H,MAAO,GACPD,KAAM,EACNsM,OAAQ,IAEVC,OAAO,QART,UAUE,+BACE,iCACEzK,GAAG,UACHgE,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IALL,UAOE,sBACEC,OAAO,KACPC,UAAU,UACVC,YAAa,KAEf,sBACEF,OAAO,MACPC,UAAU,UACVC,YAAa,UAInB,cAACxG,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CACEC,QAAQ,OACRS,OAAQlE,GAAMO,QAAQC,KAAKC,YAE7B,cAACmD,EAAA,EAAD,CACEM,OAAQlE,GAAMO,QAAQC,KAAKC,UAC3BwD,KAAK,SACL8F,OAAQ,CACN,SAACC,GACC,OAAIA,EAAU,EACLC,KAAKC,MAAMF,IAEVA,EAAW,EAAIA,EAAW,IAAIG,QACpC,IAIN,SAACC,GACC,OAAIA,EAAU,EACLH,KAAKI,KAAKD,IAETA,EAAW,EAAIA,EAAW,IAAID,QACpC,OAMV,cAACtG,EAAA,EAAD,CAASC,QAAS,cAACvB,GAAD,MAClB,cAACgI,EAAA,EAAD,CACEtG,KAAK,WACLR,QAASmM,EACT1L,OAAQlE,GAAMO,QAAQC,KAAKC,UAC3BgK,YAAa,EACbC,KAAK,4BAoBjB,cAAC7H,EAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,c,4DCxfzBiN,GAnBE,SAAE5R,GAAY,IACpB6R,EAAqB7R,EAArB6R,KAAM3F,EAAelM,EAAfkM,QAAS4F,EAAM9R,EAAN8R,GAEhBC,EAAaC,IAAMC,SACrB,kBAAMD,IAAME,YAAW,SAACC,EAAW3E,GAAZ,OAAoB,cAAC,KAAD,aAAYsE,GAAIA,EAAItE,IAAKA,GAAS2E,SAC7E,CAACL,IAGL,OAEI,aADA,CACA,eACA,eAACM,GAAA,EAAD,CAAUC,QAAM,EAACpB,UAAWc,EAA5B,UACKF,EAAO,cAACS,GAAA,EAAD,UAAeT,IAAuB,KAChD,cAACU,GAAA,EAAD,CAAcrG,QAASA,U,oFCT3B1K,GAAYC,aAAW,SAACC,GAAD,MAAY,CAErC8Q,QAAS9Q,EAAM+Q,OAAOD,YAwCXE,OAnBf,WACI,IAAMpO,EAAU9C,KAChB,OACI,sBAAK6C,UAAWC,EAAQqO,QAAxB,UACI,qBAAKtO,UAAWC,EAAQkO,UACxB,cAACI,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,WACK,cAAC,GAAD,CAAUf,GAAG,IAAI5F,QAAQ,OAAO2F,KAAM,cAAC,KAAD,MACvC,cAAC,GAAD,CAAUC,GAAG,WAAW5F,QAAQ,UAAU2F,KAAM,cAAC,KAAD,MAChD,cAAC,GAAD,CAAUC,GAAG,aAAa5F,QAAQ,YAAY2F,KAAM,cAAC,KAAD,SAExD,cAACe,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,UACI,cAAC,GAAD,CAAUf,GAAG,kBAAkB5F,QAAQ,iBAAiB2F,KAAM,cAAC,KAAD,Y,8NCG/DiB,GA7CW,SAAC9S,GAAW,IAElCsE,EAKEtE,EALFsE,QACAyO,EAIE/S,EAJF+S,MACAC,EAGEhT,EAHFgT,QACAC,EAEEjT,EAFFiT,cACFC,EACIlT,EADJkT,SAKA,OACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACDF,EAAS5L,KAAI,SAAA4L,GAAQ,OACrB,eAACG,GAAA,EAAD,CAEOrC,MAAOkC,EAASlC,MAChBpP,QAASsR,EAASI,eAAiB,OAAS,UAC5CC,cAAeP,IAAYE,EAAShM,IAAK6L,EAJhD,cAKQG,EAASM,UAAY,eAACC,GAAA,EAAD,CACpBvP,OAAQ8O,IAAYE,EAAShM,GAC7BuD,UAAWuI,IAAYE,EAAShM,GAAK6L,EAAQ,MAC7C1C,SAfeqD,EAeYR,EAAShM,GAfR,SAAC0I,GACvCqD,EAAcrD,EAAO8D,KAWS,UAKnBR,EAAS9O,MACT4O,IAAYE,EAAShM,GACpB,sBAAM7C,UAAWC,EAAQqP,eAAzB,SACa,SAAVZ,EAAmB,oBAAsB,qBAE1C,QAGZ,cAACU,GAAA,EAAD,UAESP,EAAS9O,UAnBP8O,EAAShM,IARE,IAACwM,UCOvBlS,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCU,KAAM,CACJ0C,MAAO,OACP/C,OAAQ,QAEVJ,MAAO,CACLmD,MAAO,OACP/C,OAAQ,OACR2F,aAAchG,EAAMG,QAAQ,IAE9B+R,MAAO,CACLlN,SAAU,KAEZiN,eAAgB,CACdE,OAAQ,EACRC,KAAM,gBACN/R,OAAQ,EACR2L,QAAS,EACT9F,SAAU,SACVhG,QAAS,EACTsL,SAAU,WACVH,IAAK,GACLjI,MAAO,GAETiP,YAAa,CACXjM,QAAS,OACTC,WAAY,UAEdiM,KAAM,CACJjS,OAAQ,SACR2L,OAAQ,gBAEVuG,kBAAmB,CACjBjS,MAAO,aAKX,SAASkS,GACPC,EACA/Q,EACAgR,EACAC,EACAC,EACAC,EACAC,EACAC,EACAzR,GAEA,IAAIL,EAAWK,EAAKsE,KAAI,SAACpH,GAAD,MAAW,CAAEiB,MAAOjB,MAE5C,MAAO,CACLiU,UACAE,SACAjR,OACAgR,QACAE,kBACAC,iBACAC,cACAC,YACA9R,SAVFA,EAAWA,EAAS0M,QAAO,SAACnP,EAAMoP,GAAP,OAAkBA,EAAQ,IAAM,MAe7D,IAAMoF,GAAY,CAChB,CACExN,GAAI,UACJ8J,MAAO,QACP2D,SAAS,EACTrB,gBAAgB,EAChBlP,MAAO,GACPoP,WAAW,GAEb,CACEtM,GAAI,OACJyN,SAAS,EACT3D,MAAO,OACPsC,gBAAgB,EAChBlP,MAAO,OACPoP,WAAW,GAEb,CACEtM,GAAI,QACJ8J,MAAO,QACP2D,SAAS,EACTrB,gBAAgB,EAChBlP,MAAO,QACPoP,WAAW,GAEb,CACEtM,GAAI,kBACJ8J,MAAO,QACP2D,SAAS,EACTrB,gBAAgB,EAChBlP,MAAO,MACPoP,WAAW,GAEb,CACEtM,GAAI,cACJ8J,MAAO,QACP2D,SAAS,EACTrB,gBAAgB,EAChBlP,MAAO,SACPoP,WAAW,GAEb,CACEtM,GAAI,YACJ8J,MAAO,QACP2D,SAAS,EACTrB,gBAAgB,EAChBlP,MAAO,aACPoP,WAAW,GAEb,CACEtM,GAAI,YACJ8J,MAAO,SACP2D,SAAS,EACTrB,gBAAgB,EAChBlP,MAAO,cACPoP,WAAW,IAKf,SAASoB,GAAqBvU,EAAGyC,EAAGkQ,GAClC,OAAIlQ,EAAEkQ,GAAW3S,EAAE2S,IACT,EAENlQ,EAAEkQ,GAAW3S,EAAE2S,GACV,EAEF,EAST,SAAS6B,GAAWC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMxN,KAAI,SAAC2N,EAAI3F,GAAL,MAAe,CAAC2F,EAAI3F,MAMrD,OALA0F,EAAe3R,MAAK,SAAChD,EAAGyC,GACtB,IAAMiQ,EAAQgC,EAAW1U,EAAE,GAAIyC,EAAE,IACjC,OAAc,IAAViQ,EAAoBA,EACjB1S,EAAE,GAAKyC,EAAE,MAEXkS,EAAe1N,KAAI,SAAC2N,GAAD,OAAQA,EAAG,MAGvC,IAsPeC,GAtPQ,SAAClV,GAEtB,IAFgC,EAyCiBkJ,sBAnBvB,SAACC,EAAOC,GAChC,OAAQA,EAAOzD,MACb,IAAK,UACH,OAAO,2BACFwD,GADL,IAEEgM,KAAM/L,EAAOjF,QAAQgR,OAEzB,IAAK,iBACH,OAAO,2BACFhM,GADL,IAEEiM,YAAahM,EAAOjF,QAAQkR,QAEhC,QACE,OAAO,eACFlM,MAOT,CACEgM,KAAM,EACNC,YAAa,KA7Ce,mBAyCzBE,EAzCyB,KAyCTC,EAzCS,OAgDyBrM,sBA9CnC,SAACC,EAAOC,GAC5B,OAAQA,EAAOzD,MACb,IAAK,UACH,OAAO,2BACFwD,GADL,IAEEqM,WAAYpM,EAAOjF,QAAQjE,KAC3B4O,SAAS,IAEb,IAAK,iBACH,OAAO,2BACF3F,GADL,IAEE4J,MAAO3J,EAAOjF,QAAQ4O,MACtBC,QAAS5J,EAAOjF,QAAQ6O,UAE5B,QACE,OAAO,eACF7J,MAgCT,CACEqM,WAAY,GACZzC,MAAO,OACPC,QAAS,YACTlE,SAAS,IAtDmB,mBAgDzB2G,EAhDyB,KAgDLC,EAhDK,KAyDxBpU,EAA0BoB,qBAAW7C,GAArCyB,sBAEFgD,EAAU9C,KACVE,EAAQuH,cACdpI,QAAQC,IAAIY,GAEZ6B,qBAAU,WAAM,4CAEd,8BAAAlD,EAAA,sEACqBiB,IADrB,OACMb,EADN,OAEEI,QAAQC,IAAIL,GACRkV,EAAclV,EAAO6G,KAAI,SAAC7G,GAAD,OAC3ByT,GACEzT,EAAOmV,gBACPnV,EAAO2C,KACP3C,EAAOoV,cACPpV,EAAOqV,MACPrV,EAAOsV,4BACPtV,EAAOuV,uCACPvV,EAAOwV,aACPxV,EAAOyV,WACPzV,EAAO0V,gBAAgB/B,UAG3BvT,QAAQC,IAAI6U,GACZD,EAA2B,CACzB/P,KAAM,UACNxB,QAAS,CACPjE,KAAMyV,KApBZ,4CAFc,sBACd3V,EAAMwD,QAAQ,kBADA,mCA0BdQ,KAEC,IAEH,IA7GqB+O,EAAOC,EAkJ5B,OAFAnS,QAAQC,IAAI2U,EAAoBH,GAG9B,qBAAKjR,UAAWC,EAAQlC,KAAxB,SACA,eAACwC,EAAA,EAAD,CAAOP,UAAWC,EAAQ3C,MAA1B,UACE,cAACyU,GAAA,EAAD,CAAgBvL,MAAO,CAAE9I,OAAQ,OAAjC,SACE,eAACsU,GAAA,EAAD,CAAOC,cAAY,EAACjS,UAAWC,EAAQsP,MAAvC,UACE,cAAC,GAAD,CACEtP,QAASA,EACTyO,MAAO0C,EAAmB1C,MAC1BC,QAASyC,EAAmBzC,QAC5BC,cA9CgB,SAACrD,EAAO8D,GAChC,IAAM6C,EACJd,EAAmBzC,UAAYU,GACF,QAA7B+B,EAAmB1C,MACrB2C,EAA2B,CACzB/P,KAAM,iBACNxB,QAAS,CACP4O,MAAOwD,EAAQ,OAAS,MACxBvD,QAASU,MAuCLR,SAAUwB,KAEXe,EAAmB3G,QAClB,cAAC,GAAD,IAEA,cAAC0H,GAAA,EAAD,UACC3B,GACCY,EAAmBD,YAnKVzC,EAqKP0C,EAAmB1C,MArKLC,EAsKdyC,EAAmBzC,QArKhB,SAAVD,EACH,SAAC1S,EAAGyC,GAAJ,OAAU8R,GAAqBvU,EAAGyC,EAAGkQ,IACrC,SAAC3S,EAAGyC,GAAJ,OAAW8R,GAAqBvU,EAAGyC,EAAGkQ,MAsK7B1P,MACCgS,EAAeH,KAAOG,EAAeF,YACrCE,EAAeH,KAAOG,EAAeF,YACnCE,EAAeF,aAElB9N,KAAI,SAACmP,EAAKnH,GACT,OACE,eAAC8D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWpC,UAAU,KAAK/J,GAAIuP,EAAItC,QAASuC,MAAM,MAAjD,SACGD,EAAItC,UAEP,cAACd,GAAA,EAAD,CAAWzR,QAAQ,OAAOoP,MAAM,OAAhC,SACE,sBAAK3M,UAAWC,EAAQyP,YAAxB,UACE,qBACE4C,IAAKF,EAAIpC,OACThQ,UAAWC,EAAQ0P,KACnB4C,IAAI,SAEN,+BAAOH,EAAIrT,YAGf,cAACiQ,GAAA,EAAD,CAAWrC,MAAM,QAAjB,SAA0B,SAAMyF,EAAIrC,QACpC,cAACf,GAAA,EAAD,CAAWrC,MAAM,QAAjB,SACGyF,EAAInC,gBAAkB,EACrB,eAACvD,EAAA,EAAD,CAAY1M,UAAWC,EAAQ2P,kBAA/B,UACGwC,EAAInC,gBADP,OAIA,eAACvD,EAAA,EAAD,CAAY/O,MAAM,QAAlB,UACGyU,EAAInC,gBADP,SAKJ,cAACjB,GAAA,EAAD,CAAWrC,MAAM,QAAjB,SAA0B,SAAMyF,EAAIjC,cACpC,cAACnB,GAAA,EAAD,CAAWrC,MAAM,QAAjB,SAA0B,SAAMyF,EAAIhC,YACpC,cAACpB,GAAA,EAAD,CACEzR,QAAQ,OACRiV,KAAK,QACLhM,MAAO,CACL9I,OAAQ,QAJZ,SAOE,qBACE8I,MAAO,CAAE/C,QAAS,OAAQO,eAAgB,UAD5C,SAGE,eAACtD,EAAA,EAAD,CAAWD,MAAO,IAAK/C,OAAQ,GAAI7B,KAAMuW,EAAI9T,SAA7C,UACE,cAAC2C,EAAA,EAAD,CAAOwR,MAAM,EAAMrL,OAAQ,CAAC,UAAW,aACtCgL,EAAIlC,eAAiB,EACpB,cAAC7O,EAAA,EAAD,CACEqR,kBAAmB,IACnBC,KAAK,EACLC,cAAc,EACdtR,KAAK,WACLR,QAAQ,QACRS,OAAO,QACPsR,YAAa,IAGf,cAACxR,EAAA,EAAD,CACEqR,kBAAmB,IACnBC,KAAK,EACLC,cAAc,EACdtR,KAAK,WACLR,QAAQ,QACRS,OAAQlE,EAAMO,QAAQrB,MAAMc,EAAMO,QAAQ0D,MAC1CuR,YAAa,aA1DVT,EAAIrT,gBAuE/B,cAAC+T,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BnG,UAAU,MACVoG,MAAO5B,EAAmBD,WAAWrL,OACrCiL,YAAaE,EAAeF,YAC5BD,KAAMG,EAAeH,KACrBmC,aAjImB,SAAC1H,EAAO2H,GAC/B1W,QAAQC,IAAIyW,GACZhC,EAAuB,CACrB5P,KAAM,UACNxB,QAAS,CACPgR,KAAMtH,SAAS0J,OA6HfC,oBAxH0B,SAAC5H,GAC/B/O,QAAQC,IAAI8O,EAAMlF,OAAOvJ,OACzBoU,EAAuB,CACrB5P,KAAM,iBACNxB,QAAS,CACPkR,MAAOzF,EAAMlF,OAAOvJ,kBCrQtBsW,GAAc,IAEdjW,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCU,KAAM,CACJ0F,QAAS,QAEX4P,OAAO,eACJhW,EAAMiW,YAAYC,GAAG,MAAQ,CAC5B9S,MAAO2S,GACPI,WAAY,IAGhBC,OAAO,eACJpW,EAAMiW,YAAYC,GAAG,MAAQ,CAC5B9S,MAAM,eAAD,OAAiB2S,GAAjB,OACLjR,WAAYiR,KAGhBM,WAAW,aACT3H,YAAa1O,EAAMG,QAAQ,IAC1BH,EAAMiW,YAAYC,GAAG,MAAQ,CAC5B9P,QAAS,SAIb0K,QAAS9Q,EAAM+Q,OAAOD,QACtBwF,YAAa,CACXxV,gBAAiBd,EAAMO,QAAQiK,QAAQvG,KACvCb,MAAO2S,IAETjS,QAAS,CACPnD,SAAU,GAEZ4V,MAAO,CACL5V,SAAU,GAEZmC,UAAW,CACToD,SAAU,SACVhG,QAASF,EAAMG,QAAQ,GACvBqW,SAAU,QACVnW,OAAQ,YA8GGoW,OA1Gf,SAAanY,GACX,IAAMsE,EAAU9C,KACR4W,EAAWpY,EAAXoY,OACF1W,EAAQuH,cAHI,EAIoBhJ,oBAAS,GAJ7B,mBAIXoY,EAJW,KAIEC,EAJF,OAKoBrY,mBAAS,IAL7B,mBAKXsY,EALW,KAKEC,EALF,OAMcvY,oBAAS,GANvB,mBAMXwY,EANW,KAMDC,EANC,KAYZC,EAAWC,aAAe,CAC9B3W,QAAS,CACP0D,KAAM8S,EAAW,OAAS,WAIxBI,EAAe,WACnBP,GAAgBD,IAGZ7T,OACOsU,IAAXV,EAAuB,kBAAMA,IAASW,SAASC,WAAOF,EAExD,OACE,cAACG,GAAA,EAAD,CAAevX,MAAOiX,EAAtB,SACA,eAAC/T,EAAA,EAAD,CAAOP,UAAWC,EAAQlC,KAAM4I,UAAW,EAA3C,UACI,cAACkO,GAAA,EAAD,IACA,eAAC,KAAD,WACE,cAACC,GAAA,EAAD,CAAQjM,SAAS,QAAQ7I,UAAWC,EAAQwT,OAA5C,SACE,eAACsB,GAAA,EAAD,WACE,cAAC7H,EAAA,EAAD,CACE8H,KAAK,QACLhV,UAAWC,EAAQyT,WACnB/V,MAAM,UACNwP,aAAW,OACXnB,QAASwI,EALX,SAOE,cAAC,KAAD,MAEF,cAAC9H,EAAA,EAAD,CAAY/J,QAAQ,KAAK3C,UAAWC,EAAQ2T,MAA5C,SACGM,IAEH,cAACpI,EAAA,EAAD,CAAQE,QArCA,WAClBqI,GAAaD,GACb5X,QAAQC,IAAI2X,IAmC4BzW,MAAM,UAApC,SAA+CyW,EAAW,cAAC,KAAD,IAAqB,cAAC,KAAD,WAGnF,sBAAK5N,MAAO,CAACrI,gBAAiB,QAAS6B,UAAWC,EAAQoT,OAAQlG,aAAW,qBAA7E,UACE,cAAC8H,GAAA,EAAD,CAAQC,MAAI,EAAZ,SACE,cAACC,GAAA,EAAD,CACEhV,UAAWA,EACXwC,QAAQ,YACRyS,OAA4B,QAApB/X,EAAM+I,UAAsB,QAAU,OAC9CgG,KAAM4H,EACN3H,QAASmI,EACTvU,QAAS,CACP3C,MAAO2C,EAAQ0T,aAEjB0B,WAAY,CACVC,aAAa,GAVjB,SAaE,cAAC,GAAD,QAGJ,cAACL,GAAA,EAAD,CAAQM,QAAM,EAAd,SACE,cAACJ,GAAA,EAAD,CACElV,QAAS,CACP3C,MAAO2C,EAAQ0T,aAEjBhR,QAAQ,YACRyJ,MAAI,EALN,SAOE,cAAC,GAAD,WAIN,uBAAMpM,UAAWC,EAAQkB,QAAzB,UACE,qBAAKnB,UAAWC,EAAQkO,UACxB,qBAAKnO,UAAWC,EAAQE,UAAxB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOqV,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMtW,QAASgV,MAEjB,cAAC,KAAD,CAAOsB,KAAK,aAAZ,SACE,cAAC,EAAD,CAAWtW,QAASgV,MAEtB,cAAC,KAAD,CAAOsB,KAAK,WAAZ,SACE,cAAC,GAAD,CAAStW,QAASgV,MAEpB,cAAC,KAAD,CAAOsB,KAAK,kBAAZ,SACE,cAAC,GAAD,CAAgBtW,QAASgV,2B,OCnK/CuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJlB,SAASmB,eAAe,W","file":"static/js/main.8f656faa.chunk.js","sourcesContent":["import { useState, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const FetchContext = createContext();\n\nconst FetchContextProvider = (props) => {\n  const [data, setData] = useState();\n  async function GetDataWithBase(base) {\n    let result = await axios\n      .get(`https://api.exchangeratesapi.io/latest?base=${base ? base : \"EUR\"}`)\n      .then((result) => {\n        return result.data.rates;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return result;\n  }\n  async function GetHistoryData(base, symbol, start, end) {\n    let result = await axios\n      .get(\n        `https://api.exchangeratesapi.io/history?start_at=${start}&end_at=${end}&symbols=${symbol}&base=${\n          base ? base : \"EUR\"\n        }`\n      )\n      .then((result) => {\n        // setData(result.data.rates);\n        return result.data.rates;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return result;\n  }\n\n  async function GetCryptoCurrencyData(base) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${base ? base : \"INR\"}&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=2C24h%2C7d`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return result;\n  }\n\n  return (\n    <FetchContext.Provider\n      value={{\n        data,\n        setData,\n        GetDataWithBase,\n        GetHistoryData,\n        GetCryptoCurrencyData,\n      }}\n    >\n      {props.children}\n    </FetchContext.Provider>\n  );\n};\n\nexport default FetchContextProvider;\n","import { useEffect, useContext, useState } from \"react\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Line,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(3),\n    paddingRight: theme.spacing(5),\n    height: '70vh',\n    color: theme.palette.text.secondary,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"#444\",\n    backgroundColor: \"hsla(0,0%,100%,0.4)\",\n  },\n}));\n\nconst Home = (props) => {\n  const { data, setData, GetDataWithBase } = useContext(FetchContext);\n  const [plotData, setPlotData] = useState([]);\n  // let windWidth = window.innerWidth;\n  // let windHeight = (window.innerHeight - 120); // removing the height taken by navbar, padding etc\n\n  useEffect(() => {\n    props.setPath(\"Home\");\n    const fetchData = async () => {\n      let result = await GetDataWithBase(\"INR\");\n      if (typeof result === \"object\") {\n        let dataArray = Object.entries(result);\n        let maxValue = dataArray[0][1];\n        let minValue = dataArray[0][1];\n        let minKey = dataArray[0][0];\n        let maxKey = dataArray[0][0];\n        dataArray.forEach(([key, value]) => {\n          if (value > maxValue) {\n            maxValue = value;\n            maxKey = key;\n          } else if (minValue > value) {\n            minValue = value;\n            minKey = key;\n          }\n        });\n        console.log(maxValue, minValue);\n        console.log(maxKey + \" , \" + minKey);\n        result = await GetDataWithBase(minKey);\n        dataArray = Object.entries(result);\n        setPlotData(getPlotData(dataArray));\n        setData(result);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function compare(a, b) {\n    return (a[\"value\"] - b[\"value\"]) * -1;\n  }\n\n  function getPlotData(data) {\n    let plot = [];\n    data.forEach(([key, value]) => {\n      plot.push({ name: key, value: 1 / value });\n    });\n    plot = plot.sort(compare).slice(0);\n    console.log(plot);\n    return plot;\n  }\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Country: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={1} sm={false}></Grid>\n        <Grid item xs={12} sm={10}>\n          <Paper className={classes.paper}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={plotData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"\"\n                  padding={{ left: 15, right: 15 }}\n                />\n                <YAxis />\n                <Tooltip content={<CustomToolTip />} />\n                <Legend />\n                <Line type=\"monotone\" dataKey=\"value\" stroke=\"#82ca9d\" />\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={1} sm={false}></Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { useState, useContext, createContext } from \"react\";\n\nexport const CountryKeysContext = createContext();\n\nconst CountryKeysContextProvider = (props) => {\n  const { GetDataWithBase } = useContext(FetchContext);\n  const [keys, setKeys] = useState([]);\n  const [isKeySet, setIsKeySet] = useState(false);\n  async function FetchKeys() {\n    console.log(\"getKeysCalled\");\n    let result = await GetDataWithBase();\n    if (typeof result === \"object\") {\n      result = { ...result, EUR: 1 };\n      result = Object.keys(result);\n      result.sort();\n      setKeys(result);\n      setIsKeySet(true);\n      return result;\n    } else {\n      console.log(\"rejected\");\n      return Promise.reject();\n    }\n  }\n  return (\n    <CountryKeysContext.Provider value={{ keys, isKeySet, FetchKeys }}>\n      {props.children}\n    </CountryKeysContext.Provider>\n  );\n};\n\nexport default CountryKeysContextProvider;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, MenuItem, Select, InputLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    minWidth: 90,\n  },\n}));\nconst CountryOption = (props) => {\n  const { value, countryNames, onChange, optionNo, label } = props;\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      variant=\"outlined\"\n      className={classes.formControl}\n    >\n    { label && <InputLabel id={`${label}-optionNo-label`}>{label}</InputLabel> }\n      <Select\n        labelId={`${label}-optionNo-label`}\n        id={label}\n        label={label}\n        value={value}\n        onChange={(e) => onChange(e)}\n      >\n        {countryNames.map((country) => {\n          return (\n            <MenuItem key={country + optionNo} value={country}>\n              {country}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default CountryOption;\n","import { TextField, Grid, Paper } from \"@material-ui/core\";\nimport { useEffect, useContext, useReducer } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"60vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 2rem 1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  seperator: {\n    fontSize: 24, \n    paddingLeft: 10,\n  },\n  inputFeildArea: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  }\n\n}));\n\nconst Converter = (props) => {\n  // Reducer function\n  const converterDataReducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_COUNTRIES\":\n        return {\n          ...state,\n          countries: action.payload.countries,\n        };\n      case \"UPDATE_FIRSTCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: true,\n          firstCountry: action.payload.key,\n        };\n      case \"UPDATE_SECONDCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: false,\n          secondCountry: action.payload.key,\n        };\n      case \"UPDATE_FIRSTVALUE\":\n        return {\n          ...state,\n          firstValue: action.payload,\n        };\n      case \"UPDATE_SECONDVALUE\":\n        return {\n          ...state,\n          secondValue: action.payload,\n        };\n      case \"UPDATEVALUES\":\n        return {\n          ...state,\n          firstValue: action.payload.firstVal,\n          secondValue: action.payload.secondVal,\n        };\n      case \"UPDATE_CONVERSIONRATE\":\n        return {\n          ...state,\n          conversionRate: action.payload,\n        };\n      case \"SETPLOTDATA&CONVERTIONRATE\":\n        return {\n          ...state,\n          plotData: action.payload.plotData,\n          conversionRate: action.payload.rate,\n        };\n      default:\n        throw new Error();\n    }\n  };\n\n  const getDate = (y) => {\n    let date = new Date();\n    let dd = String(date.getDate()).padStart(2, \"0\");\n    let mm = String(date.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    let yyyy = date.getFullYear() - y;\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n\n  const { setData, GetHistoryData } = useContext(FetchContext);\n  const { keys, isKeySet, FetchKeys } = useContext(CountryKeysContext); \n  const theme = useTheme();\n  const [converterData, dispatchConverterData] = useReducer(\n    converterDataReducer,\n    {\n      // Need to set countries with the first and second countries so to solve the warning\n      // from material ui about selected item not in the options\n      countries: [\"EUR\", \"INR\"],\n      firstCountry: \"EUR\",\n      firstValue: 1,\n      secondCountry: \"INR\",\n      secondValue: 1,\n      conversionRate: 1,\n      endDate: getDate(0),\n      plotData: [],\n      changedFirstCountry: true,  \n    }\n  );\n\n  useEffect(() => {\n    props.setPath(\"Converter\");\n    if (isKeySet && keys.length !== converterData.countries.length) {\n      dispatchConverterData({\n        type: \"SET_COUNTRIES\",\n        payload: {\n          countries: keys,\n        }\n      });\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let result = await FetchKeys();\n        dispatchConverterData({\n          type: \"SET_COUNTRIES\",\n          payload: {\n            countries: result,\n          }\n        });\n      }\n      getKeys();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    const startDate = getDate(1);\n    console.log(\n      converterData.firstCountry,\n      converterData.secondCountry,\n      startDate,\n      converterData.endDate\n    );\n    const fetchData = async () => {\n      let result = await GetHistoryData(\n        converterData.firstCountry,\n        converterData.secondCountry,\n        startDate,\n        converterData.endDate\n      );\n      if (typeof result === \"object\") {\n        let newPlotData = [];\n        result = Object.entries(result);\n        setData(result);\n        result.forEach(([key, value]) => {\n          newPlotData.push({\n            name: key,\n            value: value[converterData.secondCountry],\n          });\n        });\n        newPlotData.sort(compare); // Some data is jummbled that's why this sort\n        console.log(newPlotData.length);\n        let convRate = newPlotData[newPlotData.length - 1].value;\n        console.log(newPlotData);\n        dispatchConverterData({\n          type: \"SETPLOTDATA&CONVERTIONRATE\",\n          payload: {\n            plotData: newPlotData,\n            rate: convRate,\n          },\n        });\n        if (converterData.changedFirstCountry) {\n          let newValue = converterData.firstValue * convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: converterData.firstValue,\n              secondVal: newValue,\n            },\n          });\n        } else {\n          let newValue = converterData.secondValue / convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: newValue,\n              secondVal: converterData.secondValue,\n            },\n          });\n        }\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [converterData.secondCountry, converterData.firstCountry]);\n\n  const handleChangeOption1 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.secondCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_FIRSTCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const handleChangeOption2 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.firstCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_SECONDCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const changeInput1 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    } \n    let newValue = converterData.conversionRate * value;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: value,\n        secondVal: newValue,\n      },\n    });\n  };\n  const changeInput2 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    } \n    let newValue = value / converterData.conversionRate;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: newValue,\n        secondVal: value,\n      },\n    });\n  };\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <div className={classes.inputFeildArea}>        \n        <CountryOption\n          value={converterData.firstCountry}\n          onChange={handleChangeOption1}\n          countryNames={converterData.countries}\n          optionNo={1}\n          label={\"Base\"}\n        />\n        <span className={classes.seperator}> : </span>\n        <CountryOption\n          value={converterData.secondCountry}\n          onChange={handleChangeOption2}\n          countryNames={converterData.countries}\n          optionNo={2}\n          label={\"Country\"}\n        />\n      </div>\n      <div className={classes.inputFeildArea}>\n        <TextField\n          style={{marginLeft: 10}} // To aline it with the country options\n          id=\"outlined-number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={converterData.firstValue}\n          onChange={changeInput1}\n        />\n        <span className={classes.seperator}> : </span>\n        <TextField\n          style={{marginLeft: 10}} // To aline it with the country options\n          id=\"outlined-number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={converterData.secondValue}\n          onChange={changeInput2}\n        />\n      </div>\n      <Grid item container style={{marginTop: 5}}>\n        <Grid item xs={false} sm={1}></Grid>\n        <Grid className={classes.cover} item xs={12} sm={10}>\n          <Paper className={classes.paper} elevation={5}>\n            <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n              <AreaChart data={converterData.plotData}>\n                <defs>\n                  <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.9} />\n                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0.1} />\n                  </linearGradient>\n                </defs>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" stroke={theme.palette.text.secondary} />\n                <YAxis\n                  stroke={theme.palette.text.secondary}\n                  type=\"number\"\n                  domain={[\n                    (dataMin) => {\n                      if (dataMin > 1) {\n                        return Math.floor(dataMin);\n                      } else {\n                        return (dataMin - (2 * dataMin / 10)).toFixed(3);\n                      }\n                    },\n                    (dataMax) => {\n                      if (dataMax > 1) {\n                        return Math.ceil(dataMax);\n                      } else {\n                        return (dataMax + (3 * dataMax / 10)).toFixed(3);\n                      }\n                    }\n                  ]}\n                />\n                <Tooltip content={<CustomToolTip />} />\n                <Legend iconSize={0} />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  name={`Data From: ${getDate(1)} To: ${converterData.endDate}`}\n                  stroke={theme.palette.text.primary}\n                  fillOpacity={1}\n                  fill=\"url(#colorUv)\"\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={false} sm={1}></Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Converter;\n","import { useTheme } from '@material-ui/core';\nimport React, { useEffect, useRef } from 'react';\nimport { Spinner } from 'spin.js';\n\nconst Loader = (props) => {\n    const theme = useTheme();\n    let opts = {\n        lines: 11, // The number of lines to draw\n        length: 0, // The length of each line\n        width: 20, // The line thickness\n        radius: 44, // The radius of the inner circle\n        scale: 0.5, // Scales overall size of the spinner\n        corners: 1, // Corner roundness (0..1)\n        speed: 0.8, // Rounds per second\n        rotate: 0, // The rotation offset\n        animation: 'spinner-line-shrink', // The CSS animation name for the lines\n        direction: 1, // 1: clockwise, -1: counterclockwise\n        color: theme.palette.text.primary, // CSS color or array of colors\n        fadeColor: 'transparent', // CSS color or array of colors\n        top: '50%', // Top position relative to parent\n        left: '50%', // Left position relative to parent\n        shadow: '0 0 1px transparent', // Box-shadow for the lines\n        zIndex: 2000000000, // The z-index (defaults to 2e9)\n        className: 'spinner', // The CSS class to assign to the spinner\n        position: 'absolute', // Element positioning\n      };\n    const loader = useRef(null);\n    useEffect(() => {\n      // eslint-disable-next-line no-unused-vars\n      let spinner = new Spinner(opts).spin(loader.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    return (\n        <div style={{ width: '100%', height: \"100%\" }} ref={loader}>\n        </div>\n    );\n}\n \nexport default Loader;","import { useEffect, useContext, useState } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Grid,\n  Typography,\n  IconButton,\n  Link,\n} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport Loader from \"./Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"50vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 0.5rem 1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: \"hsla(0,0%,100%,0.4)\",\n  },\n  dialogBox: {\n    margin: \"2rem\",\n  },\n}));\n\nconst getDate = (y, m) => {\n  let date = new Date();\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1 - m).padStart(2, \"0\"); // January is 0!\n  let yyyy = date.getFullYear() - y;\n  // Edge cases yet if month is jan -m will not give desired results\n  if (parseInt(mm) <= 0) {\n    console.log(mm);\n    yyyy = String(parseInt(yyyy) - 1);\n    mm = String(12 + parseInt(mm));\n    console.log(mm);\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst History = (props) => {\n  const { keys: keysInitialise, isKeySet, FetchKeys } = useContext(\n    CountryKeysContext\n  );\n  const { GetHistoryData } = useContext(FetchContext);\n  const [plotCountries, setPlotCountries] = useState([]);\n  const [keys, setKeys] = useState([\"EUR\", \"INR\"]);\n  const [dataTime, setDataTime] = useState(\"1M\");\n  const [startDate, setStartDate] = useState(getDate(0, 1));\n  // eslint-disable-next-line no-unused-vars\n  const [endDate, setEndDate] = useState(getDate(0, 0));\n  const [base, setBase] = useState(\"EUR\");\n  const [firstRender, setFirstRender] = useState(true);\n  const [plotData, setPlotData] = useState([]);\n  const [countryOpen, setCountryOpen] = useState(false);\n  const [baseOpen, setBaseOpen] = useState(false);\n  const [dialogBoxInput, setDialogBoxInput] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [fetchingData, setFetchingData] = useState(true);\n  const [failedToLoadData, setFailedToLoadData] = useState(false);\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"History\");\n    if (isKeySet && keysInitialise.length !== keys.length) {\n      setKeys(keysInitialise);\n      setFirstRender(false);\n      setPlotCountries([...plotCountries, \"INR\"]);\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let result = await FetchKeys();\n        setKeys(result);\n      }\n      getKeys();\n      setFirstRender(false);\n      setPlotCountries([...plotCountries, \"INR\"]);\n      console.log(plotCountries);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    if (!firstRender) {\n      console.log(base, plotCountries.join(\",\"), startDate, endDate);\n      const fetchData = async () => {\n        let result = await GetHistoryData(\n          base,\n          plotCountries.join(\",\"),\n          startDate,\n          endDate\n        );\n        if (typeof result === \"object\") {\n          let newPlotData = [];\n          result = Object.entries(result);\n          result.forEach(([key, value]) => {\n            newPlotData.push({ name: key, ...value });\n          });\n          while (newPlotData.length > 500) {\n            newPlotData = newPlotData.filter((data, index) =>\n              index % 2 ? data : null\n            );\n          }\n          newPlotData.sort(compare); // Some data is jummbled that's why this sort\n          console.log(newPlotData);\n          setPlotData(newPlotData);\n          setLoading(false);\n          setFailedToLoadData(false);\n          setFetchingData(false);\n        } else {\n          setTimeout(() => {\n            setFailedToLoadData(true);\n            setFetchingData(false);\n          }, 1000);\n        }\n      };\n      fetchData();\n    }\n    console.log(plotCountries);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [base, plotCountries, startDate]);\n\n  const handleChangeTime = (event, newValue) => {\n    setDataTime(newValue);\n    setFetchingData(true);\n    let newDate;\n    switch (newValue) {\n      case \"1M\":\n        newDate = getDate(0, 1);\n        setStartDate(newDate);\n        break;\n\n      case \"1Y\":\n        newDate = getDate(1, 0);\n        setStartDate(newDate);\n        break;\n\n      case \"5Y\":\n        newDate = getDate(5, 0);\n        setStartDate(newDate);\n        break;\n\n      case \"MAX\":\n        newDate = getDate(12, 0);\n        setStartDate(newDate);\n        break;\n\n      default:\n        console.log(newValue);\n        break;\n    }\n  };\n\n  // Dialog box click functions\n\n  const handleClickCountryOpenDialogBox = () => {\n    setCountryOpen(true);\n  };\n  const handleCloseCountryDialogBox = () => {\n    setCountryOpen(false);\n  };\n  const handleCountryDialogBoxSubmit = () => {\n    if (dialogBoxInput === base || plotCountries.includes(dialogBoxInput)) {\n      alert(\"Country already ploted or it selected as the Base\");\n      setDialogBoxInput(\"\");\n    } else {\n      setPlotCountries([...plotCountries, dialogBoxInput]);\n      setCountryOpen(false);\n      setDialogBoxInput(\"\");\n      setLoading(true);\n    }\n  };\n\n  const handleDailogBoxInputChange = (e) => {\n    setDialogBoxInput(e.target.value);\n  };\n\n  const handleClickBaseOpenDialogBox = () => {\n    setBaseOpen(true);\n  };\n  const handleCloseBaseDialogBox = () => {\n    setBaseOpen(false);\n  };\n  const handleBaseDialogBoxSubmit = (e) => {\n    if (plotCountries.includes(dialogBoxInput)) {\n      alert(\"Base and country cannot be same\");\n      setDialogBoxInput(\"\");\n    } else {\n      setBase(dialogBoxInput);\n      setBaseOpen(false);\n      setFetchingData(true);\n      setDialogBoxInput(\"\");\n    }\n  };\n\n  // Removing a country from the List\n  const removeCountry = (country) => {\n    let countries = [...plotCountries];\n    countries = countries.filter((item) => item !== country);\n    setPlotCountries(countries);\n  };\n\n  // Custom tooltip for the Graph\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item container spacing={0}>\n        <Grid item xs={12} className={classes.options}>\n          <Tabs\n            className={classes.tabs}\n            value={dataTime}\n            onChange={handleChangeTime}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            centered\n          >\n            <Tab label=\"1M\" value=\"1M\" />\n            <Tab label=\"1Y\" value=\"1Y\" />\n            <Tab label=\"5Y\" value=\"5Y\" />\n            <Tab label=\"Max\" value=\"MAX\" />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12} container style={{ flexGrow: 1 }} justify=\"center\">\n          <Button\n            style={{ marginRight: \"0.5rem\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            elevation={2}\n            onClick={handleClickCountryOpenDialogBox}\n          >\n            + Add Country\n          </Button>\n          <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            open={countryOpen}\n            onClose={handleClickCountryOpenDialogBox}\n          >\n            <div className={classes.dialogBox}>\n              <DialogTitle>Choose Country</DialogTitle>\n              <DialogContent>\n                <CountryOption\n                  value={dialogBoxInput}\n                  onChange={handleDailogBoxInputChange}\n                  countryNames={keys}\n                  optionNo={1}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleCloseCountryDialogBox}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleCountryDialogBoxSubmit}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Ok\n                </Button>\n              </DialogActions>\n            </div>\n          </Dialog>\n          <Button\n            style={{ marginLeft: \"0.5rem\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            elevation={2}\n            onClick={handleClickBaseOpenDialogBox}\n          >\n            Change Base\n          </Button>\n          <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            open={baseOpen}\n            onClose={handleCloseBaseDialogBox}\n          >\n            <div className={classes.dialogBox}>\n              <DialogTitle>Choose Base</DialogTitle>\n              <DialogContent>\n                <CountryOption\n                  value={dialogBoxInput}\n                  onChange={handleDailogBoxInputChange}\n                  countryNames={keys}\n                  optionNo={1}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleCloseBaseDialogBox}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleBaseDialogBoxSubmit}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Ok\n                </Button>\n              </DialogActions>\n            </div>\n          </Dialog>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          style={{ flexGrow: 1, marginTop: \"0.5rem\" }}\n          direction=\"column\"\n          justify=\"center\"\n        >\n          <Typography variant=\"caption\" align=\"center\" component=\"div\">\n            <span style={{ marginRight: \"0.5rem\" }}>\n              {`Data From: ${startDate} `}\n            </span>\n            <span style={{ marginLeft: \"0.5rem\" }}>{` To: ${endDate}`}</span>\n          </Typography>\n          <Typography variant=\"caption\" align=\"center\" component=\"div\">\n            <span style={{ marginRight: \"0.5rem\" }}>Base Country: {base}</span>\n            <span style={{ marginLeft: \"0.5rem\" }}>\n              PlotedCountries:\n              <span style={{ marginLeft: \"0.25rem\" }}>\n                {plotCountries.map((item, index) => (\n                  <Link style={{color: theme.palette.success.info}} href={`#${item}`}>\n                    {index !== plotCountries.length - 1 ? item + \",\" : item}\n                  </Link>\n                ))}\n              </span>\n            </span>\n          </Typography>\n        </Grid>\n      </Grid>\n      {failedToLoadData && (\n        <Grid\n          item\n          xs={12}\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ marginTop: \"3rem\" }}\n        >\n          <Typography component=\"div\" variant=\"h4\" align=\"center\">\n            No data found\n          </Typography>\n        </Grid>\n      )}\n      {!failedToLoadData ? (\n        fetchingData ? (\n          <Grid item xs={12} style={{ position: \"relative\", height: \"50vh\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          plotCountries.map((countryName, index) => (\n            <Grid item id={countryName} container style={{ marginTop: 5 }}>\n              <Grid item xs={false} sm={1}></Grid>\n              <Grid className={classes.cover} item xs={12} sm={10}>\n                <Paper\n                  style={{ position: \"relative\" }}\n                  className={classes.paper}\n                  elevation={5}\n                >\n                  <Grid container>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={10}>\n                      <Typography variant=\"h4\" align=\"center\">\n                        {countryName}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={1}>\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => removeCountry(countryName)}\n                      >\n                        <HighlightOffOutlinedIcon color=\"secondary\" />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                  {!loading || plotCountries.length - 1 !== index ? (\n                    <ResponsiveContainer width={\"100%\"} height={\"90%\"}>\n                      <AreaChart\n                        data={plotData}\n                        margin={{\n                          top: 10,\n                          right: 30,\n                          left: 0,\n                          bottom: 10,\n                        }}\n                        syncId=\"Chart\"\n                      >\n                        <defs>\n                          <linearGradient\n                            id=\"colorUv\"\n                            x1=\"0\"\n                            y1=\"0\"\n                            x2=\"0\"\n                            y2=\"1\"\n                          >\n                            <stop\n                              offset=\"5%\"\n                              stopColor=\"#8884d8\"\n                              stopOpacity={0.9}\n                            />\n                            <stop\n                              offset=\"95%\"\n                              stopColor=\"#8884d8\"\n                              stopOpacity={0.1}\n                            />\n                          </linearGradient>\n                        </defs>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                          dataKey=\"name\"\n                          stroke={theme.palette.text.secondary}\n                        />\n                        <YAxis\n                          stroke={theme.palette.text.secondary}\n                          type=\"number\"\n                          domain={[\n                            (dataMin) => {\n                              if (dataMin > 1) {\n                                return Math.floor(dataMin);\n                              } else {\n                                return (dataMin - (2 * dataMin) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                            (dataMax) => {\n                              if (dataMax > 1) {\n                                return Math.ceil(dataMax);\n                              } else {\n                                return (dataMax + (3 * dataMax) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                          ]}\n                        />\n                        <Tooltip content={<CustomToolTip />} />\n                        <Area\n                          type=\"monotone\"\n                          dataKey={countryName}\n                          stroke={theme.palette.text.secondary}\n                          fillOpacity={1}\n                          fill=\"url(#colorUv)\"\n                        />\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"95%\",\n                        height: \"70%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Loader />\n                    </div>\n                  )}\n                </Paper>\n              </Grid>\n              <Grid item xs={false} sm={1}></Grid>\n            </Grid>\n          ))\n        )\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default History;\n","import { ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n\nconst LinkItem = ( props ) => {\n    const {icon, primary, to} = props;\n    \n    const renderLink = React.useMemo(\n        () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n        [to],\n      );\n   \n    return (\n        // <RouterLink to={to}>{primary}</RouterLink>\n        <li>\n        <ListItem button component={renderLink}>\n            {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n        </ListItem>\n        </li>\n    );\n}\n \nexport default LinkItem;\n","import { Divider, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinkItem from './LinkItem';\nimport Home from '@material-ui/icons/Home';\nimport History from '@material-ui/icons/History';\nimport AttachMoneyRoundedIcon from '@material-ui/icons/AttachMoneyRounded';\nimport MoneySharpIcon from '@material-ui/icons/MoneySharp';\n\n\nconst useStyles = makeStyles((theme) => ({\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    // wrapper: {\n    //     height: '100%',\n    //     '&::before' : {\n    //         content: '\"\"',\n    //         display: 'block',\n    //         position: \"absolute\",\n    //         left: 0,\n    //         top: 0,\n    //         width: \"100%\",\n    //         height: \"100%\",\n    //         opacity: \"0.6\",\n    //         backgroundImage: 'url(https://images.pexels.com/photos/6120172/pexels-photo-6120172.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500)',\n    //         backgroundRepeat: 'no-repeat',\n    //         backgroundSize: 'cover',\n    //         backgroundPosition: 'center',\n    //     }\n        \n    // }\n}));\n\nfunction NavOptions() {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.toolbar}></div>\n            <Divider />\n            <List>\n                 <LinkItem to=\"/\" primary=\"Home\" icon={<Home/>}/>\n                <LinkItem to=\"/history\" primary=\"History\" icon={<History/>}/>\n                <LinkItem to=\"/converter\" primary=\"Converter\" icon={<AttachMoneyRoundedIcon/>}/>\n            </List>\n            <Divider/>            \n            <List>\n                <LinkItem to=\"/cryptoCurrency\" primary=\"CryptoCurrency\" icon={<MoneySharpIcon/>}/>\n            </List>\n        </div>\n    );\n}\n \nexport default NavOptions;","import { TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst EnhancedTableHead = (props) => {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort,\n\t\theadCell,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n\t\t\t\t{headCell.map(headCell => (\n\t\t\t\t\t<TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          > {headCell.allowSort ? <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TableSortLabel\n            >\n              {headCell.label}\n            </TableSortLabel>\n\t\t\t\t\t\t}            \n          </TableCell>\t\t\n\t\t\t\t))}\n\t\t\t</TableRow>\n    </TableHead>\n  );\n};\n\nexport default EnhancedTableHead;\n","import {\n  makeStyles,\n  Paper,\n  TableContainer,\n  Table,\n  TableBody,\n  TablePagination,\n  TableRow,\n  TableCell,\n  Typography,\n  useTheme\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { Line, LineChart, YAxis } from \"recharts\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport Loader from './Loader';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    height: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  logoWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  logo: {\n    height: \"1.5rem\",\n    margin: \"0 0.5rem 0 0\",\n  },\n  incresePercentage: {\n    color: \"green\",\n  },\n}));\n\n// Formating data function\nfunction createData(\n  ranking,\n  name,\n  price,\n  imgSrc,\n  marketChange24h,\n  marketChange7d,\n  totalVolume,\n  marketCap,\n  plot\n) {\n  let plotData = plot.map((data) => ({ value: data }));\n  plotData = plotData.filter((data, index) => (index % 2 === 0 ? true : false));\n  return {\n    ranking,\n    imgSrc,\n    name,\n    price,\n    marketChange24h,\n    marketChange7d,\n    totalVolume,\n    marketCap,\n    plotData,\n  };\n}\n\n// Table Head\nconst headCells = [\n  {\n    id: \"ranking\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: true,\n    label: \"\",\n    allowSort: true,\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    align: \"left\",\n    disablePadding: true,\n    label: \"Name\",\n    allowSort: true,\n  },\n  {\n    id: \"price\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Price\",\n    allowSort: true,\n  },\n  {\n    id: \"marketChange24h\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"24H\",\n    allowSort: true,\n  },\n  {\n    id: \"totalVolume\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Volume\",\n    allowSort: true,\n  },\n  {\n    id: \"marketCap\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Market Cap\",\n    allowSort: true,\n  },\n  {\n    id: \"last7Days\",\n    align: \"center\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Last 7 Days\",\n    allowSort: false,\n  },\n];\n\n// Sorting data functions\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst CryptoCurrency = (props) => {\n  // Reducer function\n  const cryptoReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETDATA\":\n        return {\n          ...state,\n          cryptoData: action.payload.data,\n          loading: false,\n        };\n      case \"UPDATESORTINFO\":\n        return {\n          ...state,\n          order: action.payload.order,\n          orderBy: action.payload.orderBy,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n  const paginationReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETPAGE\":\n        return {\n          ...state,\n          page: action.payload.page,\n        };\n      case \"SETROWSPERPAGE\":\n        return {\n          ...state,\n          rowsPerPage: action.payload.pages,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n\n  const [paginationData, dispatchPaginationData] = useReducer(\n    paginationReducer,\n    {\n      page: 0,\n      rowsPerPage: 10,\n    }\n  );\n  const [cryptoCurrencyData, dispatchCryptoCurrencyData] = useReducer(\n    cryptoReducer,\n    {\n      cryptoData: [],\n      order: \"desc\",\n      orderBy: \"marketCap\",\n      loading: true,\n    }\n  );\n  const { GetCryptoCurrencyData } = useContext(FetchContext);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  console.log(theme);\n\n  useEffect(() => {\n    props.setPath(\"CryptoCurrency\");\n    async function fetchData() {\n      let result = await GetCryptoCurrencyData();\n      console.log(result);\n      let displayData = result.map((result) =>\n        createData(\n          result.market_cap_rank,\n          result.name,\n          result.current_price,\n          result.image,\n          result.price_change_percentage_24h,\n          result.price_change_percentage_7d_in_currency,\n          result.total_volume,\n          result.market_cap,\n          result.sparkline_in_7d.price\n        )\n      );\n      console.log(displayData);\n      dispatchCryptoCurrencyData({\n        type: \"SETDATA\",\n        payload: {\n          data: displayData,\n        },\n      });\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc =\n      cryptoCurrencyData.orderBy === property &&\n      cryptoCurrencyData.order === \"asc\";\n    dispatchCryptoCurrencyData({\n      type: \"UPDATESORTINFO\",\n      payload: {\n        order: isAsc ? \"desc\" : \"asc\",\n        orderBy: property,\n      },\n    });\n  };\n\n  // Pagination Functions\n\n  const handleChangePage = (event, newPage) => {\n    console.log(newPage);\n    dispatchPaginationData({\n      type: \"SETPAGE\",\n      payload: {\n        page: parseInt(newPage),\n      },\n    });\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    console.log(event.target.value);\n    dispatchPaginationData({\n      type: \"SETROWSPERPAGE\",\n      payload: {\n        pages: event.target.value,\n      },\n    });\n  };\n\n  console.log(cryptoCurrencyData, paginationData);\n\n  return (\n    <div className={classes.root}>\n    <Paper className={classes.paper}>\n      <TableContainer style={{ height: \"90%\" }}>\n        <Table stickyHeader className={classes.table}>\n          <EnhancedTableHead\n            classes={classes}\n            order={cryptoCurrencyData.order}\n            orderBy={cryptoCurrencyData.orderBy}\n            onRequestSort={handleRequestSort}\n            headCell={headCells}\n          ></EnhancedTableHead>\n          {cryptoCurrencyData.loading ? (\n            <Loader/>\n          ) : ( \n            <TableBody>\n            {stableSort(\n              cryptoCurrencyData.cryptoData,\n              getComparator(\n                cryptoCurrencyData.order,\n                cryptoCurrencyData.orderBy\n              )\n            )\n              .slice(\n                paginationData.page * paginationData.rowsPerPage,\n                paginationData.page * paginationData.rowsPerPage +\n                  paginationData.rowsPerPage\n              )\n              .map((row, index) => {\n                return (\n                  <TableRow key={row.name}>\n                    <TableCell component=\"th\" id={row.ranking} scope=\"row\">\n                      {row.ranking}\n                    </TableCell>\n                    <TableCell padding=\"none\" align=\"left\">\n                      <div className={classes.logoWrapper}>\n                        <img\n                          src={row.imgSrc}\n                          className={classes.logo}\n                          alt=\"logo\"\n                        ></img>\n                        <span>{row.name}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell align=\"right\">{\"₹\" + row.price}</TableCell>\n                    <TableCell align=\"right\">\n                      {row.marketChange24h > 0 ? (\n                        <Typography className={classes.incresePercentage}>\n                          {row.marketChange24h}%\n                        </Typography>\n                      ) : (\n                        <Typography color=\"error\">\n                          {row.marketChange24h}%\n                        </Typography>\n                      )}\n                    </TableCell>\n                    <TableCell align=\"right\">{\"₹\" + row.totalVolume}</TableCell>\n                    <TableCell align=\"right\">{\"₹\" + row.marketCap}</TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      size=\"small\"\n                      style={{\n                        height: \"60px\",\n                      }}\n                    >\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <LineChart width={100} height={57} data={row.plotData}>\n                          <YAxis hide={true} domain={[\"dataMin\", \"dataMax\"]} />\n                          {row.marketChange7d > 0 ? (\n                            <Line\n                              animationDuration={500}\n                              dot={false}\n                              connectNulls={true}\n                              type=\"monotone\"\n                              dataKey=\"value\"\n                              stroke=\"green\"\n                              strokeWidth={2}\n                            />\n                          ) : (\n                            <Line\n                              animationDuration={500}\n                              dot={false}\n                              connectNulls={true}\n                              type=\"monotone\"\n                              dataKey=\"value\"\n                              stroke={theme.palette.error[theme.palette.type]}\n                              strokeWidth={2}\n                            />\n                          )}\n                        </LineChart>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        )}\n         </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15]}\n        component=\"div\"\n        count={cryptoCurrencyData.cryptoData.length}\n        rowsPerPage={paginationData.rowsPerPage}\n        page={paginationData.page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      >\n      </TablePagination>\n    </Paper>\n    </div>\n  );\n};\n\nexport default CryptoCurrency;\n","import React, { useState } from \"react\";\nimport Home from \"./Components/Home\";\nimport Converter from \"./Components/Converter\";\nimport History from \"./Components/History\";\nimport NavOptions from \"./Components/NavOptions\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CountryKeysContextProvider from \"./Context/CountryKeysContext\";\nimport FetchContextProvider from \"./Context/FetchContext\";\n\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport {\n  CssBaseline,\n  Drawer,\n  Hidden,\n  Paper,\n  useTheme,\n} from \"@material-ui/core\";\nimport CryptoCurrency from \"./Components/CryptoCurrency\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    backgroundColor: theme.palette.primary.type,\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    overflow: \"scroll\",\n    padding: theme.spacing(3),\n    maxWidth: \"100vw\",\n    height: \"92vh\",\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n  const { window } = props;\n  const theme = useTheme();\n  const [DrawerState, setDrawerState] = useState(false);\n  const [currentPath, setCurrentPath] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n    console.log(darkMode);\n  };\n  // Theme functions\n  const themenew = createMuiTheme({\n    palette: {\n      type: darkMode ? 'dark' : 'light',\n    },\n  });\n\n  const DrawerToggle = () => {\n    setDrawerState(!DrawerState);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <ThemeProvider theme={themenew}>\n    <Paper className={classes.root} elevation={0}>\n        <CssBaseline />\n        <Router>\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={DrawerToggle}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                {currentPath}\n              </Typography>\n              <Button onClick={toggleTheme} color=\"inherit\">{darkMode ? <Brightness4Icon/> : <Brightness7Icon/>}</Button>\n            </Toolbar>\n          </AppBar>\n          <nav style={{backgroundColor: '#555'}} className={classes.drawer} aria-label=\"Navigation Options\">\n            <Hidden mdUp>\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={DrawerState}\n                onClose={DrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                <NavOptions/>\n              </Drawer>\n            </Hidden>\n            <Hidden smDown>\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >               \n                <NavOptions/>\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <div className={classes.container}>\n              <FetchContextProvider>\n                <CountryKeysContextProvider>\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Home setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/converter\">\n                      <Converter setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/history\">\n                      <History setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/cryptoCurrency\">\n                      <CryptoCurrency setPath={setCurrentPath} />\n                    </Route>\n                  </Switch>\n                </CountryKeysContextProvider>\n              </FetchContextProvider>\n            </div>\n          </main>\n        </Router>\n      </Paper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}