{"version":3,"sources":["Context/FetchContext.js","Context/CountryKeysContext.js","Components/Home.js","Components/CountryOption.js","Components/Converter.js","Components/Loader.js","Components/History.js","Components/LinkItem.js","Components/NavOptions.js","Components/EnhancedTableHead.js","Components/CryptoCurrency.js","App.js","index.js"],"names":["FetchContext","createContext","FetchContextProvider","props","useState","data","setData","base","a","axios","get","then","result","rates","catch","error","console","log","symbol","start","end","Provider","value","countryTable","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","GetDataWithBase","GetHistoryData","GetCryptoCurrencyData","children","CountryKeysContext","CountryKeysContextProvider","useContext","keys","setKeys","isKeySet","setIsKeySet","Object","sort","Promise","reject","FetchKeys","useStyles","makeStyles","theme","paper","padding","spacing","paddingTop","paddingRight","height","minWidth","color","palette","text","secondary","cover","overflow","root","flexGrow","toolTip","opacity","backgroundColor","background","default","border","divider","Home","setBase","plotData","setPlotData","useTheme","compare","b","getPlotData","plot","forEach","index","key","push","name","rank","useEffect","setPath","getKeys","dataArray","entries","maxValue","minValue","minKey","fetchData","CustomToolTip","active","payload","label","className","classes","Grid","container","item","xs","Typography","variant","align","sm","Paper","ResponsiveContainer","width","LineChart","margin","left","right","top","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","YAxis","Tooltip","content","Legend","Line","type","success","strokeWidth","animationDuration","style","marginBottom","marginTop","map","element","md","cursor","Button","textTransform","component","Link","to","noWrap","formControl","marginLeft","CountryOption","countryNames","onChange","optionNo","FormControl","InputLabel","id","Select","labelId","e","country","MenuItem","options","tabs","display","alignItems","seperator","fontSize","paddingLeft","inputFeildArea","justifyContent","Converter","getDate","y","date","Date","dd","String","padStart","mm","getMonth","getFullYear","useReducer","state","action","countries","changedFirstCountry","firstCountry","secondCountry","firstValue","secondValue","firstVal","secondVal","conversionRate","rate","Error","endDate","converterData","dispatchConverterData","length","startDate","newPlotData","convRate","newValue","direction","target","alert","TextField","InputLabelProps","shrink","elevation","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","domain","dataMin","Math","floor","toFixed","dataMax","ceil","iconSize","Area","primary","fillOpacity","fill","Loader","opts","lines","radius","scale","corners","speed","rotate","animation","fadeColor","shadow","zIndex","position","loader","useRef","Spinner","spin","current","ref","dialogBox","m","yyyy","parseInt","History","keysInitialise","useParams","plotCountries","setPlotCountries","dataTime","setDataTime","setStartDate","firstRender","setFirstRender","countryOpen","setCountryOpen","baseOpen","setBaseOpen","dialogBoxInput","setDialogBoxInput","loading","setLoading","fetchingData","setFetchingData","failedToLoadData","setFailedToLoadData","join","filter","setTimeout","handleClickCountryOpenDialogBox","handleDailogBoxInputChange","handleCloseBaseDialogBox","Tabs","event","newDate","textColor","indicatorColor","centered","Tab","justify","marginRight","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","open","onClose","DialogTitle","DialogContent","DialogActions","includes","info","href","countryName","IconButton","aria-label","removeCountry","bottom","syncId","LinkItem","icon","renderLink","React","useMemo","forwardRef","itemProps","ListItem","button","ListItemIcon","ListItemText","toolbar","mixins","NavOptions","wrapper","Divider","List","EnhancedTableHead","order","orderBy","onRequestSort","headCell","TableHead","TableRow","TableCell","disablePadding","sortDirection","allowSort","TableSortLabel","property","visuallyHidden","table","clip","logoWrapper","logo","incresePercentage","createData","ranking","price","imgSrc","marketChange24h","marketChange7d","totalVolume","marketCap","headCells","numeric","descendingComparator","stableSort","array","comparator","stabilizedThis","el","CryptoCurrency","page","rowsPerPage","pages","paginationData","dispatchPaginationData","cryptoData","cryptoCurrencyData","dispatchCryptoCurrencyData","displayData","market_cap_rank","current_price","image","price_change_percentage_24h","price_change_percentage_7d_in_currency","total_volume","market_cap","sparkline_in_7d","TableContainer","Table","stickyHeader","isAsc","TableBody","slice","row","scope","src","alt","toLocaleString","size","hide","dot","connectNulls","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","drawerWidth","drawer","breakpoints","up","flexShrink","appBar","menuButton","drawerPaper","title","maxWidth","App","window","DrawerState","setDrawerState","currentPath","setCurrentPath","darkMode","setDarkMode","themenew","createMuiTheme","DrawerToggle","undefined","document","body","ThemeProvider","basename","CssBaseline","AppBar","Toolbar","edge","Hidden","mdUp","Drawer","anchor","ModalProps","keepMounted","smDown","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38c17694.chunk.js","sourcesContent":["import { useState, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const FetchContext = createContext();\n\nconst FetchContextProvider = (props) => {\n  const countryTable = {\n    AUD: 'Australia',\n    BGN: 'Bulgaria',\n    BRL: 'Brazil',\n    CAD: 'Canada',\n    CHF: 'Switzerland',\n    CNY: 'China',\n    CZK: 'Czech Republic',\n    DKK: 'Denmark',\n    EUR: 'Euro', \n    GBP: 'United Kingdom',\n    HKD: 'Hong Kong',\n    HRK: 'Croatia',\n    HUF: 'Hungaria',\n    IDR: 'Indonesia',\n    ILS: 'Israeli Shekel',\n    INR: 'India',\n    ISK: 'Iceland',\n    JPY: 'Japan',\n    KRW: 'South Korea',\n    MXN: 'Mexico',\n    MYR: 'Malaysia',\n    NOK: 'Norway', \n    NZD: 'New Zealand',\n    PHP: 'Philippines',\n    PLN: 'Poland',\n    RON: 'Romania',\n    RUB: 'Russia',\n    SEK: 'Sweden', \n    SGD: 'Singapore',\n    THB: 'Thailand',\n    TRY: 'Turkey',\n    USD: 'United States',\n    ZAR: 'South Africa',\n  };\n  // const countryTable =[\n  //   { AUD: 'Australia' },\n  //   { BGN: 'Bulgaria' },\n  //   { BRL: 'Brazil' },\n  //   { CAD: 'Canada' },\n  //   { CHF: 'Switzerland' },\n  //   { CNY: 'China' },\n  //   { CZK: 'Czech Republic' },\n  //   { DKK: 'Denmark' },\n  //   { EUR: 'Euro' }, \n  //   { GBP: 'United Kingdom' },\n  //   { HKD: 'Hong Kong' },\n  //   { HRK: 'Croatia' },\n  //   { HUF: 'Hungaria' },\n  //   { IDR: 'Indonesia' },\n  //   { ILS: 'Israeli Shekel' },\n  //   { INR: 'India' },\n  //   { ISK: 'Iceland' },\n  //   { JPY: 'Japan' },\n  //   { KRW: 'South Korea' },\n  //   { MXN: 'Mexico' },\n  //   { MYR: 'Malaysia' },\n  //   { NOK: 'Norway' }, \n  //   { NZD: 'New Zealand' },\n  //   { PHP: 'Philippines' },\n  //   { PLN: 'Poland' },\n  //   { RON: 'Romania' },\n  //   { RUB: 'Russia' },\n  //   { SEK: 'Sweden' }, \n  //   { SGD: 'Singapore' },\n  //   { THB: 'Thailand' },\n  //   { TRY: 'TUrkey' },\n  //   { USD: 'United States' },\n  //   { ZAR: 'South Africa' },\n  // ];\n\n  const [data, setData] = useState();\n  async function GetDataWithBase(base) {\n    let result = await axios\n      .get(`https://api.exchangeratesapi.io/latest?base=${base ? base : \"EUR\"}`)\n      .then((result) => {\n        return result.data.rates;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return result;\n  }\n  async function GetHistoryData(base, symbol, start, end) {\n    let result = await axios\n      .get(\n        `https://api.exchangeratesapi.io/history?start_at=${start}&end_at=${end}&symbols=${symbol}&base=${\n          base ? base : \"EUR\"\n        }`\n      )\n      .then((result) => {\n        // setData(result.data.rates);\n        return result.data.rates;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return result;\n  }\n\n  async function GetCryptoCurrencyData(base) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${base ? base : \"EUR\"}&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=2C24h%2C7d`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return result;\n  }\n\n  return (\n    <FetchContext.Provider\n      value={{\n        data,\n        countryTable,\n        setData,\n        GetDataWithBase,\n        GetHistoryData,\n        GetCryptoCurrencyData,\n      }}\n    >\n      {props.children}\n    </FetchContext.Provider>\n  );\n};\n\nexport default FetchContextProvider;\n","import React from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { useState, useContext, createContext } from \"react\";\n\nexport const CountryKeysContext = createContext();\n\nconst CountryKeysContextProvider = (props) => {\n  const { GetDataWithBase } = useContext(FetchContext);\n  const [keys, setKeys] = useState([]);\n  const [isKeySet, setIsKeySet] = useState(false);\n  async function FetchKeys() {\n    console.log(\"getKeysCalled\");\n    let result = await GetDataWithBase();\n    if (typeof result === \"object\") {\n      result = { ...result, EUR: 1 };\n      result = Object.keys(result);\n      result.sort();\n      setKeys(result);\n      setIsKeySet(true);\n      return result;\n    } else {\n      console.log(\"rejected\");\n      return Promise.reject();\n    }\n  }\n  return (\n    <CountryKeysContext.Provider value={{ keys, isKeySet, FetchKeys }}>\n      {props.children}\n    </CountryKeysContext.Provider>\n  );\n};\n\nexport default CountryKeysContextProvider;\n","import { useEffect, useContext, useState } from \"react\";\nimport { Paper, Grid, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport {\n  LineChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Line,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    height: \"100%\",\n    minWidth: 500,\n    color: theme.palette.text.secondary,\n  },\n  cover: {\n    height: \"70vh\",\n    overflow: \"scroll\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.default,\n    border: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nconst Home = (props) => {\n  const { countryTable, setData, GetDataWithBase } = useContext(FetchContext);\n  const { keys, isKeySet, FetchKeys } = useContext(CountryKeysContext);\n  const [base , setBase] = useState();\n  const [plotData, setPlotData] = useState([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"Home\");\n    if (!isKeySet) {\n      async function getKeys() {\n        // eslint-disable-next-line no-unused-vars\n        let result = await FetchKeys();\n      }\n      getKeys();\n    }\n    const fetchData = async () => {\n      let result = await GetDataWithBase(\"INR\");\n      if (typeof result === \"object\") {\n        let dataArray = Object.entries(result);\n        let maxValue = dataArray[0][1];\n        let minValue = dataArray[0][1];\n        let minKey = dataArray[0][0];\n        dataArray.forEach(([key, value]) => {\n          if (value > maxValue) {\n            maxValue = value;\n          } else if (minValue > value) {\n            minValue = value;\n            minKey = key;\n          }\n        });\n        result = await GetDataWithBase(minKey);\n        dataArray = Object.entries(result);\n        setBase(minKey);\n        setPlotData(getPlotData(dataArray));\n        setData(result);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function compare(a, b) {\n    return (a[\"value\"] - b[\"value\"]) * -1;\n  }\n\n  function getPlotData(data) {\n    let plot = [];\n    data.forEach(([key, value], index) => {\n      plot.push({ name: key, value: 1 / value, rank: 1 });\n    });\n    plot = plot.sort(compare);\n    plot.forEach((data, index) => data.rank = index + 1);\n    console.log(plot);\n    return plot;\n  }\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      let rank =  payload ? payload[0].payload.rank : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Rank: ${rank}`}</p>\n          <p>{`Country: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n  console.log(countryTable);\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" align='center'>Ranking</Typography>\n        </Grid>\n        <Grid item xs={1} sm={false}></Grid>\n        <Grid item xs={12} sm={10} className={classes.cover}>\n          <Paper className={classes.paper}>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={plotData} margin={{left: 5, right: 10, top: 10}}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey='rank'\n                  padding={{ left: 15, right: 15 }}\n                  stroke={theme.palette.text.secondary}\n                />\n                <YAxis stroke={theme.palette.text.secondary} />\n                <Tooltip content={<CustomToolTip />} />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success[theme.palette.type]}\n                  strokeWidth={3}\n                  name={`Convsion rate with base country: ${countryTable[base]}`}\n                  animationDuration={1000}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" style={{ marginBottom: '-1rem', marginTop: '0.5rem'}}>\n            Ploted Countries\n          </Typography>\n        </Grid>\n        <Grid item xs={1} sm={false}></Grid>\n        <Grid container spacing={1} style={{ margin: ' 0 1rem',}}>\n          {keys.map((element) => {\n            return (\n              <Grid item xs={6} sm={4} md={3} style={{ cursor: 'default'}} >\n                <Button\n                style={{textTransform: 'none'}}\n                  component={Link}\n                  to={`/history/${element}`}\n                >\n                <Typography variant='body2' noWrap={true}>\n                {element + \": \"}\n                  {countryTable[element]}\n                </Typography>\n                </Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, MenuItem, Select, InputLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    minWidth: 90,\n  },\n}));\nconst CountryOption = (props) => {\n  const { value, countryNames, onChange, optionNo, label } = props;\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      variant=\"outlined\"\n      className={classes.formControl}\n    >\n    { label && <InputLabel id={`${label}-optionNo-label`}>{label}</InputLabel> }\n      <Select\n        labelId={`${label}-optionNo-label`}\n        id={label}\n        label={label}\n        value={value}\n        onChange={(e) => onChange(e)}\n      >\n        {countryNames.map((country) => {\n          return (\n            <MenuItem key={country + optionNo} value={country}>\n              {country}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default CountryOption;\n","import { TextField, Grid, Paper } from \"@material-ui/core\";\nimport { useEffect, useContext, useReducer } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"60vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 2rem 1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  seperator: {\n    fontSize: 24, \n    paddingLeft: 10,\n  },\n  inputFeildArea: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  }\n\n}));\n\nconst Converter = (props) => {\n  // Reducer function\n  const converterDataReducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_COUNTRIES\":\n        return {\n          ...state,\n          countries: action.payload.countries,\n        };\n      case \"UPDATE_FIRSTCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: true,\n          firstCountry: action.payload.key,\n        };\n      case \"UPDATE_SECONDCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: false,\n          secondCountry: action.payload.key,\n        };\n      case \"UPDATE_FIRSTVALUE\":\n        return {\n          ...state,\n          firstValue: action.payload,\n        };\n      case \"UPDATE_SECONDVALUE\":\n        return {\n          ...state,\n          secondValue: action.payload,\n        };\n      case \"UPDATEVALUES\":\n        return {\n          ...state,\n          firstValue: action.payload.firstVal,\n          secondValue: action.payload.secondVal,\n        };\n      case \"UPDATE_CONVERSIONRATE\":\n        return {\n          ...state,\n          conversionRate: action.payload,\n        };\n      case \"SETPLOTDATA&CONVERTIONRATE\":\n        return {\n          ...state,\n          plotData: action.payload.plotData,\n          conversionRate: action.payload.rate,\n        };\n      default:\n        throw new Error();\n    }\n  };\n\n  const getDate = (y) => {\n    let date = new Date();\n    let dd = String(date.getDate()).padStart(2, \"0\");\n    let mm = String(date.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    let yyyy = date.getFullYear() - y;\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n\n  const { setData, GetHistoryData } = useContext(FetchContext);\n  const { keys, isKeySet, FetchKeys } = useContext(CountryKeysContext); \n  const theme = useTheme();\n  const [converterData, dispatchConverterData] = useReducer(\n    converterDataReducer,\n    {\n      // Need to set countries with the first and second countries so to solve the warning\n      // from material ui about selected item not in the options\n      countries: [\"EUR\", \"INR\"],\n      firstCountry: \"EUR\",\n      firstValue: 1,\n      secondCountry: \"INR\",\n      secondValue: 1,\n      conversionRate: 1,\n      endDate: getDate(0),\n      plotData: [],\n      changedFirstCountry: true,  \n    }\n  );\n\n  useEffect(() => {\n    props.setPath(\"Converter\");\n    if (isKeySet && keys.length !== converterData.countries.length) {\n      dispatchConverterData({\n        type: \"SET_COUNTRIES\",\n        payload: {\n          countries: keys,\n        }\n      });\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let result = await FetchKeys();\n        dispatchConverterData({\n          type: \"SET_COUNTRIES\",\n          payload: {\n            countries: result,\n          }\n        });\n      }\n      getKeys();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    const startDate = getDate(1);\n    const fetchData = async () => {\n      let result = await GetHistoryData(\n        converterData.firstCountry,\n        converterData.secondCountry,\n        startDate,\n        converterData.endDate\n      );\n      if (typeof result === \"object\") {\n        let newPlotData = [];\n        result = Object.entries(result);\n        setData(result);\n        result.forEach(([key, value]) => {\n          newPlotData.push({\n            name: key,\n            value: value[converterData.secondCountry],\n          });\n        });\n        newPlotData.sort(compare); // Some data is jummbled that's why this sort\n        let convRate = newPlotData[newPlotData.length - 1].value;\n        dispatchConverterData({\n          type: \"SETPLOTDATA&CONVERTIONRATE\",\n          payload: {\n            plotData: newPlotData,\n            rate: convRate,\n          },\n        });\n        if (converterData.changedFirstCountry) {\n          let newValue = converterData.firstValue * convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: converterData.firstValue,\n              secondVal: newValue,\n            },\n          });\n        } else {\n          let newValue = converterData.secondValue / convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: newValue,\n              secondVal: converterData.secondValue,\n            },\n          });\n        }\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [converterData.secondCountry, converterData.firstCountry]);\n\n  const handleChangeOption1 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.secondCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_FIRSTCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const handleChangeOption2 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.firstCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_SECONDCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const changeInput1 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    } \n    let newValue = converterData.conversionRate * value;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: value,\n        secondVal: newValue,\n      },\n    });\n  };\n  const changeInput2 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    } \n    let newValue = value / converterData.conversionRate;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: newValue,\n        secondVal: value,\n      },\n    });\n  };\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <div className={classes.inputFeildArea}>        \n        <CountryOption\n          value={converterData.firstCountry}\n          onChange={handleChangeOption1}\n          countryNames={converterData.countries}\n          optionNo={1}\n          label={\"Base\"}\n        />\n        <span className={classes.seperator}> : </span>\n        <CountryOption\n          value={converterData.secondCountry}\n          onChange={handleChangeOption2}\n          countryNames={converterData.countries}\n          optionNo={2}\n          label={\"Country\"}\n        />\n      </div>\n      <div className={classes.inputFeildArea}>\n        <TextField\n          style={{marginLeft: 10}} // To aline it with the country options\n          id=\"outlined-number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={converterData.firstValue}\n          onChange={changeInput1}\n        />\n        <span className={classes.seperator}> : </span>\n        <TextField\n          style={{marginLeft: 10}} // To aline it with the country options\n          id=\"outlined-number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={converterData.secondValue}\n          onChange={changeInput2}\n        />\n      </div>\n      <Grid item container style={{marginTop: 5}}>\n        <Grid item xs={false} sm={1}></Grid>\n        <Grid className={classes.cover} item xs={12} sm={10}>\n          <Paper className={classes.paper} elevation={4}>\n            <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n              <AreaChart data={converterData.plotData}>\n                <defs>\n                  <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.9} />\n                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0.1} />\n                  </linearGradient>\n                </defs>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" stroke={theme.palette.text.secondary} />\n                <YAxis\n                  stroke={theme.palette.text.secondary}\n                  type=\"number\"\n                  domain={[\n                    (dataMin) => {\n                      if (dataMin > 1) {\n                        return Math.floor(dataMin);\n                      } else {\n                        return (dataMin - (2 * dataMin / 10)).toFixed(3);\n                      }\n                    },\n                    (dataMax) => {\n                      if (dataMax > 1) {\n                        return Math.ceil(dataMax);\n                      } else {\n                        return (dataMax + (3 * dataMax / 10)).toFixed(3);\n                      }\n                    }\n                  ]}\n                />\n                <Tooltip content={<CustomToolTip />} />\n                <Legend iconSize={0} />\n                <Area\n                  type=\"monotone\"\n                  dataKey=\"value\"\n                  name={`Data From: ${getDate(1)} To: ${converterData.endDate}`}\n                  stroke={theme.palette.text.primary}\n                  fillOpacity={1}\n                  fill=\"url(#colorUv)\"\n                />\n              </AreaChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={false} sm={1}></Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Converter;\n","import { useTheme } from '@material-ui/core';\nimport React, { useEffect, useRef } from 'react';\nimport { Spinner } from 'spin.js';\n\nconst Loader = (props) => {\n    const theme = useTheme();\n    let opts = {\n        lines: 11, // The number of lines to draw\n        length: 0, // The length of each line\n        width: 20, // The line thickness\n        radius: 44, // The radius of the inner circle\n        scale: 0.5, // Scales overall size of the spinner\n        corners: 1, // Corner roundness (0..1)\n        speed: 0.8, // Rounds per second\n        rotate: 0, // The rotation offset\n        animation: 'spinner-line-shrink', // The CSS animation name for the lines\n        direction: 1, // 1: clockwise, -1: counterclockwise\n        color: theme.palette.text.primary, // CSS color or array of colors\n        fadeColor: 'transparent', // CSS color or array of colors\n        top: '50%', // Top position relative to parent\n        left: '50%', // Left position relative to parent\n        shadow: '0 0 1px transparent', // Box-shadow for the lines\n        zIndex: 2000000000, // The z-index (defaults to 2e9)\n        className: 'spinner', // The CSS class to assign to the spinner\n        position: 'absolute', // Element positioning\n      };\n    const loader = useRef(null);\n    useEffect(() => {\n      // eslint-disable-next-line no-unused-vars\n      let spinner = new Spinner(opts).spin(loader.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    return (\n        <div style={{ width: '100%', height: \"100%\"}} ref={loader}>\n        </div>\n    );\n}\n \nexport default Loader;","import { useEffect, useContext, useState } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Grid,\n  Typography,\n  IconButton,\n  Link,\n} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport Loader from \"./Loader\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"50vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 0.5rem 1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: \"hsla(0,0%,100%,0.4)\",\n  },\n  dialogBox: {\n    margin: \"2rem\",\n  },\n}));\n\nconst getDate = (y, m) => {\n  let date = new Date();\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1 - m).padStart(2, \"0\"); // January is 0!\n  let yyyy = date.getFullYear() - y;\n  // Edge cases yet if month is jan -m will not give desired results\n  if (parseInt(mm) <= 0) {\n    console.log(mm);\n    yyyy = String(parseInt(yyyy) - 1);\n    mm = String(12 + parseInt(mm));\n    console.log(mm);\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst History = (props) => {\n  const { keys: keysInitialise, isKeySet, FetchKeys } = useContext(\n    CountryKeysContext\n  );\n  const { id } = useParams();\n  console.log(id);\n  const { GetHistoryData } = useContext(FetchContext);\n  const [plotCountries, setPlotCountries] = useState([]);\n  const [keys, setKeys] = useState([\"EUR\", \"INR\"]);\n  const [dataTime, setDataTime] = useState(\"1M\");\n  const [startDate, setStartDate] = useState(getDate(0, 1));\n  // eslint-disable-next-line no-unused-vars\n  const [endDate, setEndDate] = useState(getDate(0, 0));\n  const [base, setBase] = useState(\"EUR\");\n  const [firstRender, setFirstRender] = useState(true);\n  const [plotData, setPlotData] = useState([]);\n  const [countryOpen, setCountryOpen] = useState(false);\n  const [baseOpen, setBaseOpen] = useState(false);\n  const [dialogBoxInput, setDialogBoxInput] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [fetchingData, setFetchingData] = useState(true);\n  const [failedToLoadData, setFailedToLoadData] = useState(false);\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"History\");\n    if (isKeySet && keysInitialise.length !== keys.length) {\n      setKeys(keysInitialise);\n      setFirstRender(false);\n      setPlotCountries([...plotCountries, id ? id : 'INR']);\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let result = await FetchKeys();\n        setKeys(result);\n      }\n      getKeys();\n      setFirstRender(false);\n      setPlotCountries([...plotCountries, id ? id : 'INR']);\n      console.log(plotCountries);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    if (!firstRender) {\n      console.log(base, plotCountries.join(\",\"), startDate, endDate);\n      const fetchData = async () => {\n        let result = await GetHistoryData(\n          base,\n          plotCountries.join(\",\"),\n          startDate,\n          endDate\n        );\n        if (typeof result === \"object\") {\n          let newPlotData = [];\n          result = Object.entries(result);\n          result.forEach(([key, value]) => {\n            newPlotData.push({ name: key, ...value });\n          });\n          while (newPlotData.length > 500) {\n            newPlotData = newPlotData.filter((data, index) =>\n              index % 2 ? data : null\n            );\n          }\n          newPlotData.sort(compare); // Some data is jummbled that's why this sort\n          console.log(newPlotData);\n          setPlotData(newPlotData);\n          setLoading(false);\n          setFailedToLoadData(false);\n          setFetchingData(false);\n        } else {\n          setTimeout(() => {\n            setFailedToLoadData(true);\n            setFetchingData(false);\n          }, 1000);\n        }\n      };\n      fetchData();\n    }\n    console.log(plotCountries);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [base, plotCountries, startDate]);\n\n  const handleChangeTime = (event, newValue) => {\n    setDataTime(newValue);\n    setFetchingData(true);\n    let newDate;\n    switch (newValue) {\n      case \"1M\":\n        newDate = getDate(0, 1);\n        setStartDate(newDate);\n        break;\n\n      case \"1Y\":\n        newDate = getDate(1, 0);\n        setStartDate(newDate);\n        break;\n\n      case \"5Y\":\n        newDate = getDate(5, 0);\n        setStartDate(newDate);\n        break;\n\n      case \"MAX\":\n        newDate = getDate(12, 0);\n        setStartDate(newDate);\n        break;\n\n      default:\n        console.log(newValue);\n        break;\n    }\n  };\n\n  // Dialog box click functions\n\n  const handleClickCountryOpenDialogBox = () => {\n    setCountryOpen(true);\n  };\n  const handleCloseCountryDialogBox = () => {\n    setCountryOpen(false);\n  };\n  const handleCountryDialogBoxSubmit = () => {\n    if (dialogBoxInput === base || plotCountries.includes(dialogBoxInput)) {\n      alert(\"Country already ploted or it selected as the Base\");\n      setDialogBoxInput(\"\");\n    } else {\n      setPlotCountries([...plotCountries, dialogBoxInput]);\n      setCountryOpen(false);\n      setDialogBoxInput(\"\");\n      setLoading(true);\n    }\n  };\n\n  const handleDailogBoxInputChange = (e) => {\n    setDialogBoxInput(e.target.value);\n  };\n\n  const handleClickBaseOpenDialogBox = () => {\n    setBaseOpen(true);\n  };\n  const handleCloseBaseDialogBox = () => {\n    setBaseOpen(false);\n  };\n  const handleBaseDialogBoxSubmit = (e) => {\n    if (plotCountries.includes(dialogBoxInput)) {\n      alert(\"Base and country cannot be same\");\n      setDialogBoxInput(\"\");\n    } else {\n      setBase(dialogBoxInput);\n      setBaseOpen(false);\n      setFetchingData(true);\n      setDialogBoxInput(\"\");\n    }\n  };\n\n  // Removing a country from the List\n  const removeCountry = (country) => {\n    let countries = [...plotCountries];\n    countries = countries.filter((item) => item !== country);\n    setPlotCountries(countries);\n  };\n\n  // Custom tooltip for the Graph\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item container spacing={0}>\n        <Grid item xs={12} className={classes.options}>\n          <Tabs\n            className={classes.tabs}\n            value={dataTime}\n            onChange={handleChangeTime}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            centered\n          >\n            <Tab label=\"1M\" value=\"1M\" />\n            <Tab label=\"1Y\" value=\"1Y\" />\n            <Tab label=\"5Y\" value=\"5Y\" />\n            <Tab label=\"Max\" value=\"MAX\" />\n          </Tabs>\n        </Grid>\n        <Grid item xs={12} container style={{ flexGrow: 1 }} justify=\"center\">\n          <Button\n            style={{ marginRight: \"0.5rem\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            elevation={2}\n            onClick={handleClickCountryOpenDialogBox}\n          >\n            + Add Country\n          </Button>\n          <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            open={countryOpen}\n            onClose={handleClickCountryOpenDialogBox}\n          >\n            <div className={classes.dialogBox}>\n              <DialogTitle>Choose Country</DialogTitle>\n              <DialogContent>\n                <CountryOption\n                  value={dialogBoxInput}\n                  onChange={handleDailogBoxInputChange}\n                  countryNames={keys}\n                  optionNo={1}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleCloseCountryDialogBox}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleCountryDialogBoxSubmit}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Ok\n                </Button>\n              </DialogActions>\n            </div>\n          </Dialog>\n          <Button\n            style={{ marginLeft: \"0.5rem\" }}\n            variant=\"contained\"\n            color=\"primary\"\n            elevation={2}\n            onClick={handleClickBaseOpenDialogBox}\n          >\n            Change Base\n          </Button>\n          <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            open={baseOpen}\n            onClose={handleCloseBaseDialogBox}\n          >\n            <div className={classes.dialogBox}>\n              <DialogTitle>Choose Base</DialogTitle>\n              <DialogContent>\n                <CountryOption\n                  value={dialogBoxInput}\n                  onChange={handleDailogBoxInputChange}\n                  countryNames={keys}\n                  optionNo={1}\n                />\n              </DialogContent>\n              <DialogActions>\n                <Button\n                  onClick={handleCloseBaseDialogBox}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  onClick={handleBaseDialogBoxSubmit}\n                  variant=\"contained\"\n                  color={\"primary\"}\n                >\n                  Ok\n                </Button>\n              </DialogActions>\n            </div>\n          </Dialog>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          style={{ flexGrow: 1, marginTop: \"0.5rem\" }}\n          direction=\"column\"\n          justify=\"center\"\n        >\n          <Typography variant=\"caption\" align=\"center\" component=\"div\">\n            <span style={{ marginRight: \"0.5rem\" }}>\n              {`Data From: ${startDate} `}\n            </span>\n            <span style={{ marginLeft: \"0.5rem\" }}>{` To: ${endDate}`}</span>\n          </Typography>\n          <Typography variant=\"caption\" align=\"center\" component=\"div\">\n            <span style={{ marginRight: \"0.5rem\" }}>Base Country: {base}</span>\n            <span style={{ marginLeft: \"0.5rem\" }}>\n              PlotedCountries:\n              <span style={{ marginLeft: \"0.25rem\" }}>\n                {plotCountries.map((item, index) => (\n                  <Link style={{color: theme.palette.success.info}} href={`#${item}`}>\n                    {index !== plotCountries.length - 1 ? item + \",\" : item}\n                  </Link>\n                ))}\n              </span>\n            </span>\n          </Typography>\n        </Grid>\n      </Grid>\n      {failedToLoadData && (\n        <Grid\n          item\n          xs={12}\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ marginTop: \"3rem\" }}\n        >\n          <Typography component=\"div\" variant=\"h4\" align=\"center\">\n            No data found\n          </Typography>\n        </Grid>\n      )}\n      {!failedToLoadData ? (\n        fetchingData ? (\n          <Grid item xs={12} style={{ position: \"relative\", height: \"50vh\" }}>\n            <Loader />\n          </Grid>\n        ) : (\n          plotCountries.map((countryName, index) => (\n            <Grid item id={countryName} container style={{ marginTop: 5 }}>\n              <Grid item xs={false} sm={1}></Grid>\n              <Grid className={classes.cover} item xs={12} sm={10}>\n                <Paper\n                  style={{ position: \"relative\" }}\n                  className={classes.paper}\n                  elevation={4}\n                >\n                  <Grid container>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={10}>\n                      <Typography variant=\"h4\" align=\"center\">\n                        {countryName}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={1}>\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => removeCountry(countryName)}\n                      >\n                        <HighlightOffOutlinedIcon color=\"secondary\" />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                  {!loading || plotCountries.length - 1 !== index ? (\n                    <ResponsiveContainer width={\"100%\"} height={\"90%\"}>\n                      <AreaChart\n                        data={plotData}\n                        margin={{\n                          top: 10,\n                          right: 30,\n                          left: 0,\n                          bottom: 10,\n                        }}\n                        syncId=\"Chart\"\n                      >\n                        <defs>\n                          <linearGradient\n                            id=\"colorUv\"\n                            x1=\"0\"\n                            y1=\"0\"\n                            x2=\"0\"\n                            y2=\"1\"\n                          >\n                            <stop\n                              offset=\"5%\"\n                              stopColor=\"#8884d8\"\n                              stopOpacity={0.9}\n                            />\n                            <stop\n                              offset=\"95%\"\n                              stopColor=\"#8884d8\"\n                              stopOpacity={0.1}\n                            />\n                          </linearGradient>\n                        </defs>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis\n                          dataKey=\"name\"\n                          stroke={theme.palette.text.secondary}\n                        />\n                        <YAxis\n                          stroke={theme.palette.text.secondary}\n                          type=\"number\"\n                          domain={[\n                            (dataMin) => {\n                              if (dataMin > 1) {\n                                return Math.floor(dataMin);\n                              } else {\n                                return (dataMin - (2 * dataMin) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                            (dataMax) => {\n                              if (dataMax > 1) {\n                                return Math.ceil(dataMax);\n                              } else {\n                                return (dataMax + (3 * dataMax) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                          ]}\n                        />\n                        <Tooltip content={<CustomToolTip />} />\n                        <Area\n                          type=\"monotone\"\n                          dataKey={countryName}\n                          stroke={theme.palette.text.secondary}\n                          fillOpacity={1}\n                          fill=\"url(#colorUv)\"\n                        />\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"95%\",\n                        height: \"70%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Loader />\n                    </div>\n                  )}\n                </Paper>\n              </Grid>\n              <Grid item xs={false} sm={1}></Grid>\n            </Grid>\n          ))\n        )\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default History;\n","import { ListItem, ListItemText, ListItemIcon } from '@material-ui/core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n\nconst LinkItem = ( props ) => {\n    const {icon, primary, to} = props;\n    \n    const renderLink = React.useMemo(\n        () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n        [to],\n      );\n   \n    return (\n        // <RouterLink to={to}>{primary}</RouterLink>\n        <li>\n        <ListItem button component={renderLink}>\n            {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n        </ListItem>\n        </li>\n    );\n}\n \nexport default LinkItem;\n","import { Divider, List } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinkItem from \"./LinkItem\";\nimport Home from \"@material-ui/icons/Home\";\nimport History from \"@material-ui/icons/History\";\nimport AttachMoneyRoundedIcon from \"@material-ui/icons/AttachMoneyRounded\";\nimport MoneySharpIcon from \"@material-ui/icons/MoneySharp\";\n\nconst useStyles = makeStyles((theme) => ({\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  // wrapper: {\n  //     height: '100%',\n  //     '&::before' : {\n  //         content: '\"\"',\n  //         display: 'block',\n  //         position: \"absolute\",\n  //         left: 0,\n  //         top: 0,\n  //         width: \"100%\",\n  //         height: \"100%\",\n  //         opacity: \"0.6\",\n  //         backgroundImage: 'url(https://images.pexels.com/photos/6120172/pexels-photo-6120172.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500)',\n  //         backgroundRepeat: 'no-repeat',\n  //         backgroundSize: 'cover',\n  //         backgroundPosition: 'center',\n  //     }\n\n  // }\n}));\n\nfunction NavOptions() {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.toolbar}></div>\n        <Divider />\n        <List>\n          <LinkItem to=\"/\" primary=\"Home\" icon={<Home />} />\n          <LinkItem to=\"/history\" primary=\"History\" icon={<History />} />\n          <LinkItem\n            to=\"/converter\"\n            primary=\"Converter\"\n            icon={<AttachMoneyRoundedIcon />}\n          />\n        </List>\n        <Divider />\n        <List>\n          <LinkItem\n            to=\"/cryptoCurrency\"\n            primary=\"CryptoCurrency\"\n            icon={<MoneySharpIcon />}\n          />\n        </List>\n    </div>\n  );\n}\n\nexport default NavOptions;\n","import { TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst EnhancedTableHead = (props) => {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort,\n\t\theadCell,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n\t\t\t\t{headCell.map(headCell => (\n\t\t\t\t\t<TableCell\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          > {headCell.allowSort ? <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TableSortLabel\n            >\n              {headCell.label}\n            </TableSortLabel>\n\t\t\t\t\t\t}            \n          </TableCell>\t\t\n\t\t\t\t))}\n\t\t\t</TableRow>\n    </TableHead>\n  );\n};\n\nexport default EnhancedTableHead;\n","import {\n  makeStyles,\n  Paper,\n  TableContainer,\n  Table,\n  TableBody,\n  TablePagination,\n  TableRow,\n  TableCell,\n  Typography,\n  useTheme\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { Line, LineChart, YAxis } from \"recharts\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport Loader from './Loader';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    height: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  logoWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  logo: {\n    height: \"1.5rem\",\n    margin: \"0 0.5rem 0 0\",\n  },\n  incresePercentage: {\n    color: \"green\",\n  },\n}));\n\n// Formating data function\nfunction createData(\n  ranking,\n  name,\n  price,\n  imgSrc,\n  marketChange24h,\n  marketChange7d,\n  totalVolume,\n  marketCap,\n  plot\n) {\n  let plotData = plot.map((data) => ({ value: data }));\n  plotData = plotData.filter((data, index) => (index % 2 === 0 ? true : false));\n  return {\n    ranking,\n    imgSrc,\n    name,\n    price,\n    marketChange24h,\n    marketChange7d,\n    totalVolume,\n    marketCap,\n    plotData,\n  };\n}\n\n// Table Head\nconst headCells = [\n  {\n    id: \"ranking\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: true,\n    label: \"\",\n    allowSort: true,\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    align: \"left\",\n    disablePadding: true,\n    label: \"Name\",\n    allowSort: true,\n  },\n  {\n    id: \"price\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Price\",\n    allowSort: true,\n  },\n  {\n    id: \"marketChange24h\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"24H\",\n    allowSort: true,\n  },\n  {\n    id: \"totalVolume\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Volume\",\n    allowSort: true,\n  },\n  {\n    id: \"marketCap\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Market Cap\",\n    allowSort: true,\n  },\n  {\n    id: \"last7Days\",\n    align: \"center\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Last 7 Days\",\n    allowSort: false,\n  },\n];\n\n// Sorting data functions\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst CryptoCurrency = (props) => {\n  // Reducer function\n  const cryptoReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETDATA\":\n        return {\n          ...state,\n          cryptoData: action.payload.data,\n          loading: false,\n        };\n      case \"UPDATESORTINFO\":\n        return {\n          ...state,\n          order: action.payload.order,\n          orderBy: action.payload.orderBy,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n  const paginationReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETPAGE\":\n        return {\n          ...state,\n          page: action.payload.page,\n        };\n      case \"SETROWSPERPAGE\":\n        return {\n          ...state,\n          rowsPerPage: action.payload.pages,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n\n  const [paginationData, dispatchPaginationData] = useReducer(\n    paginationReducer,\n    {\n      page: 0,\n      rowsPerPage: 10,\n    }\n  );\n  const [cryptoCurrencyData, dispatchCryptoCurrencyData] = useReducer(\n    cryptoReducer,\n    {\n      cryptoData: [],\n      order: \"desc\",\n      orderBy: \"marketCap\",\n      loading: true,\n    }\n  );\n  const { GetCryptoCurrencyData } = useContext(FetchContext);\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"CryptoCurrency\");\n    async function fetchData() {\n      let result = await GetCryptoCurrencyData();\n      let displayData = result.map((result) =>\n        createData(\n          result.market_cap_rank,\n          result.name,\n          result.current_price,\n          result.image,\n          result.price_change_percentage_24h,\n          result.price_change_percentage_7d_in_currency,\n          result.total_volume,\n          result.market_cap,\n          result.sparkline_in_7d.price\n        )\n      );\n      dispatchCryptoCurrencyData({\n        type: \"SETDATA\",\n        payload: {\n          data: displayData,\n        },\n      });\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc =\n      cryptoCurrencyData.orderBy === property &&\n      cryptoCurrencyData.order === \"asc\";\n    dispatchCryptoCurrencyData({\n      type: \"UPDATESORTINFO\",\n      payload: {\n        order: isAsc ? \"desc\" : \"asc\",\n        orderBy: property,\n      },\n    });\n  };\n\n  // Pagination Functions\n\n  const handleChangePage = (event, newPage) => {\n    dispatchPaginationData({\n      type: \"SETPAGE\",\n      payload: {\n        page: parseInt(newPage),\n      },\n    });\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    dispatchPaginationData({\n      type: \"SETROWSPERPAGE\",\n      payload: {\n        pages: event.target.value,\n      },\n    });\n  };\n\n\n  return (\n    <div className={classes.root}>\n    <Paper style={{position: 'relative'}} className={classes.paper} elevation={4}>\n      <TableContainer style={{ height: \"90%\" }}>\n        <Table stickyHeader className={classes.table}>\n          <EnhancedTableHead\n            classes={classes}\n            order={cryptoCurrencyData.order}\n            orderBy={cryptoCurrencyData.orderBy}\n            onRequestSort={handleRequestSort}\n            headCell={headCells}\n          ></EnhancedTableHead>\n          {cryptoCurrencyData.loading ? (\n              <Loader/> \n          ) : ( \n            <TableBody>\n            {stableSort(\n              cryptoCurrencyData.cryptoData,\n              getComparator(\n                cryptoCurrencyData.order,\n                cryptoCurrencyData.orderBy\n              )\n            )\n              .slice(\n                paginationData.page * paginationData.rowsPerPage,\n                paginationData.page * paginationData.rowsPerPage +\n                  paginationData.rowsPerPage\n              )\n              .map((row, index) => {\n                return (\n                  <TableRow key={row.name}>\n                    <TableCell component=\"th\" id={row.ranking} scope=\"row\">\n                      {row.ranking}\n                    </TableCell>\n                    <TableCell padding=\"none\" align=\"left\">\n                      <div className={classes.logoWrapper}>\n                        <img\n                          src={row.imgSrc}\n                          className={classes.logo}\n                          alt=\"logo\"\n                        ></img>\n                        <span>{row.name}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell align=\"right\">{\"€\" + (typeof(row.price) === 'number' ? row.price.toLocaleString() : row.price)}</TableCell>\n                    <TableCell align=\"right\">\n                      {row.marketChange24h > 0 ? (\n                        <Typography className={classes.incresePercentage}>\n                          {typeof(row.marketChange24h) === 'number' ? row.marketChange24h.toFixed(3) : row.marketChange24h}%\n                        </Typography>\n                      ) : (\n                        <Typography color=\"error\">\n                          {typeof(row.marketChange24h) === 'number' ? row.marketChange24h.toFixed(3) : row.marketChange24h}%\n                        </Typography>\n                      )}\n                    </TableCell>\n                    <TableCell align=\"right\">{\"€\" + (typeof(row.totalVolume) === 'number' ? row.totalVolume.toLocaleString() : row.totalVolume)}</TableCell>\n                    <TableCell align=\"right\">{\"€\" + (typeof(row.marketCap) === 'number' ? row.marketCap.toLocaleString() : row.marketCap)}</TableCell>\n                    <TableCell\n                      padding=\"none\"\n                      size=\"small\"\n                      style={{\n                        height: \"60px\",\n                      }}\n                    >\n                      <div\n                        style={{ display: \"flex\", justifyContent: \"center\" }}\n                      >\n                        <LineChart width={100} height={57} data={row.plotData}>\n                          <YAxis hide={true} domain={[\"dataMin\", \"dataMax\"]} />\n                          {row.marketChange7d > 0 ? (\n                            <Line\n                              animationDuration={500}\n                              dot={false}\n                              connectNulls={true}\n                              type=\"monotone\"\n                              dataKey=\"value\"\n                              stroke=\"green\"\n                              strokeWidth={2}\n                            />\n                          ) : (\n                            <Line\n                              animationDuration={500}\n                              dot={false}\n                              connectNulls={true}\n                              type=\"monotone\"\n                              dataKey=\"value\"\n                              stroke={theme.palette.error[theme.palette.type]}\n                              strokeWidth={2}\n                            />\n                          )}\n                        </LineChart>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        )}\n         </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15]}\n        component=\"div\"\n        count={cryptoCurrencyData.cryptoData.length}\n        rowsPerPage={paginationData.rowsPerPage}\n        page={paginationData.page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      >\n      </TablePagination>\n    </Paper>\n    </div>\n  );\n};\n\nexport default CryptoCurrency;\n","import React, { useState } from \"react\";\nimport Home from \"./Components/Home\";\nimport Converter from \"./Components/Converter\";\nimport History from \"./Components/History\";\nimport NavOptions from \"./Components/NavOptions\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CountryKeysContextProvider from \"./Context/CountryKeysContext\";\nimport FetchContextProvider from \"./Context/FetchContext\";\n\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport {\n  CssBaseline,\n  Drawer,\n  Hidden,\n  useTheme,\n} from \"@material-ui/core\";\nimport CryptoCurrency from \"./Components/CryptoCurrency\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    overflow: \"scroll\",\n    padding: theme.spacing(3),\n    maxWidth: \"100vw\",\n    height: \"90vh\",\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n  const { window } = props;\n  const theme = useTheme();\n  const [DrawerState, setDrawerState] = useState(false);\n  const [currentPath, setCurrentPath] = useState(\"\");\n  const [darkMode, setDarkMode] = useState(false);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  // Theme functions\n  const themenew = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : \"light\",\n    },\n  });\n\n  const DrawerToggle = () => {\n    setDrawerState(!DrawerState);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <ThemeProvider theme={themenew}>\n      <Router basename=\"/Currency-App\">\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={DrawerToggle}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                {currentPath}\n              </Typography>\n              <Button onClick={toggleTheme} color=\"inherit\">\n                {darkMode ? <Brightness4Icon /> : <Brightness7Icon />}\n              </Button>\n            </Toolbar>\n          </AppBar>\n          <nav\n            style={{ backgroundColor: \"#555\" }}\n            className={classes.drawer}\n            aria-label=\"Navigation Options\"\n          >\n            <Hidden mdUp>\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={DrawerState}\n                onClose={DrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                <NavOptions />\n              </Drawer>\n            </Hidden>\n            <Hidden smDown>\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                <NavOptions />\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <div className={classes.container}>\n              <FetchContextProvider>\n                <CountryKeysContextProvider>\n                  <Switch>\n                    <Route exact path=\"/\">\n                      <Home setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/converter\">\n                      <Converter setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/history/:id\">\n                      <History setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/history\">\n                      <History setPath={setCurrentPath} />\n                    </Route>\n                    <Route path=\"/cryptoCurrency\">\n                      <CryptoCurrency setPath={setCurrentPath} />\n                    </Route>\n                  </Switch>\n                </CountryKeysContextProvider>\n              </FetchContextProvider>\n            </div>\n          </main>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}