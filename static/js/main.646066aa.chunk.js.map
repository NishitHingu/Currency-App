{"version":3,"sources":["Context/FetchContext.js","Context/CountryKeysContext.js","Components/Home.js","Components/CountryOption.js","Components/Converter.js","Components/Loader.js","Components/History.js","Components/LinkItem.js","Components/NavOptions.js","Components/EnhancedTableHead.js","Components/CryptoCurrency.js","Components/CryptoCurrencyWithID.js","Context/ThemeContext.js","App.js","index.js"],"names":["FetchContext","createContext","FetchContextProvider","props","countryTable","AUD","BGN","BRL","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HRK","HUF","IDR","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","NZD","PHP","PLN","RON","RUB","SEK","SGD","THB","TRY","USD","ZAR","symbols","Object","keys","join","useState","data","setData","base","a","axios","get","then","result","rates","catch","error","console","log","Promise","reject","symbol","start","end","resolve","id","Provider","value","GetDataWithBase","GetHistoryData","GetCryptoCurrencyData","FetchCryptoData","CryptoCurrencyCountries","CryptoHistoryFetch","children","CountryKeysContext","CountryKeysContextProvider","useContext","setKeys","isKeySet","setIsKeySet","failed","sort","FetchKeys","useStyles","makeStyles","theme","paper","padding","spacing","paddingTop","paddingRight","height","minWidth","color","palette","text","secondary","cover","overflow","root","flexGrow","toolTip","opacity","backgroundColor","background","default","border","divider","countryBtn","textTransform","primary","type","Home","setBase","plotData","setPlotData","useTheme","compare","b","getPlotData","plot","forEach","index","key","push","name","rank","useEffect","setPath","document","querySelector","style","setProperty","getKeys","dataArray","entries","maxValue","minValue","minKey","fetchData","CustomToolTip","active","payload","label","className","classes","Grid","container","item","xs","Typography","variant","marginTop","sm","Paper","align","ResponsiveContainer","width","BarChart","margin","left","right","top","CartesianGrid","strokeDasharray","XAxis","dataKey","stroke","YAxis","hide","Tooltip","content","Legend","Bar","animationDuration","fill","graph","barGraph","minPointSize","marginBottom","map","element","md","cursor","Button","component","Link","to","noWrap","formControl","marginLeft","CountryOption","countryNames","onChange","optionNo","FormControl","InputLabel","Select","labelId","e","country","MenuItem","options","tabs","display","alignItems","seperator","fontSize","paddingLeft","inputFeildArea","justifyContent","Converter","getDate","y","date","Date","dd","String","padStart","mm","getMonth","getFullYear","useReducer","state","action","countries","changedFirstCountry","firstCountry","secondCountry","firstValue","secondValue","firstVal","secondVal","conversionRate","rate","Error","endDate","converterData","dispatchConverterData","length","startDate","newPlotData","convRate","newValue","direction","target","alert","TextField","InputLabelProps","shrink","elevation","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","domain","dataMin","Math","floor","toFixed","dataMax","ceil","iconSize","Area","strokeWidth","fillOpacity","Loader","opts","lines","radius","scale","corners","speed","rotate","animation","fadeColor","shadow","zIndex","position","loader","useRef","Spinner","spin","current","ref","dialogBox","m","yyyy","parseInt","History","keysInitialise","useParams","plotCountries","firstRender","loading","failedToLoadData","fetchingData","newDate","dataTime","plotAndTime","dispatchPlotAndTime","countryOpen","baseOpen","dialogBoxInput","dispatchDialogBox","setTimeout","filter","handleClickCountryOpenDialogBox","handleDailogBoxInputChange","handleCloseBaseDialogBox","Tabs","event","textColor","indicatorColor","centered","Tab","justify","marginRight","onClick","Dialog","disableBackdropClick","disableEscapeKeyDown","open","onClose","DialogTitle","DialogContent","DialogActions","includes","success","info","href","CircularProgress","sideBar","countryName","IconButton","aria-label","removeCountry","bottom","syncId","icon","contrastText","LinkItem","renderLink","React","useMemo","forwardRef","itemProps","ListItem","button","ListItemIcon","ListItemText","title","wrapper","heading","NavOptions","Divider","List","EnhancedTableHead","order","orderBy","onRequestSort","headCell","classesNew","TableHead","TableRow","TableCell","disablePadding","sortDirection","allowSort","TableSortLabel","property","visuallyHidden","table","clip","logoWrapper","textDecoration","logo","incresePercentage","pagination","createData","ranking","price","imgSrc","marketChange24h","marketChange7d","totalVolume","marketCap","headCells","numeric","descendingComparator","stableSort","array","comparator","stabilizedThis","el","CryptoCurrency","page","rowsPerPage","pages","paginationData","dispatchPaginationData","cryptoData","failedToLoad","cryptoCurrencyData","dispatchCryptoCurrencyData","displayData","market_cap_rank","current_price","image","price_change_percentage_24h","price_change_percentage_7d_in_currency","total_volume","market_cap","sparkline_in_7d","TableContainer","Table","stickyHeader","isAsc","TableBody","slice","row","scope","src","alt","toLocaleString","size","Box","LineChart","Line","dot","connectNulls","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","block","widht","increase","main","description","maxHeight","readMore","graphWrapper","countryOption","breakpoints","down","CryptoCurrencyWithID","setLoading","descriptionCut","setDescriptionCut","supportedCountries","setSupportedCountries","selectedPlot","setSelectedPlot","setFailedToLoad","score","communityDataScore","reddit_subscribers","twitter_followers","market_rank","market_high24","market_low24","market_change24","price_change24h","price_change30d","price_change1Y","volume","supply","homePageLink","coinGecko","community","reddit","twitter","market","high24","low24","change24","change24h","change30d","change1Y","createPlotData","convertToLocaleString","toUpperCase","GetCountries","newData","small","en","coingecko_rank","coingecko_score","community_score","community_data","market_data","toLocaleLowerCase","high_24h","low_24h","market_cap_change_percentage_24h","price_change_percentage_30d","price_change_percentage_1y","total_supply","links","homepage","historyFetch","handleSetSelectedPlot","option","flexWrap","toLocaleUpperCase","subtitle","dangerouslySetInnerHTML","__html","ButtonGroup","disableElevation","ThemeContext","ThemeContextProvider","mode","setMode","customTheme","createMuiTheme","light","dark","disabled","hint","overrides","MuiDrawer","toggleTheme","ThemeProvider","CssBaseline","drawerWidth","drawer","up","flexShrink","appBar","menuButton","toolbar","mixins","drawerPaper","boxSizing","maxWidth","borderTopLeftRadius","minHeight","App","window","DrawerState","setDrawerState","currentPath","setCurrentPath","DrawerToggle","undefined","body","basename","AppBar","Toolbar","edge","Hidden","mdUp","Drawer","anchor","ModalProps","keepMounted","smDown","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.646066aa.chunk.js","sourcesContent":["import { useState, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const FetchContext = createContext();\n\nconst FetchContextProvider = (props) => {\n  const countryTable = {\n    AUD: \"Australia\",\n    BGN: \"Bulgaria\",\n    BRL: \"Brazil\",\n    CAD: \"Canada\",\n    CHF: \"Switzerland\",\n    CNY: \"China\",\n    CZK: \"Czech Republic\",\n    DKK: \"Denmark\",\n    EUR: \"Euro\",\n    GBP: \"United Kingdom\",\n    HKD: \"Hong Kong\",\n    HRK: \"Croatia\",\n    HUF: \"Hungaria\",\n    IDR: \"Indonesia\",\n    ILS: \"Israeli Shekel\",\n    INR: \"India\",\n    ISK: \"Iceland\",\n    JPY: \"Japan\",\n    KRW: \"South Korea\",\n    MXN: \"Mexico\",\n    MYR: \"Malaysia\",\n    NOK: \"Norway\",\n    NZD: \"New Zealand\",\n    PHP: \"Philippines\",\n    PLN: \"Poland\",\n    RON: \"Romania\",\n    RUB: \"Russia\",\n    SEK: \"Sweden\",\n    SGD: \"Singapore\",\n    THB: \"Thailand\",\n    TRY: \"Turkey\",\n    USD: \"United States\",\n    ZAR: \"South Africa\",\n  };\n  let symbols = Object.keys(countryTable);\n  symbols = symbols.join(\",\");\n  const [data, setData] = useState();\n\n  async function GetDataWithBase(base) {\n    let result = await axios\n      .get(\n        `https://api.exchangerate.host/latest?base=${\n          base ? base : \"EUR\"\n        }&symbols=${symbols}`\n      )\n      .then((result) => {\n        return result.data.rates;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n  async function GetHistoryData(base, symbol, start, end) {\n    let result = await axios\n      .get(\n        `https://api.exchangerate.host/timeseries?start_date=${start}&end_date=${end}&base=${base ? base : \"EUR\"}&symbols=${symbol}`\n      )\n      .then((result) => {\n        console.log(result);\n        return Promise.resolve(result.data.rates);\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function GetCryptoCurrencyData(base) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${\n          base ? base : \"EUR\"\n        }&order=market_cap_desc&per_page=100&page=1&sparkline=true&price_change_percentage=2C24h%2C7d`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function FetchCryptoData(id) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/${\n          id ? id : \"bitcoin\"\n        }?localization=false&tickers=false&market_data=true&community_data=true&developer_data=false&sparkline=false`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function CryptoCurrencyCountries() {\n    let result = await axios\n      .get(\"https://api.coingecko.com/api/v3/simple/supported_vs_currencies\")\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  async function CryptoHistoryFetch(base, id) {\n    let result = await axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/${\n          id ? id : \"bitcoin\"\n        }/market_chart?vs_currency=${\n          base ? base : \"eur\"\n        }&days=356&interval=daily`\n      )\n      .then((result) => {\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n        return Promise.reject(error);\n      });\n    return result;\n  }\n\n  return (\n    <FetchContext.Provider\n      value={{\n        data,\n        countryTable,\n        setData,\n        GetDataWithBase,\n        GetHistoryData,\n        GetCryptoCurrencyData,\n        FetchCryptoData,\n        CryptoCurrencyCountries,\n        CryptoHistoryFetch,\n      }}\n    >\n      {props.children}\n    </FetchContext.Provider>\n  );\n};\n\nexport default FetchContextProvider;\n","import React from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { useState, useContext, createContext } from \"react\";\n\nexport const CountryKeysContext = createContext();\n\nconst CountryKeysContextProvider = (props) => {\n  const { GetDataWithBase } = useContext(FetchContext);\n  const [keys, setKeys] = useState([]);\n  const [isKeySet, setIsKeySet] = useState(false);\n  async function FetchKeys() {\n    let failed = false;\n    let result = await GetDataWithBase().catch(error => {\n      failed = true;\n    });\n    if (typeof result === \"object\" && !failed) {\n      result = { ...result, EUR: 1 };\n      result = Object.keys(result);\n      result.sort();\n      setKeys(result);\n      setIsKeySet(true);\n      return result;\n    } else {\n      return Promise.reject(result);\n    }\n  }\n  return (\n    <CountryKeysContext.Provider value={{ keys, isKeySet, FetchKeys }}>\n      {props.children}\n    </CountryKeysContext.Provider>\n  );\n};\n\nexport default CountryKeysContextProvider;\n","import { useEffect, useContext, useState } from \"react\";\nimport { Paper, Grid, Typography, Button } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport {\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n} from \"recharts\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    height: \"100%\",\n    minWidth: 500,\n    color: theme.palette.text.secondary,\n  },\n  cover: {\n    height: \"70vh\",\n    overflow: \"scroll\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.default,\n    border: `1px solid ${theme.palette.divider}`,\n  },\n  countryBtn: {\n    textTransform: \"none\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary[theme.palette.type],\n    },\n  },\n}));\n\nconst Home = (props) => {\n  const { countryTable, setData, GetDataWithBase } = useContext(FetchContext);\n  const { keys, isKeySet, FetchKeys } = useContext(CountryKeysContext);\n  const [base, setBase] = useState();\n  const [plotData, setPlotData] = useState([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"Home\");\n\n    // Decrease the scrollbar height soo the whit dot in dark mode is not visible\n    const r = document.querySelector(\":root\");\n    r.style.setProperty(\"--scrollHeight\", \"0\");\n\n    if (!isKeySet) {\n      async function getKeys() {\n        // eslint-disable-next-line no-unused-vars\n        let result = await FetchKeys();\n      }\n      getKeys();\n    }\n    const fetchData = async () => {\n      let result = await GetDataWithBase(\"INR\");\n      if (typeof result === \"object\") {\n        let dataArray = Object.entries(result);\n        let maxValue = dataArray[0][1];\n        let minValue = dataArray[0][1];\n        let minKey = dataArray[0][0];\n        dataArray.forEach(([key, value]) => {\n          if (value > maxValue) {\n            maxValue = value;\n          } else if (minValue > value) {\n            minValue = value;\n            minKey = key;\n          }\n        });\n        result = await GetDataWithBase(minKey);\n        dataArray = Object.entries(result);\n        setBase(minKey);\n        setPlotData(getPlotData(dataArray));\n        setData(result);\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function compare(a, b) {\n    return (a[\"value\"] - b[\"value\"]) * -1;\n  }\n\n  function getPlotData(data) {\n    let plot = [];\n    data.forEach(([key, value], index) => {\n      plot.push({ name: key, value: 1 / value, rank: 1 });\n    });\n    plot = plot.sort(compare);\n    plot.forEach((data, index) => (data.rank = index + 1));\n    return plot;\n  }\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      let rank = payload ? payload[0].payload.rank : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Rank: ${rank}`}</p>\n          <p>{`Country: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h3\">Forex</Typography>\n          <Typography variant=\"body1\" style={{ marginTop: \"1rem\" }}>\n            The foreign exchange market is a global decentralized or\n            over-the-counter market for the trading of currencies. This market\n            determines foreign exchange rates for every currency. It includes\n            all aspects of buying, selling and exchanging currencies at current\n            or determined prices. In terms of trading volume, it is by far the\n            largest market in the world, followed by the credit market. The main\n            participants in this market are the larger international banks.\n            Financial centers around the world function as anchors of trading\n            between a wide range of multiple types of buyers and sellers around\n            the clock, with the exception of weekends. Since currencies are\n            always traded in pairs, the foreign exchange market does not set a\n            currency's absolute value but rather determines its relative value\n            by setting the market price of one currency if paid for with\n            another. Ex: US$1 is worth X CAD, or CHF, or JPY, etc.\n          </Typography>\n        </Grid>\n        <Grid item xs={1} sm={false}></Grid>\n        <Grid item xs={12} sm={10} className={classes.cover}>\n          <Paper className={classes.paper}>\n            <Typography variant=\"h5\" color=\"textPrimary\" align=\"center\">\n              Rankings\n            </Typography>\n            <ResponsiveContainer width=\"100%\" height=\"90%\">\n              <BarChart\n                data={plotData}\n                margin={{ left: 5, right: 10, top: 10 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"rank\"\n                  padding={{ left: 15, right: 15 }}\n                  stroke={theme.palette.text.secondary}\n                />\n                <YAxis hide stroke={theme.palette.text.secondary} />\n                <Tooltip content={<CustomToolTip />} />\n                <Legend />\n                <Bar\n                  dataKey=\"value\"\n                  name={`Conversion rate with base country as ${countryTable[base]}`}\n                  animationDuration={1000}\n                  fill={theme.palette.graph.barGraph}\n                  minPointSize={2}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </Paper>\n        </Grid>\n        <Grid item xs={1} sm={false}></Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"h5\"\n            style={{ marginBottom: \"0\", marginTop: \"1rem\" }}\n          >\n            Ranked Countries\n          </Typography>\n        </Grid>\n        <Grid container spacing={1} style={{ margin: \" 0 1rem\" }}>\n          {keys.map((element) => {\n            return (\n              <Grid\n                key={element}\n                item\n                xs={6}\n                sm={4}\n                md={3}\n                style={{ cursor: \"default\" }}\n              >\n                <Button\n                  style={{ textTransform: \"none\" }}\n                  component={Link}\n                  to={`/history/${element}`}\n                  className={classes.countryBtn}\n                >\n                  <Typography variant=\"body2\" noWrap={true}>\n                    {element + \": \"}\n                    {countryTable[element]}\n                  </Typography>\n                </Button>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, MenuItem, Select, InputLabel } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(1),\n    minWidth: 90,\n  },\n}));\nconst CountryOption = (props) => {\n  const { value, countryNames, onChange, optionNo, label } = props;\n  const classes = useStyles();\n\n  return (\n    <FormControl\n      variant=\"outlined\"\n      className={classes.formControl}\n    >\n    { label && <InputLabel id={`${label}-optionNo-label`}>{label}</InputLabel> }\n      <Select\n        labelId={`${label}-optionNo-label`}\n        id={label}\n        label={label}\n        value={value}\n        onChange={(e) => onChange(e)}\n      >\n        {countryNames.map((country) => {\n          return (\n            <MenuItem key={country + optionNo} value={country}>\n              {country}\n            </MenuItem>\n          );\n        })}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default CountryOption;\n","import { TextField, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { useEffect, useContext, useReducer } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"50vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  seperator: {\n    fontSize: 24,\n    paddingLeft: 10,\n  },\n  inputFeildArea: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n}));\n\nconst Converter = (props) => {\n  // Reducer function\n  const converterDataReducer = (state, action) => {\n    switch (action.type) {\n      case \"SET_COUNTRIES\":\n        return {\n          ...state,\n          countries: action.payload.countries,\n        };\n      case \"UPDATE_FIRSTCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: true,\n          firstCountry: action.payload.key,\n        };\n      case \"UPDATE_SECONDCOUNTRY\":\n        return {\n          ...state,\n          changedFirstCountry: false,\n          secondCountry: action.payload.key,\n        };\n      case \"UPDATE_FIRSTVALUE\":\n        return {\n          ...state,\n          firstValue: action.payload,\n        };\n      case \"UPDATE_SECONDVALUE\":\n        return {\n          ...state,\n          secondValue: action.payload,\n        };\n      case \"UPDATEVALUES\":\n        return {\n          ...state,\n          firstValue: action.payload.firstVal,\n          secondValue: action.payload.secondVal,\n        };\n      case \"UPDATE_CONVERSIONRATE\":\n        return {\n          ...state,\n          conversionRate: action.payload,\n        };\n      case \"SETPLOTDATA&CONVERTIONRATE\":\n        return {\n          ...state,\n          plotData: action.payload.plotData,\n          conversionRate: action.payload.rate,\n        };\n      default:\n        throw new Error();\n    }\n  };\n\n  const getDate = (y) => {\n    let date = new Date();\n    let dd = String(date.getDate()).padStart(2, \"0\");\n    let mm = String(date.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    let yyyy = date.getFullYear() - y;\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n\n  const { countryTable, setData, GetHistoryData } = useContext(FetchContext);\n  const { keys, isKeySet, FetchKeys } = useContext(CountryKeysContext);\n  const theme = useTheme();\n  const [converterData, dispatchConverterData] = useReducer(\n    converterDataReducer,\n    {\n      countries: [\"EUR\", \"INR\"],\n      firstCountry: \"EUR\",\n      firstValue: 1,\n      secondCountry: \"INR\",\n      secondValue: 1,\n      conversionRate: 1,\n      endDate: getDate(0),\n      plotData: [],\n      changedFirstCountry: true,\n    }\n  );\n\n  useEffect(() => {\n    props.setPath(\"Converter\");\n    // Decreasing the scroll size back to zero to hide the white dot in dark mode\n    const r = document.querySelector(\":root\");\n    r.style.setProperty(\"--scrollHeight\", \"0\");\n    if (isKeySet && keys.length !== converterData.countries.length) {\n      dispatchConverterData({\n        type: \"SET_COUNTRIES\",\n        payload: {\n          countries: keys,\n        },\n      });\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let result = await FetchKeys()\n          dispatchConverterData({\n            type: \"SET_COUNTRIES\",\n            payload: {\n              countries: result,\n            },\n          });\n      }\n      getKeys();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    const startDate = getDate(1);\n    const fetchData = async () => {\n      let result = await GetHistoryData(\n        converterData.firstCountry,\n        converterData.secondCountry,\n        startDate,\n        converterData.endDate\n      );\n      if (typeof result === \"object\") {\n        let newPlotData = [];\n        result = Object.entries(result);\n        setData(result);\n        result.forEach(([key, value]) => {\n          newPlotData.push({\n            name: key,\n            value: value[converterData.secondCountry],\n          });\n        });\n        newPlotData.sort(compare); // Some data is jummbled that's why this sort\n        let convRate = newPlotData[newPlotData.length - 1].value;\n        dispatchConverterData({\n          type: \"SETPLOTDATA&CONVERTIONRATE\",\n          payload: {\n            plotData: newPlotData,\n            rate: convRate,\n          },\n        });\n        if (converterData.changedFirstCountry) {\n          let newValue = converterData.firstValue * convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: converterData.firstValue,\n              secondVal: newValue,\n            },\n          });\n        } else {\n          let newValue = converterData.secondValue / convRate;\n          dispatchConverterData({\n            type: \"UPDATEVALUES\",\n            payload: {\n              firstVal: newValue,\n              secondVal: converterData.secondValue,\n            },\n          });\n        }\n      }\n    };\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [converterData.secondCountry, converterData.firstCountry]);\n\n  const handleChangeOption1 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.secondCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_FIRSTCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const handleChangeOption2 = (e) => {\n    let key = e.target.value;\n    if (key === converterData.firstCountry) {\n      alert(\"Base and country cannot be same\");\n    } else {\n      dispatchConverterData({\n        type: \"UPDATE_SECONDCOUNTRY\",\n        payload: {\n          key,\n        },\n      });\n    }\n  };\n  const changeInput1 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    }\n    let newValue = converterData.conversionRate * value;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: value,\n        secondVal: newValue,\n      },\n    });\n  };\n  const changeInput2 = (e) => {\n    let value = e.target.value;\n    if (value < 0) {\n      alert(\"Negative value not allowed\");\n      return;\n    }\n    let newValue = value / converterData.conversionRate;\n    dispatchConverterData({\n      type: \"UPDATEVALUES\",\n      payload: {\n        firstVal: newValue,\n        secondVal: value,\n      },\n    });\n  };\n\n  const CustomToolTip = ({ active, payload }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n        <Grid container direction=\"column\" spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">Live Forex</Typography>\n        </Grid>\n          <div className={classes.inputFeildArea}>\n            <CountryOption\n              value={converterData.firstCountry}\n              onChange={handleChangeOption1}\n              countryNames={converterData.countries}\n              optionNo={1}\n              label={\"Base\"}\n            />\n            <span className={classes.seperator}> : </span>\n            <CountryOption\n              value={converterData.secondCountry}\n              onChange={handleChangeOption2}\n              countryNames={converterData.countries}\n              optionNo={2}\n              label={\"Country\"}\n            />\n          </div>\n          <div className={classes.inputFeildArea}>\n            <TextField\n              style={{ marginLeft: 10 }} // To aline it with the country options\n              id=\"outlined-number\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              value={converterData.firstValue}\n              onChange={changeInput1}\n            />\n            <span className={classes.seperator}> : </span>\n            <TextField\n              style={{ marginLeft: 10 }} // To aline it with the country options\n              id=\"outlined-number\"\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              variant=\"outlined\"\n              value={converterData.secondValue}\n              onChange={changeInput2}\n            />\n          </div>\n          <Grid item container style={{ marginTop: 5 }}>\n            <Grid className={classes.cover} item xs={12}>\n              <Paper className={classes.paper} elevation={4}>\n                <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n                  <AreaChart data={converterData.plotData} margin={{right: 0}}>\n                  <defs>\n                      <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop\n                          offset=\"2%\"\n                          stopColor={theme.palette.graph.primary}\n                          stopOpacity={0.9}\n                        />\n                        <stop\n                          offset=\"97%\"\n                          stopColor={theme.palette.graph.secondary}\n                          stopOpacity={0.1}\n                        />\n                      </linearGradient>\n                    </defs>\n                    <XAxis\n                      dataKey=\"name\"\n                      stroke={theme.palette.text.secondary}\n                    />\n                    <YAxis\n                      hide\n                      stroke={theme.palette.text.secondary}\n                      type=\"number\"\n                      domain={[\n                        (dataMin) => {\n                          if (dataMin > 1) {\n                            return Math.floor(dataMin);\n                          } else {\n                            return (dataMin - (2 * dataMin) / 10).toFixed(3);\n                          }\n                        },\n                        (dataMax) => {\n                          if (dataMax > 1) {\n                            return Math.ceil(dataMax);\n                          } else {\n                            return (dataMax + (3 * dataMax) / 10).toFixed(3);\n                          }\n                        },\n                      ]}\n                    />\n                    <Tooltip content={<CustomToolTip />} />\n                    <Legend iconSize={0} />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"value\"\n                      name={`Historical Forex Data: ${getDate(1)} - ${\n                        converterData.endDate\n                      } with base as ${countryTable[converterData.firstCountry]}`}\n                      stroke={theme.palette.text.primary}\n                      strokeWidth={3}\n                      fillOpacity={1}\n                      fill=\"url(#colorUv)\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </Paper>\n            </Grid>\n          </Grid>\n        </Grid>\n  );\n};\n\nexport default Converter;\n","import { useTheme } from '@material-ui/core';\nimport React, { useEffect, useRef } from 'react';\nimport { Spinner } from 'spin.js';\n\nconst Loader = (props) => {\n    const theme = useTheme();\n    let opts = {\n        lines: 11, // The number of lines to draw\n        length: 0, // The length of each line\n        width: 20, // The line thickness\n        radius: 44, // The radius of the inner circle\n        scale: 0.5, // Scales overall size of the spinner\n        corners: 1, // Corner roundness (0..1)\n        speed: 0.8, // Rounds per second\n        rotate: 0, // The rotation offset\n        animation: 'spinner-line-shrink', // The CSS animation name for the lines\n        direction: 1, // 1: clockwise, -1: counterclockwise\n        color: theme.palette.text.primary, // CSS color or array of colors\n        fadeColor: 'transparent', // CSS color or array of colors\n        top: '50%', // Top position relative to parent\n        left: '50%', // Left position relative to parent\n        shadow: '0 0 1px transparent', // Box-shadow for the lines\n        zIndex: 2000000000, // The z-index (defaults to 2e9)\n        className: 'spinner', // The CSS class to assign to the spinner\n        position: 'absolute', // Element positioning\n      };\n    const loader = useRef(null);\n    useEffect(() => {\n      // eslint-disable-next-line no-unused-vars\n      let spinner = new Spinner(opts).spin(loader.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[]);\n    return (\n        <div style={{ width: '100%', height: \"100%\"}} ref={loader}>\n        </div>\n    );\n}\n \nexport default Loader;","import { useEffect, useContext, useReducer } from \"react\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport { CountryKeysContext } from \"../Context/CountryKeysContext\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Grid,\n  Typography,\n  IconButton,\n  Link,\n} from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from \"@material-ui/core/Paper\";\nimport CountryOption from \"./CountryOption\";\nimport {\n  AreaChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Area,\n} from \"recharts\";\nimport HighlightOffOutlinedIcon from \"@material-ui/icons/HighlightOffOutlined\";\nimport Loader from \"./Loader\";\nimport { useParams } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  options: {\n    marginBottom: 15,\n  },\n  cover: {\n    height: \"50vh\",\n    padding: 10,\n    overflow: \"scroll\",\n  },\n  paper: {\n    padding: \"1rem 0\",\n    minWidth: 500,\n    height: \"100%\",\n  },\n  tabs: {\n    flexGrow: 1,\n  },\n  CountryOption: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n    marginBottom: 15,\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.default,\n  },\n  dialogBox: {\n    margin: \"2rem\",\n  },\n}));\n\nconst getDate = (y, m) => {\n  let date = new Date();\n  let dd = String(date.getDate()).padStart(2, \"0\");\n  let mm = String(date.getMonth() + 1 - m).padStart(2, \"0\"); // January is 0!\n  let yyyy = date.getFullYear() - y;\n  // Edge cases so if month is jan -m will gives desired results\n  if (parseInt(mm) <= 0) {\n    yyyy = String(parseInt(yyyy) - 1);\n    mm = String(12 + parseInt(mm));\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nconst History = (props) => {\n  const { keys: keysInitialise, isKeySet, FetchKeys } = useContext(\n    CountryKeysContext\n  );\n  const { id } = useParams();\n\n  const timeAndPlotReducer = (state, action) => {\n    switch (action.type) {\n      case \"INTIALSETPLOTCOUNTRIES\":\n        return {\n          ...state,\n          keys: action.payload.keys,\n          plotCountries: action.payload.countries,\n          firstRender: false,\n        };\n      case \"SETPLOTDATA\":\n        return {\n          ...state,\n          plotData: action.payload.data,\n          loading: false,\n          failedToLoadData: false,\n          fetchingData: false,\n        };\n      case \"SETSTARTDATE\":\n        return {\n          ...state,\n          startDate: action.payload.newDate,\n          dataTime: action.payload.newValue,\n          fetchingData: true,\n        };\n      case \"SETPLOTCOUNTRIES\":\n        return {\n          ...state,\n          plotCountries: action.payload.data,\n          loading: true,\n        };\n      case \"SETBASE\":\n        return {\n          ...state,\n          base: action.payload.base,\n          fetchingData: true,\n        };\n      case \"REMOVEDCOUNTRY\":\n        return {\n          ...state,\n          plotCountries: action.payload.countries,\n        };\n      case \"SET2\":\n        return {\n          ...state,\n        };\n      case \"FAILEDTOLOAD\":\n        return {\n          ...state,\n          failedToLoadData: true,\n          fetchingData: false,\n        };\n      default:\n        return { ...state };\n    }\n  };\n\n  const dialogBoxReducer = (state, action) => {\n    switch (action.type) {\n      case \"COUNTRYOPEN\":\n        return {\n          ...state,\n          countryOpen: true,\n        };\n      case \"BASEOPEN\":\n        return {\n          ...state,\n          baseOpen: true,\n        };\n      case \"COUNTRYCLOSE\":\n        return {\n          ...state,\n          countryOpen: false,\n          dialogBoxInput: \"\",\n        };\n      case \"BASECLOSE\":\n        return {\n          ...state,\n          baseOpen: false,\n          dialogBoxInput: \"\",\n        };\n      case \"EMPTYBOX\":\n        return {\n          ...state,\n          dialogBoxInput: \"\",\n        };\n      case \"SETDIALOGBOX\":\n        return {\n          ...state,\n          dialogBoxInput: action.payload,\n        };\n      default:\n        break;\n    }\n  };\n\n  const { GetHistoryData } = useContext(FetchContext);\n  const [plotAndTime, dispatchPlotAndTime] = useReducer(timeAndPlotReducer, {\n    plotCountries: [],\n    plotData: [],\n    base: \"EUR\",\n    keys: [\"EUR\", \"INR\"],\n    dataTime: \"1M\",\n    startDate: getDate(0, 1),\n    endDate: getDate(0, 0),\n    firstRender: true,\n    fetchingData: true,\n    loading: true,\n  });\n  // eslint-disable-next-line no-unused-vars\n  const [dialogBox, dispatchDialogBox] = useReducer(dialogBoxReducer, {\n    countryOpen: false,\n    baseOpen: false,\n    dialogBoxInput: \"\",\n  });\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"History\");\n\n    // Decrease the scrollbar height soo the whit dot in dark mode is not visible\n    const r = document.querySelector(\":root\");\n    r.style.setProperty(\"--scrollHeight\", \"0\");\n\n    if (isKeySet && keysInitialise.length !== plotAndTime.keys.length) {\n      dispatchPlotAndTime({\n        type: \"INTIALSETPLOTCOUNTRIES\",\n        payload: {\n          keys: keysInitialise,\n          countries: [id ? id : \"INR\"],\n        },\n      });\n    } else if (!isKeySet) {\n      async function getKeys() {\n        let failed = false;\n        let result = await FetchKeys().catch((error) => {\n          setTimeout(() => {\n            dispatchPlotAndTime({\n              type: \"FAILEDTOLOAD\",\n            });\n          }, 1000);\n          failed = true;\n        });\n        if (!failed) {\n          dispatchPlotAndTime({\n            type: \"INTIALSETPLOTCOUNTRIES\",\n            payload: {\n              keys: result,\n              countries: [id ? id : \"INR\"],\n            },\n          });\n        }\n      }\n      getKeys();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const compare = (a, b) => {\n    return a[\"name\"] > b[\"name\"] ? 1 : -1;\n  };\n\n  useEffect(() => {\n    if (!plotAndTime.firstRender) {\n      const fetchData = async () => {\n        let failed = false;\n        let result = await GetHistoryData(\n          plotAndTime.base,\n          plotAndTime.plotCountries.join(\",\"),\n          plotAndTime.startDate,\n          plotAndTime.endDate\n        ).catch((error) => {\n          setTimeout(() => {\n            dispatchPlotAndTime({\n              type: \"FAILEDTOLOAD\",\n            });\n          }, 1000);\n          failed = true;\n        });\n        if (typeof result === \"object\" && !failed) {\n          let newPlotData = [];\n          result = Object.entries(result);\n          result.forEach(([key, value]) => {\n            newPlotData.push({ name: key, ...value });\n          });\n          while (newPlotData.length > 500) {\n            newPlotData = newPlotData.filter((data, index) =>\n              index % 2 ? data : null\n            );\n          }\n          newPlotData.sort(compare); // Some data is jummbled that's why this sort\n          dispatchPlotAndTime({\n            type: \"SETPLOTDATA\",\n            payload: {\n              data: newPlotData,\n            },\n          });\n        }\n      };\n      fetchData();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plotAndTime.base, plotAndTime.plotCountries, plotAndTime.startDate]);\n\n  const handleChangeTime = (event, newValue) => {\n    let newDate;\n    switch (newValue) {\n      case \"1M\":\n        newDate = getDate(0, 1);\n        break;\n\n      case \"3M\":\n        newDate = getDate(0, 3);\n        break;\n\n      case \"9M\":\n        newDate = getDate(0, 9);\n        break;\n\n      case \"1Y\":\n        newDate = getDate(1, 0);\n        break;\n\n      default:\n        newDate = getDate(0, 1);\n        break;\n    }\n    dispatchPlotAndTime({\n      type: \"SETSTARTDATE\",\n      payload: {\n        newDate,\n        newValue,\n      },\n    });\n  };\n\n  // Dialog box click functions\n\n  const handleClickCountryOpenDialogBox = () => {\n    dispatchDialogBox({\n      type: \"COUNTRYOPEN\",\n    });\n  };\n  const handleCloseCountryDialogBox = () => {\n    dispatchDialogBox({\n      type: \"COUNTRYCLOSE\",\n    });\n  };\n  const handleCountryDialogBoxSubmit = () => {\n    if (\n      dialogBox.dialogBoxInput === plotAndTime.base ||\n      plotAndTime.plotCountries.includes(dialogBox.dialogBoxInput)\n    ) {\n      alert(\"Country already ploted or it is selected as the Base\");\n      dispatchDialogBox({\n        type: \"EMPTYBOX\",\n      });\n    } else {\n      dispatchPlotAndTime({\n        type: \"SETPLOTCOUNTRIES\",\n        payload: {\n          data: [...plotAndTime.plotCountries, dialogBox.dialogBoxInput],\n        },\n      });\n      dispatchDialogBox({\n        type: \"COUNTRYCLOSE\",\n      });\n    }\n  };\n\n  const handleDailogBoxInputChange = (e) => {\n    dispatchDialogBox({\n      type: \"SETDIALOGBOX\",\n      payload: e.target.value,\n    });\n  };\n\n  const handleClickBaseOpenDialogBox = () => {\n    dispatchDialogBox({\n      type: \"BASEOPEN\",\n    });\n  };\n  const handleCloseBaseDialogBox = () => {\n    dispatchDialogBox({\n      type: \"BASECLOSE\",\n    });\n  };\n  const handleBaseDialogBoxSubmit = (e) => {\n    if (plotAndTime.plotCountries.includes(dialogBox.dialogBoxInput)) {\n      alert(\"Base and country cannot be same\");\n      dispatchDialogBox({\n        type: \"EMPTYBOX\",\n      });\n    } else {\n      dispatchPlotAndTime({\n        type: \"SETBASE\",\n        payload: {\n          base: dialogBox.dialogBoxInput,\n        },\n      });\n      dispatchDialogBox({\n        type: \"BASECLOSE\",\n      });\n    }\n  };\n\n  // Removing a country from the List\n  const removeCountry = (country) => {\n    let countries = [...plotAndTime.plotCountries];\n    countries = countries.filter((item) => item !== country);\n    dispatchPlotAndTime({\n      type: \"REMOVEDCOUNTRY\",\n      payload: {\n        countries,\n      },\n    });\n  };\n\n  // Custom tooltip for the Graph\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let name = payload ? payload[0].payload.name : \"\";\n      let value = payload ? payload[0].value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${name}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" spacing={2}>\n      <Grid item>\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Typography align=\"center\" variant=\"h4\">\n              Compare Historical Data\n            </Typography>\n          </Grid>\n          <Grid item xs={12} className={classes.options}>\n            <Tabs\n              className={classes.tabs}\n              value={plotAndTime.dataTime}\n              onChange={handleChangeTime}\n              textColor=\"primary\"\n              indicatorColor=\"primary\"\n              centered\n            >\n              <Tab label=\"1M\" value=\"1M\" />\n              <Tab label=\"3M\" value=\"3M\" />\n              <Tab label=\"9M\" value=\"9M\" />\n              <Tab label=\"1Y\" value=\"1Y\" />\n            </Tabs>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container justify=\"center\">\n              <Button\n                style={{ marginRight: \"0.5rem\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                elevation={2}\n                onClick={handleClickCountryOpenDialogBox}\n              >\n                + Add Country\n              </Button>\n              <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={dialogBox.countryOpen}\n                onClose={handleClickCountryOpenDialogBox}\n              >\n                <div className={classes.dialogBox}>\n                  <DialogTitle>Choose Country</DialogTitle>\n                  <DialogContent>\n                    <CountryOption\n                      value={dialogBox.dialogBoxInput}\n                      onChange={handleDailogBoxInputChange}\n                      countryNames={plotAndTime.keys}\n                      optionNo={1}\n                    />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      onClick={handleCloseCountryDialogBox}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={handleCountryDialogBoxSubmit}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      Ok\n                    </Button>\n                  </DialogActions>\n                </div>\n              </Dialog>\n              <Button\n                style={{ marginLeft: \"0.5rem\" }}\n                variant=\"contained\"\n                color=\"primary\"\n                elevation={2}\n                onClick={handleClickBaseOpenDialogBox}\n              >\n                Change Base\n              </Button>\n              <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={dialogBox.baseOpen}\n                onClose={handleCloseBaseDialogBox}\n              >\n                <div className={classes.dialogBox}>\n                  <DialogTitle>Choose Base</DialogTitle>\n                  <DialogContent>\n                    <CountryOption\n                      value={dialogBox.dialogBoxInput}\n                      onChange={handleDailogBoxInputChange}\n                      countryNames={plotAndTime.keys}\n                      optionNo={1}\n                    />\n                  </DialogContent>\n                  <DialogActions>\n                    <Button\n                      onClick={handleCloseBaseDialogBox}\n                      variant=\"contained\"\n                      color={\"primary\"}\n                    >\n                      Cancel\n                    </Button>\n                    <Button\n                      onClick={handleBaseDialogBoxSubmit}\n                      variant=\"contained\"\n                      color={\"primary\"}\n                    >\n                      Ok\n                    </Button>\n                  </DialogActions>\n                </div>\n              </Dialog>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            style={{ marginTop: \"0.5rem\" }}\n          >\n          <Grid container justify=\"center\" direction=\"column\">\n            <Typography variant=\"caption\" align=\"center\" component=\"div\">\n              <span style={{ marginRight: \"0.5rem\" }}>\n                {`Data From: ${plotAndTime.startDate} `}\n              </span>\n              <span\n                style={{ marginLeft: \"0.5rem\" }}\n              >{` To: ${plotAndTime.endDate}`}</span>\n            </Typography>\n            <Typography variant=\"caption\" align=\"center\" component=\"div\">\n              <span style={{ marginRight: \"0.5rem\" }}>\n                Base Country: {plotAndTime.base}\n              </span>\n              <span style={{ marginLeft: \"0.5rem\" }}>\n                PlotedCountries:\n                <span style={{ marginLeft: \"0.25rem\" }}>\n                  {plotAndTime.plotCountries.map((item, index) => (\n                    <Link\n                      key={item}\n                      style={{ color: theme.palette.success.info }}\n                      href={`#${item}`}\n                    >\n                      {index !== plotAndTime.plotCountries.length - 1\n                        ? item + \",\"\n                        : item}\n                    </Link>\n                  ))}\n                </span>\n              </span>\n            </Typography>\n          </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {plotAndTime.failedToLoadData && (\n        <Grid\n          item\n          xs={12}\n          style={{ marginTop: \"3rem\" }}\n        >\n          <Typography component=\"div\" variant=\"h4\" align=\"center\">\n            No data found\n          </Typography>\n        </Grid>\n      )}\n      {!plotAndTime.failedToLoadData ? (\n        plotAndTime.fetchingData ? (\n          <Grid item xs={12} style={{ height: \"50vh\", margin: \"2rem auto\" }}>\n            <CircularProgress style={{color: theme.palette.sideBar.background, opacity: 0.8}} />\n          </Grid>\n        ) : (\n          plotAndTime.plotCountries.map((countryName, index) => (\n            <Grid item id={countryName} container style={{ marginTop: 5 }}>\n              <Grid item xs={false} sm={1}></Grid>\n              <Grid className={classes.cover} item xs={12} sm={10}>\n                <Paper\n                  style={{ position: \"relative\" }}\n                  className={classes.paper}\n                  elevation={3}\n                >\n                  <Grid container>\n                    <Grid item xs={1}></Grid>\n                    <Grid item xs={10}>\n                      <Typography variant=\"h4\" align=\"center\">\n                        {countryName}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={1}>\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => removeCountry(countryName)}\n                      >\n                        <HighlightOffOutlinedIcon color=\"secondary\" />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                  {!plotAndTime.loading ||\n                  plotAndTime.plotCountries.length - 1 !== index ? (\n                    <ResponsiveContainer width={\"100%\"} height={\"90%\"}>\n                      <AreaChart\n                        data={plotAndTime.plotData}\n                        margin={{\n                          top: 10,\n                          right: 0,\n                          left: 0,\n                          bottom: 10,\n                        }}\n                        syncId=\"Chart\"\n                      >\n                        <defs>\n                          <linearGradient\n                            id=\"colorUv\"\n                            x1=\"0\"\n                            y1=\"0\"\n                            x2=\"0\"\n                            y2=\"1\"\n                          >\n                            <stop\n                              offset=\"2%\"\n                              stopColor={theme.palette.graph.primary}\n                              stopOpacity={0.9}\n                            />\n                            <stop\n                              offset=\"97%\"\n                              stopColor={theme.palette.graph.secondary}\n                              stopOpacity={0.1}\n                            />\n                          </linearGradient>\n                        </defs>\n                        {/* <CartesianGrid strokeDasharray=\"2 2\" /> */}\n                        <XAxis\n                          dataKey=\"name\"\n                          stroke={theme.palette.text.secondary}\n                        />\n                        <YAxis\n                          hide\n                          stroke={theme.palette.text.secondary}\n                          type=\"number\"\n                          domain={[\n                            (dataMin) => {\n                              if (dataMin > 1) {\n                                return Math.floor(dataMin);\n                              } else {\n                                return (dataMin - (2 * dataMin) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                            (dataMax) => {\n                              if (dataMax > 1) {\n                                return Math.ceil(dataMax);\n                              } else {\n                                return (dataMax + (3 * dataMax) / 10).toFixed(\n                                  3\n                                );\n                              }\n                            },\n                          ]}\n                        />\n                        <Tooltip content={<CustomToolTip />} />\n                        <Area\n                          type=\"monotone\"\n                          dataKey={countryName}\n                          stroke={theme.palette.text.primary}\n                          strokeWidth={3}\n                          fillOpacity={1}\n                          fill=\"url(#colorUv)\"\n                        />\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  ) : (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        width: \"95%\",\n                        height: \"70%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Loader />\n                    </div>\n                  )}\n                </Paper>\n              </Grid>\n              <Grid item xs={false} sm={1}></Grid>\n            </Grid>\n          ))\n        )\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default History;\n","import { ListItem, ListItemText, ListItemIcon, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.primary.contrastText,\n  },\n  text: {\n    color: theme.palette.primary.contrastText,\n  },\n}));\n\nconst LinkItem = ( props ) => {\n    const {icon, primary, to} = props;\n    const classes = useStyles();\n    \n    const renderLink = React.useMemo(\n        () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n        [to],\n      );\n   \n    return (\n        // <RouterLink to={to}>{primary}</RouterLink>\n        <li>\n        <ListItem button component={renderLink} className={classes.text}>\n            {icon ? <ListItemIcon className={classes.icon}>{icon}</ListItemIcon> : null}\n          <ListItemText primary={primary} />\n        </ListItem>\n        </li>\n    );\n}\n \nexport default LinkItem;\n","import {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LinkItem from \"./LinkItem\";\nimport Home from \"@material-ui/icons/Home\";\nimport History from \"@material-ui/icons/History\";\nimport AttachMoneyRoundedIcon from \"@material-ui/icons/AttachMoneyRounded\";\nimport MoneySharpIcon from \"@material-ui/icons/MoneySharp\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    marginBottom: \"1rem\",\n    width: \"100%\",\n  },\n  wrapper: {\n    height: \"100%\",\n    \"&::before\": {\n      content: '\"\"',\n      display: \"block\",\n      position: \"absolute\",\n      left: 0,\n      top: 0,\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: theme.palette.sideBar.background,\n      // opacity: \"0.6\",\n      // backgroundImage: 'url(https://images.pexels.com/photos/6120172/pexels-photo-6120172.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500)',\n      // backgroundRepeat: 'no-repeat',\n      // backgroundSize: 'cover',\n      // backgroundPosition: 'center',\n    },\n  },\n  heading: {\n    color: theme.palette.primary.contrastText,\n    marginLeft: '-10px',\n  },\n}));\n\nfunction NavOptions(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.wrapper}>\n      <Divider />\n      <List onClick={() => props.onChange()}>\n        <ListItem className={classes.title}>\n        <ListItemIcon><MonetizationOnIcon color=\"primary\" fontSize=\"large\"/></ListItemIcon>\n          <Typography variant=\"h4\" align=\"center\" className={classes.heading}>\n            Currency\n          </Typography>\n        </ListItem>\n        <LinkItem to=\"/\" primary=\"Home\" icon={<Home />}>\n          Home\n        </LinkItem>\n        <LinkItem to=\"/history\" primary=\"History\" icon={<History />} />\n        <LinkItem\n          to=\"/converter\"\n          primary=\"Converter\"\n          icon={<AttachMoneyRoundedIcon />}\n        />\n        <LinkItem\n          to=\"/cryptoCurrency\"\n          primary=\"CryptoCurrency\"\n          icon={<MoneySharpIcon />}\n        />\n      </List>\n    </div>\n  );\n}\n\nexport default NavOptions;\n","import { makeStyles, TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    backgroundColor: theme.palette.background.paper,\n  }\n}))\n\nconst EnhancedTableHead = (props) => {\n  const {\n    classes,\n    order,\n    orderBy,\n    onRequestSort,\n\t\theadCell,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  const classesNew = useStyles();\n\n  return (\n    <TableHead >\n      <TableRow >\n\t\t\t\t{headCell.map(headCell => (\n\t\t\t\t\t<TableCell\n            className={classesNew.title}\n            key={headCell.id}\n            align={headCell.align}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          > {headCell.allowSort ? <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TableSortLabel\n            >\n              {headCell.label}\n            </TableSortLabel>\n\t\t\t\t\t\t}            \n          </TableCell>\t\t\n\t\t\t\t))}\n\t\t\t</TableRow>\n    </TableHead>\n  );\n};\n\nexport default EnhancedTableHead;\n","import {\n  makeStyles,\n  TableContainer,\n  Table,\n  TableBody,\n  TablePagination,\n  TableRow,\n  TableCell,\n  Typography,\n  useTheme,\n  Box,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Line, LineChart, YAxis } from \"recharts\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport Loader from \"./Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    height: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n  logoWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    color: theme.palette.text.primary,\n  },\n  logo: {\n    height: \"1.5rem\",\n    margin: \"0 0.5rem 0 0\",\n  },\n  incresePercentage: {\n    color: \"green\",\n  },\n  pagination: {\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\n// Formating data function\nfunction createData(\n  id,\n  ranking,\n  name,\n  price,\n  imgSrc,\n  marketChange24h,\n  marketChange7d,\n  totalVolume,\n  marketCap,\n  plot\n) {\n  let plotData = plot.map((data) => ({ value: data }));\n  plotData = plotData.filter((data, index) => (index % 2 === 0 ? true : false));\n  return {\n    id,\n    ranking,\n    imgSrc,\n    name,\n    price,\n    marketChange24h,\n    marketChange7d,\n    totalVolume,\n    marketCap,\n    plotData,\n  };\n}\n\n// Table Head\nconst headCells = [\n  {\n    id: \"ranking\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: true,\n    label: \"\",\n    allowSort: false,\n  },\n  {\n    id: \"name\",\n    numeric: false,\n    align: \"left\",\n    disablePadding: true,\n    label: \"Name\",\n    allowSort: true,\n  },\n  {\n    id: \"price\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Price\",\n    allowSort: true,\n  },\n  {\n    id: \"marketChange24h\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"24H\",\n    allowSort: true,\n  },\n  {\n    id: \"totalVolume\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Volume\",\n    allowSort: true,\n  },\n  {\n    id: \"marketCap\",\n    align: \"right\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Market Cap\",\n    allowSort: true,\n  },\n  {\n    id: \"last7Days\",\n    align: \"center\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Last 7 Days\",\n    allowSort: false,\n  },\n];\n\n// Sorting data functions\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst CryptoCurrency = (props) => {\n  // Reducer function\n  const cryptoReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETDATA\":\n        return {\n          ...state,\n          cryptoData: action.payload.data,\n          loading: false,\n          failedToLoad: false,\n        };\n      case \"UPDATESORTINFO\":\n        return {\n          ...state,\n          order: action.payload.order,\n          orderBy: action.payload.orderBy,\n          failedToLoad: false,\n        };\n      case \"FAILEDTOLOAD\":\n        return {\n          ...state,\n          failedToLoad: true,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n  const paginationReducer = (state, action) => {\n    switch (action.type) {\n      case \"SETPAGE\":\n        return {\n          ...state,\n          page: action.payload.page,\n        };\n      case \"SETROWSPERPAGE\":\n        return {\n          ...state,\n          rowsPerPage: action.payload.pages,\n        };\n      default:\n        return {\n          ...state,\n        };\n    }\n  };\n\n  const [paginationData, dispatchPaginationData] = useReducer(\n    paginationReducer,\n    {\n      page: 0,\n      rowsPerPage: 10,\n    }\n  );\n  const [cryptoCurrencyData, dispatchCryptoCurrencyData] = useReducer(\n    cryptoReducer,\n    {\n      cryptoData: [],\n      order: \"desc\",\n      orderBy: \"marketCap\",\n      loading: true,\n      failedToLoad: false,\n    }\n  );\n  const { GetCryptoCurrencyData } = useContext(FetchContext);\n  const classes = useStyles();\n  const theme = useTheme();\n\n  useEffect(() => {\n    props.setPath(\"CryptoCurrency\");\n    // Increase scroll height so user can scroll along X-axis\n    const r = document.querySelector(\":root\");\n    r.style.setProperty(\"--scrollHeight\", \"5px\");\n    async function fetchData() {\n      let failed = false;\n      let result = await GetCryptoCurrencyData().catch((error) => {\n        dispatchCryptoCurrencyData({\n          type: \"FAILEDTOLOAD\",\n        });\n        failed = true;\n      });\n      if (!failed) {\n        let displayData = result.map((result) =>\n          createData(\n            result.id,\n            result.market_cap_rank,\n            result.name,\n            result.current_price,\n            result.image,\n            result.price_change_percentage_24h,\n            result.price_change_percentage_7d_in_currency,\n            result.total_volume,\n            result.market_cap,\n            result.sparkline_in_7d.price\n          )\n        );\n        dispatchCryptoCurrencyData({\n          type: \"SETDATA\",\n          payload: {\n            data: displayData,\n          },\n        });\n      }\n    }\n    fetchData();\n\n    return function cleanUpScroll() {\n      // Decreasing the scroll size back to zero to hide the white dot in dark mode\n      const r = document.querySelector(\":root\");\n      r.style.setProperty(\"--scrollHeight\", \"0\");\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc =\n      cryptoCurrencyData.orderBy === property &&\n      cryptoCurrencyData.order === \"asc\";\n    dispatchCryptoCurrencyData({\n      type: \"UPDATESORTINFO\",\n      payload: {\n        order: isAsc ? \"desc\" : \"asc\",\n        orderBy: property,\n      },\n    });\n  };\n\n  // Pagination Functions\n\n  const handleChangePage = (event, newPage) => {\n    dispatchPaginationData({\n      type: \"SETPAGE\",\n      payload: {\n        page: parseInt(newPage),\n      },\n    });\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    dispatchPaginationData({\n      type: \"SETROWSPERPAGE\",\n      payload: {\n        pages: event.target.value,\n      },\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TableContainer style={{ height: \"90%\" }}>\n        <Table stickyHeader className={classes.table}>\n          <EnhancedTableHead\n            classes={classes}\n            order={cryptoCurrencyData.order}\n            orderBy={cryptoCurrencyData.orderBy}\n            onRequestSort={handleRequestSort}\n            headCell={headCells}\n          ></EnhancedTableHead>\n          {cryptoCurrencyData.failedToLoad ? (\n            <TableBody>\n              <TableRow>\n                <TableCell style={{ border: \"none\" }}>\n                  {\" \"}\n                  {/*To remove the unwanted line apperaing at the edge*/}\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      width: \"95%\",\n                      top: \"40%\",\n                    }}\n                  >\n                    <Typography variant=\"h4\" align=\"center\">\n                      Failed To Load Data\n                    </Typography>\n                  </span>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          ) : cryptoCurrencyData.loading ? (\n            <TableBody>\n              <TableRow>\n                <TableCell style={{ border: \"none\" }}>\n                  {\" \"}\n                  {/*To remove the unwanted line apperaing at the edge*/}\n                  <Loader />\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          ) : (\n            <TableBody>\n              {stableSort(\n                cryptoCurrencyData.cryptoData,\n                getComparator(\n                  cryptoCurrencyData.order,\n                  cryptoCurrencyData.orderBy\n                )\n              )\n                .slice(\n                  paginationData.page * paginationData.rowsPerPage,\n                  paginationData.page * paginationData.rowsPerPage +\n                    paginationData.rowsPerPage\n                )\n                .map((row, index) => {\n                  return (\n                    <TableRow key={row.name}>\n                      <TableCell component=\"th\" id={row.ranking} scope=\"row\">\n                        {row.ranking}\n                      </TableCell>\n                      <TableCell padding=\"none\" align=\"left\">\n                        <Typography\n                          variant=\"body2\"\n                          component={Link}\n                          to={`/cryptoCurrency/${row.id}`}\n                          className={classes.logoWrapper}\n                        >\n                          <img\n                            src={row.imgSrc}\n                            className={classes.logo}\n                            alt=\"logo\"\n                          ></img>\n                          <span>{row.name}</span>\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {\"€\" +\n                          (typeof row.price === \"number\"\n                            ? row.price.toLocaleString()\n                            : row.price)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {row.marketChange24h > 0 ? (\n                          <Typography className={classes.incresePercentage}>\n                            {typeof row.marketChange24h === \"number\"\n                              ? row.marketChange24h.toFixed(3)\n                              : row.marketChange24h}\n                            %\n                          </Typography>\n                        ) : (\n                          <Typography color=\"error\">\n                            {typeof row.marketChange24h === \"number\"\n                              ? row.marketChange24h.toFixed(3)\n                              : row.marketChange24h}\n                            %\n                          </Typography>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {\"€\" +\n                          (typeof row.totalVolume === \"number\"\n                            ? row.totalVolume.toLocaleString()\n                            : row.totalVolume)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        {\"€\" +\n                          (typeof row.marketCap === \"number\"\n                            ? row.marketCap.toLocaleString()\n                            : row.marketCap)}\n                      </TableCell>\n                      <TableCell\n                        padding=\"none\"\n                        size=\"small\"\n                        style={{\n                          height: \"60px\",\n                        }}\n                      >\n                        <Box\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                          }}\n                          component={Link}\n                          to={`/cryptoCurrency/${row.id}`}\n                        >\n                          <LineChart\n                            width={100}\n                            height={57}\n                            data={row.plotData}\n                            style={{\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            <YAxis\n                              hide={true}\n                              domain={[\"dataMin\", \"dataMax\"]}\n                            />\n                            {row.marketChange7d > 0 ? (\n                              <Line\n                                animationDuration={500}\n                                dot={false}\n                                connectNulls={true}\n                                type=\"monotone\"\n                                dataKey=\"value\"\n                                stroke=\"green\"\n                                strokeWidth={2}\n                              />\n                            ) : (\n                              <Line\n                                animationDuration={500}\n                                dot={false}\n                                connectNulls={true}\n                                type=\"monotone\"\n                                dataKey=\"value\"\n                                stroke={theme.palette.error[theme.palette.type]}\n                                strokeWidth={2}\n                              />\n                            )}\n                          </LineChart>\n                        </Box>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          )}\n        </Table>\n      </TableContainer>\n      <TablePagination\n        className={classes.pagination}\n        rowsPerPageOptions={[5, 10, 15]}\n        component=\"div\"\n        count={cryptoCurrencyData.cryptoData.length}\n        rowsPerPage={paginationData.rowsPerPage}\n        page={paginationData.page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      ></TablePagination>\n    </div>\n  );\n};\n\nexport default CryptoCurrency;\n","import {\n  Grid,\n  makeStyles,\n  Typography,\n  Paper,\n  Link,\n  Button,\n  useTheme,\n  ButtonGroup,\n} from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  CartesianGrid,\n  Line,\n  LineChart,\n  Tooltip,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from \"recharts\";\nimport { FetchContext } from \"../Context/FetchContext\";\nimport CountryOption from \"./CountryOption\";\nimport Loader from \"./Loader\";\n\nconst useStyles = makeStyles((theme) => ({\n  block: {\n    display: \"block\",\n  },\n  info: {\n    marginTop: \"-0.75rem\",\n  },\n  loader: {\n    height: \"100%\",\n    widht: \"100%\",\n  },\n  increase: {\n    color: theme.palette.success.main,\n  },\n  description: {\n    maxHeight: 120,\n    overflow: \"hidden\",\n  },\n  readMore: {\n    position: \"absolute\",\n    left: 0,\n    bottom: 0,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  graphWrapper: {\n    padding: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    height: \"100%\",\n    minWidth: 500,\n    color: theme.palette.text.secondary,\n  },\n  cover: {\n    height: \"60vh\",\n    margin: `0.5rem 0 2rem 0`,\n    overflow: \"scroll\",\n  },\n  toolTip: {\n    opacity: 1,\n    padding: \"2px 5px\",\n    color: \"444\",\n    backgroundColor: theme.palette.background.default,\n    border: `1px solid ${theme.palette.divider}`,\n  },\n  countryOption: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\",\n    },\n  },\n}));\n\nconst CryptoCurrencyWithID = (props) => {\n  const { id } = useParams();\n  const {\n    FetchCryptoData,\n    CryptoCurrencyCountries,\n    CryptoHistoryFetch,\n  } = useContext(FetchContext);\n  const [data, setData] = useState({});\n  const [base, setBase] = useState(\"EUR\");\n  const [loading, setLoading] = useState(true);\n  const [descriptionCut, setDescriptionCut] = useState(true);\n  const [supportedCountries, setSupportedCountries] = useState([]);\n  const [selectedPlot, setSelectedPlot] = useState(\"prices\");\n  const [plotData, setPlotData] = useState([]);\n  const [failedToLoad, setFailedToLoad] = useState(false);\n  const theme = useTheme();\n\n  function createData(\n    id,\n    name,\n    symbol,\n    imgSrc,\n    description,\n    rank,\n    score,\n    communityDataScore,\n    reddit_subscribers,\n    twitter_followers,\n    market_rank,\n    market_cap,\n    market_high24,\n    market_low24,\n    market_change24,\n    current_price,\n    price_change24h,\n    price_change30d,\n    price_change1Y,\n    volume,\n    supply,\n    homePageLink\n  ) {\n    let coinGecko = {\n      rank,\n      score,\n    };\n    let community = {\n      score: communityDataScore,\n      reddit: reddit_subscribers,\n      twitter: twitter_followers,\n    };\n    let market = {\n      rank: market_rank,\n      market_cap,\n      high24: market_high24,\n      low24: market_low24,\n      change24: market_change24,\n    };\n    let price = {\n      current: current_price,\n      change24h: price_change24h,\n      change30d: price_change30d,\n      change1Y: price_change1Y,\n    };\n    return {\n      id,\n      name,\n      symbol,\n      imgSrc,\n      description,\n      coinGecko,\n      community,\n      market,\n      price,\n      volume,\n      supply,\n      homePageLink,\n    };\n  }\n\n  const getDate = (date) => {\n    let dd = String(date.getDate()).padStart(2, \"0\");\n    let mm = String(date.getMonth() + 1).padStart(2, \"0\"); // January is 0!\n    let yyyy = date.getFullYear();\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  };\n  function createPlotData(date, value) {\n    date = new Date(date);\n    date = getDate(date);\n    return { date, value };\n  }\n\n  function convertToLocaleString(item) {\n    return typeof item === \"number\" ? item.toLocaleString() : item;\n  }\n\n  useEffect(() => {\n    props.setPath(\"CryptoCurrency\");\n    // Decreasing the scroll size back to zero to hide the white dot in dark mode\n    const r = document.querySelector(\":root\");\n    r.style.setProperty(\"--scrollHeight\", \"0\");\n    const GetCountries = async () => {\n      let failed = false;\n      let result = await CryptoCurrencyCountries().catch((error) => {\n        failed = true;\n        setFailedToLoad(true);\n      });\n      if (!failed) {\n        result = result.map((value) => value.toUpperCase());\n        setSupportedCountries(result);\n      }\n    };\n    GetCountries();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      let failed = false;\n      let result = await FetchCryptoData(id ? id : \"\").catch((error) => {\n        failed = true;\n        setFailedToLoad(true);\n      });\n      if (!failed) {\n        let newData = createData(\n          result.id,\n          result.name,\n          result.symbol,\n          result.image.small,\n          result.description.en,\n          result.coingecko_rank,\n          result.coingecko_score,\n          result.community_score,\n          result.community_data.reddit_subscribers,\n          result.community_data.twitter_followers,\n          result.market_cap_rank,\n          result.market_data.market_cap[base.toLocaleLowerCase()],\n          result.market_data.high_24h[base.toLocaleLowerCase()],\n          result.market_data.low_24h[base.toLocaleLowerCase()],\n          result.market_data.market_cap_change_percentage_24h,\n          result.market_data.current_price[base.toLocaleLowerCase()],\n          result.market_data.price_change_percentage_24h,\n          result.market_data.price_change_percentage_30d,\n          result.market_data.price_change_percentage_1y,\n          result.market_data.total_volume[base.toLocaleLowerCase()],\n          result.market_data.total_supply,\n          result.links.homepage[0]\n        );\n        setData(newData);\n        setLoading(false);\n      }\n    }\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, base]);\n\n  useEffect(() => {\n    async function historyFetch() {\n      let failed = false;\n      let result = await CryptoHistoryFetch(base, id).catch((error) => {\n        failed = true;\n        setFailedToLoad(true);\n      });\n      if (!failed) {\n        result = result[selectedPlot];\n        let newPlotData = result.map((result) =>\n          createPlotData(result[0], result[1])\n        );\n        setPlotData(newPlotData);\n      }\n    }\n    historyFetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, base, selectedPlot]);\n\n  const handleDescription = () => {\n    setDescriptionCut(!descriptionCut);\n  };\n  const handleChangeBase = (e) => {\n    setBase(e.target.value);\n  };\n  const handleSetSelectedPlot = (option) => {\n    setSelectedPlot(option);\n  };\n\n  // Recharts ToolTip\n\n  const CustomToolTip = ({ active, payload, label }) => {\n    if (active) {\n      let date = payload ? payload[0].payload.date : \"\";\n      let value = payload ? payload[0].payload.value : \"\";\n      return (\n        <div className={classes.toolTip}>\n          <p>{`Date: ${date}`}</p>\n          <p>{`Value: ${value} `}</p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.loader}>\n      {failedToLoad ? (\n        <Typography variant=\"h3\" align=\"center\" style={{ paddingTop: \"20vh\" }}>\n          Failed To Load Resources\n        </Typography>\n      ) : !loading ? (\n        <Grid container spacing={2}>\n          <Grid\n            item\n            xs={12}\n            style={{\n              display: \"flex\",\n              direction: \"row\",\n              alignItems: \"center\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Typography\n              variant=\"h4\"\n              style={{ display: \"flex\", alignItems: \"center\" }}\n              component=\"span\"\n            >\n              <img src={data.imgSrc} alt=\"icon\" style={{ padding: \"1rem\" }} />\n              <span>\n                {data.name}({data.symbol.toUpperCase()})\n              </span>\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              component=\"span\"\n              style={{ paddingLeft: \"1rem\" }}\n            >\n              {convertToLocaleString(data.price.current)}{\" \"}\n              {base.toLocaleUpperCase()}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2} direction=\"row\">\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                style={{ padding: \"1rem\", flexGrow: 1 }}\n              >\n                <Paper>\n                  <Grid container style={{ padding: \"1rem\" }} spacing={2}>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h6\">CoinGecko</Typography>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Rank: {data.coinGecko.rank}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Score: {data.coinGecko.score}\n                    </Grid>\n                    <Grid item xs={12} className={classes.subtitle}>\n                      <Typography variant=\"h6\">Community</Typography>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Score: {data.community.score}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      <Link color=\"textSecondary\" href={`${data.homePageLink}`}>\n                        {data.name} HomePage\n                      </Link>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Twitter Followers:{\" \"}\n                      {convertToLocaleString(data.community.twitter)}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Reddit Followers:{\" \"}\n                      {convertToLocaleString(data.community.reddit)}\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                sm={6}\n                style={{ padding: \"1rem\", flexGrow: 1 }}\n              >\n                <Paper>\n                  <Grid container style={{ padding: \"1rem\" }} spacing={2}>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h6\">Market</Typography>\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      Rank: {data.market.rank}\n                    </Grid>\n                    <Grid item xs={6} className={classes.info}>\n                      24h:{\" \"}\n                      {data.market.change24 > 0 ? (\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          className={classes.increase}\n                        >\n                          {typeof data.market.change24 === \"number\"\n                            ? data.market.change24.toFixed(3)\n                            : data.market.change24}\n                          %\n                        </Typography>\n                      ) : (\n                        <Typography\n                          component=\"span\"\n                          variant=\"body2\"\n                          color=\"error\"\n                        >\n                          {typeof data.market.change24 === \"number\"\n                            ? data.market.change24.toFixed(3)\n                            : data.market.change24}\n                          %\n                        </Typography>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      Cap: {convertToLocaleString(data.market.market_cap)}\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      24h High/24h Low:\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        style={{ paddingLeft: \"0.5rem\" }}\n                        className={classes.increase}\n                      >\n                        {data.market.high24}\n                      </Typography>{\" \"}\n                      /\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"error\"\n                      >\n                        {data.market.low24}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      Max Supply: {convertToLocaleString(data.supply)}\n                    </Grid>\n                    <Grid item xs={12} className={classes.info}>\n                      Volume: {convertToLocaleString(data.volume)}\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} style={{ padding: \"1rem\" }}>\n            {data.description.length > 0 ? (\n              <Paper style={{ padding: \"1rem\", position: \"relative\" }}>\n                <Grid container>\n                  <Grid item xs={12} style={{ position: \"relative\" }}>\n                    <Typography variant=\"h6\">Description</Typography>\n                    <Typography\n                      component=\"div\"\n                      variant=\"body2\"\n                      className={descriptionCut ? classes.description : null}\n                    >\n                      <span\n                        dangerouslySetInnerHTML={{ __html: data.description }}\n                      ></span>\n                      <Typography align=\"center\" className={classes.readMore}>\n                        <Button\n                          style={{ width: \"100%\" }}\n                          color=\"primary\"\n                          variant=\"contained\"\n                          onClick={handleDescription}\n                        >\n                          Read {descriptionCut ? \"More\" : \"Less\"}\n                        </Button>\n                      </Typography>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Paper>\n            ) : null}\n            <Paper style={{ padding: \"1rem\", marginTop: \"1rem\" }}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Typography variant=\"h6\">Price Change</Typography>\n                  <Typography variant=\"body1\" component=\"div\">\n                    <Grid container spacing={3}>\n                      <Grid item xs={6} sm={4}>\n                        24 Hours:{\" \"}\n                        {data.price.change24h > 0 ? (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.increase}\n                          >\n                            {typeof data.price.change24h === \"number\"\n                              ? data.price.change24h.toFixed(4)\n                              : data.price.change24h}\n                            %\n                          </Typography>\n                        ) : (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"error\"\n                          >\n                            {typeof data.price.change24h === \"number\"\n                              ? data.price.change24h.toFixed(4)\n                              : data.price.change24h}\n                            %\n                          </Typography>\n                        )}\n                      </Grid>\n                      <Grid item xs={6} sm={4}>\n                        30 Days:{\" \"}\n                        {data.price.change30d > 0 ? (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.increase}\n                          >\n                            {typeof data.price.change30d === \"number\"\n                              ? data.price.change30d.toFixed(4)\n                              : data.price.change30d}\n                            %\n                          </Typography>\n                        ) : (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"error\"\n                          >\n                            {typeof data.price.change30d === \"number\"\n                              ? data.price.change30d.toFixed(4)\n                              : data.price.change30d}\n                            %\n                          </Typography>\n                        )}\n                      </Grid>\n                      <Grid item xs={6} sm={4}>\n                        One Year:{\" \"}\n                        {data.price.change1Y > 0 ? (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.increase}\n                          >\n                            {typeof data.price.change1Y === \"number\"\n                              ? data.price.change1Y.toFixed(4)\n                              : data.price.change1Y}\n                            %\n                          </Typography>\n                        ) : (\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"error\"\n                          >\n                            {typeof data.price.change1Y === \"number\"\n                              ? data.price.change1Y.toFixed(4)\n                              : data.price.change1Y}\n                            %\n                          </Typography>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Grid container alignItems=\"flex-end\">\n                  <Grid item xs={1}></Grid>\n                  <Grid\n                    item\n                    xs={11}\n                    sm={9}\n                    style={{ padding: \"1rem 0 0.25rem 0rem\" }}\n                  >\n                    <ButtonGroup color=\"primary\" disableElevation>\n                      <Button\n                        onClick={() => handleSetSelectedPlot(\"prices\")}\n                        variant={\n                          selectedPlot === \"prices\" ? \"contained\" : \"outlined\"\n                        }\n                      >\n                        Prices\n                      </Button>\n                      <Button\n                        onClick={() => handleSetSelectedPlot(\"market_caps\")}\n                        value=\"Prices\"\n                        variant={\n                          selectedPlot === \"market_caps\"\n                            ? \"contained\"\n                            : \"outlined\"\n                        }\n                      >\n                        Market\n                      </Button>\n                      <Button\n                        onClick={() => handleSetSelectedPlot(\"total_volumes\")}\n                        value=\"Prices\"\n                        variant={\n                          selectedPlot === \"total_volumes\"\n                            ? \"contained\"\n                            : \"outlined\"\n                        }\n                      >\n                        Volume\n                      </Button>\n                    </ButtonGroup>\n                  </Grid>\n                  <Grid item xs={12} sm={1} className={classes.countryOption}>\n                    <CountryOption\n                      value={base}\n                      countryNames={supportedCountries}\n                      onChange={handleChangeBase}\n                      optionNo={1}\n                    ></CountryOption>\n                  </Grid>\n                  <Grid item xs={false} sm={1}></Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={1} sm={false}></Grid>\n              <Grid item xs={12} sm={10} className={classes.cover}>\n                <Paper className={classes.graphWrapper} elevation={3}>\n                  <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <LineChart\n                      data={plotData}\n                      margin={{ left: 5, right: 10, top: 10 }}\n                      padding={{ left: 10 }}\n                    >\n                      <CartesianGrid strokeDasharray=\"2 2\" />\n                      <XAxis hide padding={{ left: 0, right: 15 }} />\n                      <YAxis hide padding={{ bottom: 0, top: 20 }} />\n                      <Tooltip content={<CustomToolTip />} />\n                      <Line\n                        type=\"monotone\"\n                        dot={false}\n                        dataKey=\"value\"\n                        stroke={theme.palette.primary[theme.palette.type]}\n                        strokeWidth={2}\n                        animationDuration={1000}\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </Paper>\n              </Grid>\n              <Grid item xs={1} sm={false}></Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      ) : (\n        <div className={classes.loader}>\n          <Loader />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CryptoCurrencyWithID;\n","import { createMuiTheme, CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useState, createContext } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst ThemeContextProvider = (props) => {\n  const [mode, setMode] = useState(\"light\");\n  const customTheme = createMuiTheme({\n    palette: {\n      type: mode === \"dark\" ? \"dark\" : \"light\",\n      primary: {\n        light: \"#ff9723\",\n        dark: \"#c96a00\",\n        main: \"#ff8906\",\n        contrastText: \"#fffffe\",\n      },\n      text: {\n        primary: mode === \"dark\" ? \"#fffffe\" : \"#0f0e17\",\n        secondary: \"#a7a9be\",\n        disabled: \"rgba(15, 14, 23, 0.38)\",\n        hint: \"rgba(15, 14, 23, 0.38)\",\n        divider: \"rgba(15, 14, 23, 0.38)\",\n      },\n      background: {\n        default: mode === \"dark\" ?  \"#1a1d26\" : \"#fffffe\",\n        paper:  mode === \"dark\" ?  \"#14131f\" : \"#f4f4f5\",\n      },\n      graph: {\n        primary: \"#f4f4f5\",\n        secondary: \"#a6a2c7\",\n        barGraph: mode !== \"dark\" ?  \"#ff9723\" : \"#cf6d00\",\n      },\n      sideBar: {\n        background: \"#0f0e17\",\n      }\n    },\n    overrides: {\n        MuiDrawer: {\n          root: {\n            border: 0,   \n          },   \n      } \n    },\n  });\n\n  const toggleTheme = () => {\n    let newMode = mode === \"light\" ? \"dark\" : \"light\";\n    setMode(newMode);\n  };\n  return (\n    <ThemeContext.Provider value={{ mode, toggleTheme }}>\n      <ThemeProvider theme={ customTheme }>\n        <CssBaseline />\n        {props.children}\n      </ThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;\n","import React, { useState, useContext } from \"react\";\nimport Home from \"./Components/Home\";\nimport Converter from \"./Components/Converter\";\nimport History from \"./Components/History\";\nimport NavOptions from \"./Components/NavOptions\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CountryKeysContextProvider from \"./Context/CountryKeysContext\";\nimport FetchContextProvider from \"./Context/FetchContext\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport { Drawer, Hidden, useTheme } from \"@material-ui/core\";\nimport CryptoCurrency from \"./Components/CryptoCurrency\";\nimport CryptoCurrencyWithID from \"./Components/CryptoCurrencyWithID\";\nimport { ThemeContext } from \"./Context/ThemeContext\";\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n    boxShadow: \"none\",\n    backgroundColor: theme.palette.sideBar.background,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n    color: theme.palette.primary.contrastText,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    margin: \"0\",\n    border: \"none\",\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.sideBar.background,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    overflow: \"scroll\",\n    padding: theme.spacing(3),\n    boxSizing: \"border-box\",\n    maxWidth: \"100vw\",\n    height: `calc(100vh - ${theme.mixins.toolbar.height})`,\n    borderTopLeftRadius: '15px',\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.down(\"sm\")]: {\n      borderTopLeftRadius: '0',\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      height: `calc(100vh - ${theme.mixins.toolbar[\"@media (min-width:600px)\"].minHeight}px)`,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      height: `calc(100vh - ${theme.mixins.toolbar[\"@media (min-width:0px) and (orientation: landscape)\"].minHeight}px)`,\n      borderTopLeftRadius: '0',\n    },\n  },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n  const { window } = props;\n  const theme = useTheme();\n  const [DrawerState, setDrawerState] = useState(false);\n  const [currentPath, setCurrentPath] = useState(\"\");\n  const { mode, toggleTheme } = useContext(ThemeContext);\n\n\n  const DrawerToggle = () => {\n    setDrawerState(!DrawerState);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Router basename=\"/Currency-App\">\n      <div className={classes.root}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              aria-label=\"menu\"\n              onClick={DrawerToggle}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              {currentPath}\n            </Typography>\n            <Button onClick={toggleTheme} color=\"inherit\">\n              {mode === \"dark\" ? <Brightness4Icon /> : <Brightness7Icon />}\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <nav className={classes.drawer} aria-label=\"Navigation Options\">\n          <Hidden mdUp>\n            <Drawer\n              container={container}\n              variant=\"temporary\"\n              anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n              open={DrawerState}\n              onClose={DrawerToggle}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n              }}\n            >\n              <NavOptions onChange={() => setDrawerState(false)} />\n            </Drawer>\n          </Hidden>\n          <Hidden smDown>\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              <NavOptions onChange={() => setDrawerState(false)} />\n            </Drawer>\n          </Hidden>\n        </nav>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <div className={classes.container}>\n            <FetchContextProvider>\n              <CountryKeysContextProvider>\n                <Switch>\n                  <Route exact path=\"/\">\n                    <Home setPath={setCurrentPath} />\n                  </Route>\n                  <Route path=\"/converter\">\n                    <Converter setPath={setCurrentPath} />\n                  </Route>\n                  <Route path=\"/history/:id\">\n                    <History setPath={setCurrentPath} />\n                  </Route>\n                  <Route path=\"/history\">\n                    <History setPath={setCurrentPath} />\n                  </Route>\n                  <Route exact path=\"/cryptoCurrency\">\n                    <CryptoCurrency setPath={setCurrentPath} />\n                  </Route>\n                  <Route path=\"/CryptoCurrency/:id\">\n                    <CryptoCurrencyWithID setPath={setCurrentPath} />\n                  </Route>\n                </Switch>\n              </CountryKeysContextProvider>\n            </FetchContextProvider>\n          </div>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport ThemeContextProvider from \"./Context/ThemeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeContextProvider>\n      <App />\n    </ThemeContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}